import "@typespec/rest";
import "@typespec/http";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";

using TypeSpec.Rest;
using TypeSpec.Http;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;

namespace Microsoft.EventGrid;

/**
 * Provisioning state of the CA Certificate resource.
 */
union CaCertificateProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
}

/**
 * The type of the event channel which represents the direction flow of events.
 */
union ChannelType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  PartnerTopic: "PartnerTopic",
}

/**
 * The kind of event type used.
 */
union EventDefinitionKind {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Inline: "Inline",
}

/**
 * Provisioning state of the channel.
 */
union ChannelProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IdleDueToMirroredPartnerTopicDeletion: "IdleDueToMirroredPartnerTopicDeletion",
}

/**
 * The readiness state of the corresponding partner topic.
 */
union ReadinessState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NeverActivated: "NeverActivated",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Activated: "Activated",
}

/**
 * Provisioning state of the ClientGroup resource.
 */
union ClientGroupProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
}

/**
 * The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.
 */
union ClientCertificateValidationScheme {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SubjectMatchesAuthenticationName: "SubjectMatchesAuthenticationName",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  DnsMatchesAuthenticationName: "DnsMatchesAuthenticationName",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UriMatchesAuthenticationName: "UriMatchesAuthenticationName",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IpMatchesAuthenticationName: "IpMatchesAuthenticationName",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  EmailMatchesAuthenticationName: "EmailMatchesAuthenticationName",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ThumbprintMatch: "ThumbprintMatch",
}

/**
 * Indicates if the client is enabled or not. Default value is Enabled.
 */
union ClientState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
}

/**
 * Provisioning state of the Client resource.
 */
union ClientProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
}

/**
 * Status of the connection.
 */
union PersistedConnectionStatus {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Pending: "Pending",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Approved: "Approved",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Rejected: "Rejected",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disconnected: "Disconnected",
}

/**
 * Provisioning state of the Private Endpoint Connection.
 */
union ResourceProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Provisioning state of the Event Grid Domain Resource.
 */
union DomainProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Minimum TLS version of the publisher allowed to publish to this domain
 */
union TlsVersion {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  `1.0`: "1.0",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  `1.1`: "1.1",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  `1.2`: "1.2",
}

/**
 * This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
 */
union InputSchema {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  EventGridSchema: "EventGridSchema",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CustomEventSchema: "CustomEventSchema",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CloudEventSchemaV1_0: "CloudEventSchemaV1_0",
}

/**
 * Type of the custom mapping
 */
union InputSchemaMappingType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Json: "Json",
}

/**
 * This determines if traffic is allowed over public network. By default it is enabled.
 * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
 */
union PublicNetworkAccess {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
}

/**
 * Action to perform based on the match or no match of the IpMask.
 */
union IpActionType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Allow: "Allow",
}

/**
 * Data Residency Boundary of the resource.
 */
union DataResidencyBoundary {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  WithinGeopair: "WithinGeopair",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  WithinRegion: "WithinRegion",
}

/**
 * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
 */
union IdentityType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  None: "None",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SystemAssigned: "SystemAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UserAssigned: "UserAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  `SystemAssigned, UserAssigned`: "SystemAssigned, UserAssigned",
}

/**
 * Provisioning state of the domain topic.
 */
union DomainTopicProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Type of the delivery attribute or header name.
 */
union DeliveryAttributeMappingType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Static: "Static",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Dynamic: "Dynamic",
}

/**
 * Provisioning state of the event subscription.
 */
union SubscriptionProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  AwaitingManualAction: "AwaitingManualAction",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  DeleteFailed: "DeleteFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CreateFailed: "CreateFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UpdatedFailed: "UpdatedFailed",
}

/**
 * Delivery mode of the event subscription.
 */
union DeliveryMode {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Queue: "Queue",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Push: "Push",
}

/**
 * The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
 */
union EventSubscriptionIdentityType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SystemAssigned: "SystemAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UserAssigned: "UserAssigned",
}

/**
 * Type of the endpoint for the dead letter destination
 */
union DeadLetterEndPointType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StorageBlob: "StorageBlob",
}

/**
 * Type of the endpoint for the event subscription destination.
 */
union EndpointType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  WebHook: "WebHook",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  EventHub: "EventHub",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StorageQueue: "StorageQueue",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  HybridConnection: "HybridConnection",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ServiceBusQueue: "ServiceBusQueue",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ServiceBusTopic: "ServiceBusTopic",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  AzureFunction: "AzureFunction",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  MonitorAlert: "MonitorAlert",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NamespaceTopic: "NamespaceTopic",
}

/**
 * The event delivery schema for the event subscription.
 */
union DeliverySchema {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CloudEventSchemaV1_0: "CloudEventSchemaV1_0",
}

/**
 * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
 */
union FilterOperatorType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberIn: "NumberIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberNotIn: "NumberNotIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberLessThan: "NumberLessThan",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberGreaterThan: "NumberGreaterThan",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberLessThanOrEquals: "NumberLessThanOrEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberGreaterThanOrEquals: "NumberGreaterThanOrEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  BoolEquals: "BoolEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringIn: "StringIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotIn: "StringNotIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringBeginsWith: "StringBeginsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringEndsWith: "StringEndsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringContains: "StringContains",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberInRange: "NumberInRange",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberNotInRange: "NumberNotInRange",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotBeginsWith: "StringNotBeginsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotEndsWith: "StringNotEndsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotContains: "StringNotContains",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IsNullOrUndefined: "IsNullOrUndefined",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IsNotNull: "IsNotNull",
}

/**
 * Provisioning state of the event subscription.
 */
union EventSubscriptionProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  AwaitingManualAction: "AwaitingManualAction",
}

/**
 * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
 */
union AdvancedFilterOperatorType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberIn: "NumberIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberNotIn: "NumberNotIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberLessThan: "NumberLessThan",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberGreaterThan: "NumberGreaterThan",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberLessThanOrEquals: "NumberLessThanOrEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberGreaterThanOrEquals: "NumberGreaterThanOrEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  BoolEquals: "BoolEquals",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringIn: "StringIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotIn: "StringNotIn",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringBeginsWith: "StringBeginsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringEndsWith: "StringEndsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringContains: "StringContains",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberInRange: "NumberInRange",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NumberNotInRange: "NumberNotInRange",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotBeginsWith: "StringNotBeginsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotEndsWith: "StringNotEndsWith",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  StringNotContains: "StringNotContains",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IsNullOrUndefined: "IsNullOrUndefined",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IsNotNull: "IsNotNull",
}

/**
 * The event delivery schema for the event subscription.
 */
union EventDeliverySchema {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  EventGridSchema: "EventGridSchema",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CustomInputSchema: "CustomInputSchema",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CloudEventSchemaV1_0: "CloudEventSchemaV1_0",
}

/**
 * Provisioning state of the namespace resource.
 */
union NamespaceProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  DeleteFailed: "DeleteFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CreateFailed: "CreateFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UpdatedFailed: "UpdatedFailed",
}

/**
 * Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.
 */
union CustomDomainValidationState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Pending: "Pending",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Approved: "Approved",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ErrorRetrievingDnsRecord: "ErrorRetrievingDnsRecord",
}

/**
 * The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
 */
union CustomDomainIdentityType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SystemAssigned: "SystemAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UserAssigned: "UserAssigned",
}

/**
 * Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
 */
union TopicSpacesConfigurationState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
}

/**
 * Static routing enrichment value type. For e.g. this property value can be 'String'.
 */
union StaticRoutingEnrichmentType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  String: "String",
}

/**
 * Routing identity type for topic spaces configuration.
 */
union RoutingIdentityType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  None: "None",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SystemAssigned: "SystemAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UserAssigned: "UserAssigned",
}

/**
 * The name of the SKU.
 */
union SkuName {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Standard: "Standard",
}

/**
 * Provisioning state of the namespace topic.
 */
union NamespaceTopicProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  DeleteFailed: "DeleteFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CreateFailed: "CreateFailed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UpdatedFailed: "UpdatedFailed",
}

/**
 * Publisher type of the namespace topic.
 */
union PublisherType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Custom: "Custom",
}

/**
 * This determines the format that is expected for incoming events published to the topic.
 */
union EventInputSchema {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  CloudEventSchemaV1_0: "CloudEventSchemaV1_0",
}

/**
 * Provisioning state of the topic.
 */
union TopicProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Provisioning state of the partner configuration.
 */
union PartnerConfigurationProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Provisioning state of the partner namespace.
 */
union PartnerNamespaceProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * This determines if events published to this partner namespace should use the source attribute in the event payload
 * or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.
 */
union PartnerTopicRoutingMode {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SourceEventAttribute: "SourceEventAttribute",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ChannelNameHeader: "ChannelNameHeader",
}

/**
 * Provisioning state of the partner registration.
 */
union PartnerRegistrationProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Provisioning state of the partner topic.
 */
union PartnerTopicProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  IdleDueToMirroredChannelResourceDeletion: "IdleDueToMirroredChannelResourceDeletion",
}

/**
 * Activation state of the partner topic.
 */
union PartnerTopicActivationState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NeverActivated: "NeverActivated",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Activated: "Activated",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deactivated: "Deactivated",
}

/**
 * The allowed permission.
 */
union PermissionType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Publisher: "Publisher",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Subscriber: "Subscriber",
}

/**
 * Provisioning state of the PermissionBinding resource.
 */
union PermissionBindingProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union PrivateEndpointConnectionsParentType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  topics: "topics",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  domains: "domains",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  partnerNamespaces: "partnerNamespaces",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  namespaces: "namespaces",
}

/**
 * Provisioning state of the TopicSpace resource.
 */
union TopicSpaceProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
}

/**
 * Region type of the resource.
 */
union ResourceRegionType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  RegionalResource: "RegionalResource",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  GlobalResource: "GlobalResource",
}

/**
 * Provisioning state of the topic type.
 */
union TopicTypeProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union TopicTypeSourceScope {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Resource: "Resource",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ResourceGroup: "ResourceGroup",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  AzureSubscription: "AzureSubscription",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  ManagementGroup: "ManagementGroup",
}

/**
 * Provisioning state of the verified partner.
 */
union VerifiedPartnerProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * The severity that will be attached to every Alert fired through this event subscription.
 * This field must be provided.
 */
union MonitorAlertSeverity {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Sev0: "Sev0",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Sev1: "Sev1",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Sev2: "Sev2",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Sev3: "Sev3",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Sev4: "Sev4",
}

/**
 * The properties of CA certificate.
 */
model CaCertificateProperties {
  /**
   * Description for the CA Certificate resource.
   */
  description?: string;

  /**
   * Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.
   */
  encodedCertificate?: string;

  /**
   * Certificate issue time in UTC. This is a read-only field.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  issueTimeInUtc?: utcDateTime;

  /**
   * Certificate expiry time in UTC. This is a read-only field.
   */
  @visibility(Lifecycle.Read)
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expiryTimeInUtc?: utcDateTime;

  /**
   * Provisioning state of the CA Certificate resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: CaCertificateProvisioningState;
}

/**
 * Definition of a Resource.
 */
model Resource {
  /**
   * Fully qualified identifier of the resource.
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * Name of the resource.
   */
  @visibility(Lifecycle.Read)
  name?: string;

  /**
   * Type of the resource.
   */
  @visibility(Lifecycle.Read)
  type?: string;
}

/**
 * Properties of the Channel.
 */
model ChannelProperties {
  /**
   * The type of the event channel which represents the direction flow of events.
   */
  channelType?: ChannelType;

  /**
   * This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
   */
  partnerTopicInfo?: PartnerTopicInfo;

  /**
   * Context or helpful message that can be used during the approval process by the subscriber.
   */
  messageForActivation?: string;

  /**
   * Provisioning state of the channel.
   */
  provisioningState?: ChannelProvisioningState;

  /**
   * The readiness state of the corresponding partner topic.
   */
  readinessState?: ReadinessState;

  /**
   * Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,
   * the channel and corresponding partner topic are deleted.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeIfNotActivatedUtc?: utcDateTime;
}

/**
 * Properties of the corresponding partner topic of a Channel.
 */
model PartnerTopicInfo {
  /**
   * Azure subscription ID of the subscriber. The partner topic associated with the channel will be
   * created under this Azure subscription.
   */
  azureSubscriptionId?: string;

  /**
   * Azure Resource Group of the subscriber. The partner topic associated with the channel will be
   * created under this resource group.
   */
  resourceGroupName?: string;

  /**
   * Name of the partner topic associated with the channel.
   */
  name?: string;

  /**
   * Event Type Information for the partner topic. This information is provided by the publisher and can be used by the
   * subscriber to view different types of events that are published.
   */
  eventTypeInfo?: EventTypeInfo;

  /**
   * The source information is provided by the publisher to determine the scope or context from which the events
   * are originating. This information can be used by the subscriber during the approval process of the
   * created partner topic.
   */
  source?: string;
}

/**
 * The event type information for Channels.
 */
model EventTypeInfo {
  /**
   * The kind of event type used.
   */
  kind?: EventDefinitionKind;

  /**
   * A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.
   * An example of a valid inline event name is "Contoso.OrderCreated".
   * The inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  inlineEventTypes?: Record<InlineEventProperties>;
}

/**
 * Additional information about every inline event.
 */
model InlineEventProperties {
  /**
   * The description for the inline event.
   */
  description?: string;

  /**
   * The displayName for the inline event.
   */
  displayName?: string;

  /**
   * The documentationUrl for the inline event.
   */
  documentationUrl?: string;

  /**
   * The dataSchemaUrl for the inline event.
   */
  dataSchemaUrl?: string;
}

/**
 * Properties of the Channel update.
 */
model ChannelUpdateParameters {
  /**
   * Properties of the channel update parameters.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: ChannelUpdateParametersProperties;
}

/**
 * Properties of the channel update parameters.
 */
model ChannelUpdateParametersProperties {
  /**
   * Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,
   * the channel and corresponding partner topic or partner destination are deleted.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeIfNotActivatedUtc?: utcDateTime;

  /**
   * Partner topic properties which can be updated if the channel is of type PartnerTopic.
   */
  partnerTopicInfo?: PartnerUpdateTopicInfo;
}

/**
 * Update properties for the corresponding partner topic of a channel.
 */
model PartnerUpdateTopicInfo {
  /**
   * Event type info for the partner topic
   */
  eventTypeInfo?: EventTypeInfo;
}

/**
 * Full endpoint URL of an event subscription
 */
model EventSubscriptionFullUrl {
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
}

/**
 * The properties of client group.
 */
model ClientGroupProperties {
  /**
   * Description for the Client Group resource.
   */
  description?: string;

  /**
   * The grouping query for the clients.
   * Example : attributes.keyName IN ['a', 'b', 'c'].
   */
  query?: string;

  /**
   * Provisioning state of the ClientGroup resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ClientGroupProvisioningState;
}

/**
 * The properties of client.
 */
model ClientProperties {
  /**
   * Description for the Client resource.
   */
  description?: string;

  /**
   * The name presented by the client for authentication. The default value is the name of the resource.
   */
  authenticationName?: string;

  /**
   * The client certificate authentication information.
   */
  clientCertificateAuthentication?: ClientCertificateAuthentication;

  /**
   * Indicates if the client is enabled or not. Default value is Enabled.
   */
  state?: ClientState = ClientState.Enabled;

  /**
   * Attributes for the client. Supported values are int, bool, string, string[].
   * Example:
   * "attributes": { "room": "345", "floor": 12, "deviceTypes": ["Fan", "Light"] }
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  attributes?: Record<unknown>;

  /**
   * Provisioning state of the Client resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ClientProvisioningState;
}

/**
 * The certificate authentication properties for the client.
 */
model ClientCertificateAuthentication {
  /**
   * The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.
   */
  validationScheme?: ClientCertificateValidationScheme;

  /**
   * The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.
   */
  allowedThumbprints?: string[];
}

/**
 * Properties of the Event Grid Domain Resource.
 */
model DomainProperties {
  /**
   * List of private endpoint connections.
   */
  @visibility(Lifecycle.Read)
  privateEndpointConnections?: PrivateEndpointConnection[];

  /**
   * Provisioning state of the Event Grid Domain Resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: DomainProvisioningState;

  /**
   * Minimum TLS version of the publisher allowed to publish to this domain
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * Endpoint for the Event Grid Domain Resource which is used for publishing the events.
   */
  @visibility(Lifecycle.Read)
  endpoint?: string;

  /**
   * This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
   */
  inputSchema?: InputSchema;

  /**
   * Event Type Information for the domain. This information is provided by the publisher and can be used by the
   * subscriber to view different types of events that are published.
   */
  eventTypeInfo?: EventTypeInfo;

  /**
   * Information about the InputSchemaMapping which specified the info about mapping event payload.
   */
  inputSchemaMapping?: InputSchemaMapping;

  /**
   * Metric resource id for the Event Grid Domain Resource.
   */
  @visibility(Lifecycle.Read)
  metricResourceId?: string;

  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
   */
  disableLocalAuth?: boolean;

  /**
   * This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
   * In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
   * When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is
   * created at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic
   * by the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the
   * domain topic on demand if needed.
   */
  autoCreateTopicWithFirstSubscription?: boolean = true;

  /**
   * This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
   * In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
   * When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope
   * of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed
   * (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full
   * control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer
   * resources by the user.
   */
  autoDeleteTopicWithLastSubscription?: boolean = true;

  /**
   * Data Residency Boundary of the resource.
   */
  dataResidencyBoundary?: DataResidencyBoundary;
}

/**
 * Properties of the private endpoint connection resource.
 */
model PrivateEndpointConnectionProperties {
  /**
   * The Private Endpoint resource for this Connection.
   */
  privateEndpoint?: PrivateEndpoint;

  /**
   * GroupIds from the private link service resource.
   */
  groupIds?: string[];

  /**
   * Details about the state of the connection.
   */
  privateLinkServiceConnectionState?: ConnectionState;

  /**
   * Provisioning state of the Private Endpoint Connection.
   */
  provisioningState?: ResourceProvisioningState;
}

/**
 * PrivateEndpoint information.
 */
model PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint.
   */
  id?: string;
}

/**
 * ConnectionState information.
 */
model ConnectionState {
  /**
   * Status of the connection.
   */
  status?: PersistedConnectionStatus;

  /**
   * Description of the connection state.
   */
  description?: string;

  /**
   * Actions required (if any).
   */
  actionsRequired?: string;
}

/**
 * By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
 */
@discriminator("inputSchemaMappingType")
model InputSchemaMapping {
  /**
   * Type of the custom mapping
   */
  inputSchemaMappingType: InputSchemaMappingType;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model InboundIpRule {
  /**
   * IP Address in CIDR notation e.g., 10.0.0.0/8.
   */
  ipMask?: string;

  /**
   * Action to perform based on the match or no match of the IpMask.
   */
  action?: IpActionType;
}

/**
 * The identity information for the resource.
 */
model IdentityInfo {
  /**
   * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
   */
  type?: IdentityType;

  /**
   * The principal ID of resource identity.
   */
  principalId?: string;

  /**
   * The tenant ID of resource.
   */
  tenantId?: string;

  /**
   * The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   * This property is currently not used and reserved for future usage.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  userAssignedIdentities?: Record<UserIdentityProperties>;
}

/**
 * The information about the user identity.
 */
model UserIdentityProperties {
  /**
   * The principal id of user assigned identity.
   */
  principalId?: string;

  /**
   * The client id of user assigned identity.
   */
  clientId?: string;
}

/**
 * Properties of the Domain update.
 */
model DomainUpdateParameters {
  /**
   * Tags of the domains resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Properties of the resource.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: DomainUpdateParameterProperties;

  /**
   * Identity information for the resource.
   */
  identity?: IdentityInfo;
}

/**
 * Information of domain update parameter properties.
 */
model DomainUpdateParameterProperties {
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * Minimum TLS version of the publisher allowed to publish to this domain
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
   */
  disableLocalAuth?: boolean;

  /**
   * This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
   * In this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
   * When this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is
   * created at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic
   * by the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the
   * flexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the
   * domain topic on demand if needed.
   */
  autoCreateTopicWithFirstSubscription?: boolean;

  /**
   * This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.
   * In this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.
   * When this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope
   * of the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed
   * (e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full
   * control of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer
   * resources by the user.
   */
  autoDeleteTopicWithLastSubscription?: boolean;

  /**
   * The data residency boundary for the domain.
   */
  dataResidencyBoundary?: DataResidencyBoundary;

  /**
   * The eventTypeInfo for the domain.
   */
  eventTypeInfo?: EventTypeInfo;
}

/**
 * Shared access keys of the Domain.
 */
model DomainSharedAccessKeys {
  /**
   * Shared access key1 for the domain.
   */
  key1?: string;

  /**
   * Shared access key2 for the domain.
   */
  key2?: string;
}

/**
 * Domain regenerate share access key request.
 */
model DomainRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2.
   */
  keyName: string;
}

/**
 * Properties of the Domain Topic.
 */
model DomainTopicProperties {
  /**
   * Provisioning state of the domain topic.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: DomainTopicProvisioningState;
}

/**
 * Result of the Get delivery attributes operation.
 */
model DeliveryAttributeListResult {
  /**
   * A collection of DeliveryAttributeMapping
   */
  value?: DeliveryAttributeMapping[];
}

/**
 * Delivery attribute mapping details.
 */
@discriminator("type")
model DeliveryAttributeMapping {
  /**
   * Name of the delivery attribute or header.
   */
  name?: string;

  /**
   * Type of the delivery attribute or header name.
   */
  type: DeliveryAttributeMappingType;
}

/**
 * Properties of the event subscription.
 */
model SubscriptionProperties {
  /**
   * Provisioning state of the event subscription.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: SubscriptionProvisioningState;

  /**
   * Information about the delivery configuration of the event subscription.
   */
  deliveryConfiguration?: DeliveryConfiguration;

  /**
   * The event delivery schema for the event subscription.
   */
  eventDeliverySchema?: DeliverySchema;

  /**
   * Information about the filter for the event subscription.
   */
  filtersConfiguration?: FiltersConfiguration;

  /**
   * Expiration time of the event subscription.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeUtc?: utcDateTime;
}

/**
 * Properties of the delivery configuration information of the event subscription.
 */
model DeliveryConfiguration {
  /**
   * Delivery mode of the event subscription.
   */
  deliveryMode?: DeliveryMode;

  /**
   * This property should be populated when deliveryMode is queue and represents information about the queue subscription.
   */
  queue?: QueueInfo;

  /**
   * This property should be populated when deliveryMode is push and represents information about the push subscription.
   */
  push?: PushInfo;
}

/**
 * Properties of the Queue info for event subscription.
 */
model QueueInfo {
  /**
   * Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.
   * If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,
   * the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.
   */
  receiveLockDurationInSeconds?: int32;

  /**
   * The maximum delivery count of the events.
   */
  maxDeliveryCount?: int32;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterDestinationWithResourceIdentity?: DeadLetterWithResourceIdentity;

  /**
   * Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.
   * This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
   *     - (n) is replaced by the value of each time element that follows the (n).
   *     - P is the duration (or Period) designator and is always placed at the beginning of the duration.
   *     - Y is the year designator, and it follows the value for the number of years.
   *     - M is the month designator, and it follows the value for the number of months.
   *     - W is the week designator, and it follows the value for the number of weeks.
   *     - D is the day designator, and it follows the value for the number of days.
   *     - T is the time designator, and it precedes the time components.
   *     - H is the hour designator, and it follows the value for the number of hours.
   *     - M is the minute designator, and it follows the value for the number of minutes.
   *     - S is the second designator, and it follows the value for the number of seconds.
   * This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined
   * by topic’s EventRetentionInDays value. The followings are examples of valid values:
   *     - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
   *     - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
   */
  eventTimeToLive?: duration;
}

/**
 * Information about the deadletter destination with resource identity.
 */
model DeadLetterWithResourceIdentity {
  /**
   * The identity to use when dead-lettering events.
   */
  identity?: EventSubscriptionIdentity;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during dead-lettering.
   */
  deadLetterDestination?: DeadLetterDestination;
}

/**
 * The identity information with the event subscription.
 */
model EventSubscriptionIdentity {
  /**
   * The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
   */
  type?: EventSubscriptionIdentityType;

  /**
   * The user identity associated with the resource.
   */
  userAssignedIdentity?: string;
}

/**
 * Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.
 */
@discriminator("endpointType")
model DeadLetterDestination {
  /**
   * Type of the endpoint for the dead letter destination
   */
  endpointType: DeadLetterEndPointType;
}

/**
 * Properties of the destination info for event subscription supporting push.
 */
model PushInfo {
  /**
   * The maximum delivery count of the events.
   */
  maxDeliveryCount?: int32;

  /**
   * Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.
   * This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
   *     - (n) is replaced by the value of each time element that follows the (n).
   *     - P is the duration (or Period) designator and is always placed at the beginning of the duration.
   *     - Y is the year designator, and it follows the value for the number of years.
   *     - M is the month designator, and it follows the value for the number of months.
   *     - W is the week designator, and it follows the value for the number of weeks.
   *     - D is the day designator, and it follows the value for the number of days.
   *     - T is the time designator, and it precedes the time components.
   *     - H is the hour designator, and it follows the value for the number of hours.
   *     - M is the minute designator, and it follows the value for the number of minutes.
   *     - S is the second designator, and it follows the value for the number of seconds.
   * This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined
   * by topic’s EventRetentionInDays value. The followings are examples of valid values:
   *     - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
   *     - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
   */
  eventTimeToLive?: string;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during dead-lettering.
   */
  deadLetterDestinationWithResourceIdentity?: DeadLetterWithResourceIdentity;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.
   */
  deliveryWithResourceIdentity?: DeliveryWithResourceIdentity;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery.
   */
  destination?: EventSubscriptionDestination;
}

/**
 * Information about the delivery for an event subscription with resource identity.
 */
model DeliveryWithResourceIdentity {
  /**
   * The identity to use when delivering events.
   */
  identity?: EventSubscriptionIdentity;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery.
   */
  destination?: EventSubscriptionDestination;
}

/**
 * Information about the destination for an event subscription.
 */
@discriminator("endpointType")
model EventSubscriptionDestination {
  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: EndpointType;
}

/**
 * Filters configuration for the Event Subscription.
 */
model FiltersConfiguration {
  /**
   * A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
   */
  includedEventTypes?: string[];

  /**
   * An array of filters that are used for filtering event subscriptions.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  filters?: Filter[];
}

/**
 * This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate
 * an object of a derived class such as BoolEqualsFilter, NumberInFilter etc depending on the type of the key based on
 * which you want to filter.
 */
@discriminator("operatorType")
model Filter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: FilterOperatorType;

  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
}

/**
 * Properties of the Event Subscription update.
 */
model SubscriptionUpdateParameters {
  /**
   * Properties of the Event Subscription update parameters.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: SubscriptionUpdateParametersProperties;
}

/**
 * Properties of the Event Subscription update parameters.
 */
model SubscriptionUpdateParametersProperties {
  /**
   * Information about the delivery configuration of the event subscription.
   */
  deliveryConfiguration?: DeliveryConfiguration;

  /**
   * The event delivery schema for the event subscription.
   */
  eventDeliverySchema?: DeliverySchema;

  /**
   * Information about the filter for the event subscription.
   */
  filtersConfiguration?: FiltersConfiguration;

  /**
   * Expiration time of the event subscription.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeUtc?: utcDateTime;
}

/**
 * Properties of the Event Subscription.
 */
model EventSubscriptionProperties {
  /**
   * Name of the topic of the event subscription.
   */
  @visibility(Lifecycle.Read)
  topic?: string;

  /**
   * Provisioning state of the event subscription.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: EventSubscriptionProvisioningState;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  destination?: EventSubscriptionDestination;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deliveryWithResourceIdentity?: DeliveryWithResourceIdentity;

  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;

  /**
   * List of user defined labels.
   */
  labels?: string[];

  /**
   * Expiration time of the event subscription.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeUtc?: utcDateTime;

  /**
   * The event delivery schema for the event subscription.
   */
  eventDeliverySchema?: EventDeliverySchema;

  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
   */
  retryPolicy?: RetryPolicy;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterDestination?: DeadLetterDestination;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterWithResourceIdentity?: DeadLetterWithResourceIdentity;
}

/**
 * Filter for the Event Subscription.
 */
model EventSubscriptionFilter {
  /**
   * An optional string to filter events for an event subscription based on a resource path prefix.
   * The format of this depends on the publisher of the events.
   * Wildcard characters are not supported in this path.
   */
  subjectBeginsWith?: string;

  /**
   * An optional string to filter events for an event subscription based on a resource path suffix.
   * Wildcard characters are not supported in this path.
   */
  subjectEndsWith?: string;

  /**
   * A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
   */
  includedEventTypes?: string[];

  /**
   * Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter
   * should be compared in a case sensitive manner.
   */
  isSubjectCaseSensitive?: boolean;

  /**
   * Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
   */
  enableAdvancedFilteringOnArrays?: boolean;

  /**
   * An array of advanced filters that are used for filtering event subscriptions.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  advancedFilters?: AdvancedFilter[];
}

/**
 * This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.
 */
@discriminator("operatorType")
model AdvancedFilter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: AdvancedFilterOperatorType;

  /**
   * The field/property in the event based on which you want to filter.
   */
  key?: string;
}

/**
 * Information about the retry policy for an event subscription.
 */
model RetryPolicy {
  /**
   * Maximum number of delivery retry attempts for events.
   */
  maxDeliveryAttempts?: int32 = 30;

  /**
   * Time To Live (in minutes) for events.
   */
  eventTimeToLiveInMinutes?: int32 = 1440;
}

/**
 * Properties of the Event Subscription update.
 */
model EventSubscriptionUpdateParameters {
  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  destination?: EventSubscriptionDestination;

  /**
   * Information about the destination where events have to be delivered for the event subscription.
   * Uses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deliveryWithResourceIdentity?: DeliveryWithResourceIdentity;

  /**
   * Information about the filter for the event subscription.
   */
  filter?: EventSubscriptionFilter;

  /**
   * List of user defined labels.
   */
  labels?: string[];

  /**
   * Information about the expiration time for the event subscription.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeUtc?: utcDateTime;

  /**
   * The event delivery schema for the event subscription.
   */
  eventDeliverySchema?: EventDeliverySchema;

  /**
   * The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
   */
  retryPolicy?: RetryPolicy;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterDestination?: DeadLetterDestination;

  /**
   * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
   * Uses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering.
   */
  deadLetterWithResourceIdentity?: DeadLetterWithResourceIdentity;
}

/**
 * Properties of the namespace resource.
 */
model NamespaceProperties {
  /**
   * List of private endpoint connections.
   */
  privateEndpointConnections?: PrivateEndpointConnection[];

  /**
   * Provisioning state of the namespace resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: NamespaceProvisioningState;

  /**
   * Topics configuration information for the namespace resource
   */
  topicsConfiguration?: TopicsConfiguration;

  /**
   * Topic spaces configuration information for the namespace resource
   */
  topicSpacesConfiguration?: TopicSpacesConfiguration;

  /**
   * This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this
   * property is not specified explicitly by the user, its default value depends on the following conditions:
   *     a. For Availability Zones enabled regions - The default property value would be true.
   *     b. For non-Availability Zones enabled regions - The default property value would be false.
   * Once specified, this property cannot be updated.
   */
  isZoneRedundant?: boolean;

  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.
   */
  minimumTlsVersionAllowed?: TlsVersion;
}

/**
 * Properties of the Topics Configuration.
 */
model TopicsConfiguration {
  /**
   * The hostname for the topics configuration. This is a read-only property.
   */
  @visibility(Lifecycle.Read)
  hostname?: string;

  /**
   * List of custom domain configurations for the namespace.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomains?: CustomDomainConfiguration[];
}

/**
 * A custom domain configuration that allows users to publish to their own domain name.
 */
model CustomDomainConfiguration {
  /**
   * Fully Qualified Domain Name (FQDN) for the custom domain.
   */
  fullyQualifiedDomainName: string;

  /**
   * Validation state for the custom domain. This is a read only property and is initially set to 'Pending' and will be updated to 'Approved' by Event Grid only after ownership of the domain name has been successfully validated.
   */
  validationState?: CustomDomainValidationState;

  /**
   * Identity info for accessing the certificate for the custom domain. This identity info must match an identity that has been set on the namespace.
   */
  identity?: CustomDomainIdentity;

  /**
   * The URL for the certificate that is used for publishing to the custom domain. We currently support certificates stored in Azure Key Vault only. While certificate URL can be either
   * versioned URL of the following format https://{key-vault-name}.vault.azure.net/certificates/{certificate-name}/{version-id}, or unversioned URL of the following format (e.g.,
   * https://contosovault.vault.azure.net/certificates/contosocert, we support unversioned certificate URL only (e.g., https://contosovault.vault.azure.net/certificates/contosocert)
   */
  certificateUrl?: string;

  /**
   * Expected DNS TXT record name. Event Grid will check for a TXT record with this name in the DNS record set of the custom domain name to prove ownership over the domain.
   * The values under this TXT record must contain the expected TXT record value.
   */
  expectedTxtRecordName?: string;

  /**
   * Expected DNS TXT record value. Event Grid will check for a TXT record with this value in the DNS record set of the custom domain name to prove ownership over the domain.
   */
  expectedTxtRecordValue?: string;
}

/**
 * The identity information for retrieving the certificate for the custom domain.
 */
model CustomDomainIdentity {
  /**
   * The type of managed identity used. Can be either 'SystemAssigned' or 'UserAssigned'.
   */
  type?: CustomDomainIdentityType;

  /**
   * The user identity associated with the resource.
   */
  userAssignedIdentity?: string;
}

/**
 * Properties of the Topic Spaces Configuration.
 */
model TopicSpacesConfiguration {
  /**
   * Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
   */
  state?: TopicSpacesConfigurationState;

  /**
   * Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.
   * This property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.
   * This topic should reside in the same region where namespace is located.
   */
  routeTopicResourceId?: string;

  /**
   * The endpoint for the topic spaces configuration. This is a read-only property.
   */
  @visibility(Lifecycle.Read)
  hostname?: string;

  /**
   * Routing enrichments for topic spaces configuration
   */
  routingEnrichments?: RoutingEnrichments;

  /**
   * The maximum session expiry in hours. The property default value is 1 hour.
   * Min allowed value is 1 hour and max allowed value is 8 hours.
   */
  maximumSessionExpiryInHours?: int32;

  /**
   * The maximum number of sessions per authentication name. The property default value is 1.
   * Min allowed value is 1 and max allowed value is 100.
   */
  maximumClientSessionsPerAuthenticationName?: int32;

  /**
   * Routing identity info for topic spaces configuration.
   */
  routingIdentityInfo?: RoutingIdentityInfo;

  /**
   * List of custom domain configurations for the namespace.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomains?: CustomDomainConfiguration[];
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model RoutingEnrichments {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  @OpenAPI.extension("x-ms-identifiers", #[])
  static?: StaticRoutingEnrichment[];

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  @OpenAPI.extension("x-ms-identifiers", #[])
  dynamic?: DynamicRoutingEnrichment[];
}

/**
 * Static routing enrichment details.
 */
@discriminator("valueType")
model StaticRoutingEnrichment {
  /**
   * Static routing enrichment key.
   */
  key?: string;

  /**
   * Static routing enrichment value type. For e.g. this property value can be 'String'.
   */
  valueType: StaticRoutingEnrichmentType;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model DynamicRoutingEnrichment {
  /**
   * Dynamic routing enrichment key.
   */
  key?: string;

  /**
   * Dynamic routing enrichment value.
   */
  value?: string;
}

/**
 * Routing identity info for topic spaces configuration.
 */
model RoutingIdentityInfo {
  /**
   * Routing identity type for topic spaces configuration.
   */
  type?: RoutingIdentityType;

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  userAssignedIdentity?: string;
}

/**
 * Represents available Sku pricing tiers.
 */
model NamespaceSku {
  /**
   * The name of the SKU.
   */
  name?: SkuName;

  /**
   * Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is
   * 1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and
   * max allowed capacity is 20.
   */
  capacity?: int32;
}

/**
 * Properties to update namespace.
 */
model NamespaceUpdateParameters {
  /**
   * Tags of the namespace resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Namespace resource identity information.
   */
  identity?: IdentityInfo;

  /**
   * Represents available Sku pricing tiers.
   */
  sku?: NamespaceSku;

  /**
   * Properties of the namespace resource.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: NamespaceUpdateParameterProperties;
}

/**
 * Information of namespace update parameter properties.
 */
model NamespaceUpdateParameterProperties {
  /**
   * Topic spaces configuration properties that can be updated.
   */
  topicSpacesConfiguration?: UpdateTopicSpacesConfigurationInfo;

  /**
   * Topics configuration properties that can be updated.
   */
  topicsConfiguration?: UpdateTopicsConfigurationInfo;

  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceUpdateParameterProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];
}

/**
 * Properties of the topic spaces configuration info of a namespace.
 */
model UpdateTopicSpacesConfigurationInfo {
  /**
   * Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.
   */
  state?: TopicSpacesConfigurationState;

  /**
   * This property is used to specify custom topic to which events will be routed to from topic spaces configuration under namespace.
   */
  routeTopicResourceId?: string;

  /**
   * Routing enrichments for topic spaces configuration.
   */
  routingEnrichments?: RoutingEnrichments;

  /**
   * The maximum session expiry in hours. The property default value is 1 hour.
   * Min allowed value is 1 hour and max allowed value is 8 hours.
   */
  maximumSessionExpiryInHours?: int32;

  /**
   * The maximum number of sessions per authentication name. The property default value is 1.
   * Min allowed value is 1 and max allowed value is 100.
   */
  maximumClientSessionsPerAuthenticationName?: int32;

  /**
   * Routing identity info for topic spaces configuration.
   */
  routingIdentityInfo?: RoutingIdentityInfo;

  /**
   * Custom domain info for topic spaces configuration.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomains?: CustomDomainConfiguration[];
}

/**
 * Properties of the topics configuration info of a namespace.
 */
model UpdateTopicsConfigurationInfo {
  /**
   * Custom domain info for topics configuration.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomains?: CustomDomainConfiguration[];
}

/**
 * Shared access keys of the Namespace.
 */
model NamespaceSharedAccessKeys {
  /**
   * Shared access key1 for the namespace.
   */
  key1?: string;

  /**
   * Shared access key2 for the namespace.
   */
  key2?: string;
}

/**
 * Namespace regenerate share access key request.
 */
model NamespaceRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2.
   */
  keyName: string;
}

/**
 * Properties of the namespace topic.
 */
model NamespaceTopicProperties {
  /**
   * Provisioning state of the namespace topic.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: NamespaceTopicProvisioningState;

  /**
   * Publisher type of the namespace topic.
   */
  publisherType?: PublisherType;

  /**
   * This determines the format that is expected for incoming events published to the topic.
   */
  inputSchema?: EventInputSchema = EventInputSchema.CloudEventSchemaV1_0;

  /**
   * Event retention for the namespace topic expressed in days. The property default value is 1 day.
   * Min event retention duration value is 1 day and max event retention duration value is 1 day.
   */
  eventRetentionInDays?: int32;
}

/**
 * Properties of the namespace topic update.
 */
model NamespaceTopicUpdateParameters {
  /**
   * Properties of the namespace topic resource.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: NamespaceTopicUpdateParameterProperties;
}

/**
 * Information of namespace topic update parameter properties.
 */
model NamespaceTopicUpdateParameterProperties {
  /**
   * Event retention for the namespace topic expressed in days. The property default value is 1 day.
   * Min event retention duration value is 1 day and max event retention duration value is 1 day.
   */
  eventRetentionInDays?: int32;
}

/**
 * Shared access keys of the Topic
 */
model TopicSharedAccessKeys {
  /**
   * Shared access key1 for the topic.
   */
  key1?: string;

  /**
   * Shared access key2 for the topic.
   */
  key2?: string;
}

/**
 * Topic regenerate share access key request
 */
model TopicRegenerateKeyRequest {
  /**
   * Key name to regenerate key1 or key2
   */
  keyName: string;
}

/**
 * Information about an operation
 */
model OperationInfo {
  /**
   * Name of the provider
   */
  provider?: string;

  /**
   * Name of the resource type
   */
  resource?: string;

  /**
   * Name of the operation
   */
  operation?: string;

  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Properties of the Topic.
 */
model TopicProperties {
  /**
   * List of private endpoint connections.
   */
  @visibility(Lifecycle.Read)
  privateEndpointConnections?: PrivateEndpointConnection[];

  /**
   * Provisioning state of the topic.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: TopicProvisioningState;

  /**
   * Endpoint for the topic.
   */
  @visibility(Lifecycle.Read)
  endpoint?: string;

  /**
   * Event Type Information for the user topic. This information is provided by the publisher and can be used by the
   * subscriber to view different types of events that are published.
   */
  eventTypeInfo?: EventTypeInfo;

  /**
   * Minimum TLS version of the publisher allowed to publish to this topic
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * This determines the format that Event Grid should expect for incoming events published to the topic.
   */
  inputSchema?: InputSchema;

  /**
   * This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
   */
  inputSchemaMapping?: InputSchemaMapping;

  /**
   * Metric resource id for the topic.
   */
  @visibility(Lifecycle.Read)
  metricResourceId?: string;

  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
   */
  disableLocalAuth?: boolean;

  /**
   * Data Residency Boundary of the resource.
   */
  dataResidencyBoundary?: DataResidencyBoundary;
}

/**
 * Properties of the Topic update
 */
model TopicUpdateParameters {
  /**
   * Tags of the Topic resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Topic resource identity information.
   */
  identity?: IdentityInfo;

  /**
   * Properties of the Topic resource.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: TopicUpdateParameterProperties;
}

/**
 * Information of topic update parameter properties.
 */
model TopicUpdateParameterProperties {
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * Minimum TLS version of the publisher allowed to publish to this domain
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
   */
  disableLocalAuth?: boolean;

  /**
   * The data residency boundary for the topic.
   */
  dataResidencyBoundary?: DataResidencyBoundary;

  /**
   * The eventTypeInfo for the topic.
   */
  eventTypeInfo?: EventTypeInfo;
}

/**
 * Properties of the partner configuration.
 */
model PartnerConfigurationProperties {
  /**
   * The details of authorized partners.
   */
  partnerAuthorization?: PartnerAuthorization;

  /**
   * Provisioning state of the partner configuration.
   */
  provisioningState?: PartnerConfigurationProvisioningState;
}

/**
 * The partner authorization details.
 */
model PartnerAuthorization {
  /**
   * Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is
   * not specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.
   */
  defaultMaximumExpirationTimeInDays?: int32;

  /**
   * The list of authorized partners.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  authorizedPartnersList?: Partner[];
}

/**
 * Information about the partner.
 */
model Partner {
  /**
   * The immutableId of the corresponding partner registration.
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @format("uuid")
  partnerRegistrationImmutableId?: string;

  /**
   * The partner name.
   */
  partnerName?: string;

  /**
   * Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's
   * context will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.
   * If not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  authorizationExpirationTimeInUtc?: utcDateTime;
}

/**
 * Properties of the partner configuration update.
 */
model PartnerConfigurationUpdateParameters {
  /**
   * Tags of the partner configuration resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Properties of the Topic resource.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: PartnerConfigurationUpdateParameterProperties;
}

/**
 * Information of partner configuration update parameter properties.
 */
model PartnerConfigurationUpdateParameterProperties {
  /**
   * The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.
   */
  defaultMaximumExpirationTimeInDays?: int32;
}

/**
 * Properties of the partner namespace.
 */
model PartnerNamespaceProperties {
  /**
   * List of private endpoint connections.
   */
  @visibility(Lifecycle.Read)
  privateEndpointConnections?: PrivateEndpointConnection[];

  /**
   * Provisioning state of the partner namespace.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: PartnerNamespaceProvisioningState;

  /**
   * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
   */
  partnerRegistrationFullyQualifiedId?: string;

  /**
   * Minimum TLS version of the publisher allowed to publish to this partner namespace
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * Endpoint for the partner namespace.
   */
  @visibility(Lifecycle.Read)
  endpoint?: string;

  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
   */
  disableLocalAuth?: boolean;

  /**
   * This determines if events published to this partner namespace should use the source attribute in the event payload
   * or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.
   */
  partnerTopicRoutingMode?: PartnerTopicRoutingMode = PartnerTopicRoutingMode.SourceEventAttribute;
}

/**
 * Properties of the Partner Namespace update.
 */
model PartnerNamespaceUpdateParameters {
  /**
   * Tags of the Partner Namespace.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Properties of the Partner Namespace.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: PartnerNamespaceUpdateParameterProperties;
}

/**
 * Information of Partner Namespace update parameter properties.
 */
model PartnerNamespaceUpdateParameterProperties {
  /**
   * This determines if traffic is allowed over public network. By default it is enabled.
   * You can further restrict to specific IPs by configuring <seealso cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules" />
   */
  publicNetworkAccess?: PublicNetworkAccess;

  /**
   * This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  inboundIpRules?: InboundIpRule[];

  /**
   * Minimum TLS version of the publisher allowed to publish to this domain
   */
  minimumTlsVersionAllowed?: TlsVersion;

  /**
   * This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
   */
  disableLocalAuth?: boolean;
}

/**
 * Shared access keys of the partner namespace.
 */
model PartnerNamespaceSharedAccessKeys {
  /**
   * Shared access key1 for the partner namespace.
   */
  key1?: string;

  /**
   * Shared access key2 for the partner namespace.
   */
  key2?: string;
}

/**
 * PartnerNamespace regenerate shared access key request.
 */
model PartnerNamespaceRegenerateKeyRequest {
  /**
   * Key name to regenerate (key1 or key2).
   */
  keyName: string;
}

/**
 * Properties of the partner registration.
 */
model PartnerRegistrationProperties {
  /**
   * Provisioning state of the partner registration.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: PartnerRegistrationProvisioningState;

  /**
   * The immutableId of the corresponding partner registration.
   * Note: This property is marked for deprecation and is not supported in any future GA API version
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @format("uuid")
  partnerRegistrationImmutableId?: string;
}

/**
 * Properties of the Partner Registration update.
 */
model PartnerRegistrationUpdateParameters {
  /**
   * Tags of the partner registration resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;
}

/**
 * Properties of the Partner Topic.
 */
model PartnerTopicProperties {
  /**
   * The immutableId of the corresponding partner registration.
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @format("uuid")
  partnerRegistrationImmutableId?: string;

  /**
   * Source associated with this partner topic. This represents a unique partner resource.
   */
  source?: string;

  /**
   * Event Type information from the corresponding event channel.
   */
  eventTypeInfo?: EventTypeInfo;

  /**
   * Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,
   * the partner topic and corresponding event channel are deleted.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  expirationTimeIfNotActivatedUtc?: utcDateTime;

  /**
   * Provisioning state of the partner topic.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: PartnerTopicProvisioningState;

  /**
   * Activation state of the partner topic.
   */
  activationState?: PartnerTopicActivationState;

  /**
   * Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.
   * This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
   */
  partnerTopicFriendlyDescription?: string;

  /**
   * Context or helpful message that can be used during the approval process by the subscriber.
   */
  messageForActivation?: string;
}

/**
 * Properties of the Partner Topic update.
 */
model PartnerTopicUpdateParameters {
  /**
   * Tags of the Partner Topic resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Identity information for the Partner Topic resource.
   */
  identity?: IdentityInfo;
}

/**
 * The properties of permission binding.
 */
model PermissionBindingProperties {
  /**
   * Description for the Permission Binding resource.
   */
  description?: string;

  /**
   * The name of the Topic Space resource that the permission is bound to.
   * The Topic space needs to be a resource under the same namespace the permission binding is a part of.
   */
  topicSpaceName?: string;

  /**
   * The allowed permission.
   */
  permission?: PermissionType;

  /**
   * The name of the client group resource that the permission is bound to.
   * The client group needs to be a resource under the same namespace the permission binding is a part of.
   */
  clientGroupName?: string;

  /**
   * Provisioning state of the PermissionBinding resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: PermissionBindingProvisioningState;
}

#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-provisioning-state" "For backward compatibility"
#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model PrivateLinkResourceProperties {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  groupId?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  displayName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  requiredMembers?: string[];
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  requiredZoneNames?: string[];
}

/**
 * Properties of the System Topic.
 */
model SystemTopicProperties {
  /**
   * Provisioning state of the system topic.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ResourceProvisioningState;

  /**
   * Source for the system topic.
   */
  source?: string;

  /**
   * TopicType for the system topic.
   */
  topicType?: string;

  /**
   * Metric resource id for the system topic.
   */
  @visibility(Lifecycle.Read)
  metricResourceId?: string;
}

/**
 * Properties of the System Topic update.
 */
model SystemTopicUpdateParameters {
  /**
   * Tags of the system topic.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Resource identity information.
   */
  identity?: IdentityInfo;
}

/**
 * Result of the List Event Types operation
 */
@pagedResult
model EventTypesListResult {
  /**
   * A collection of event types
   */
  @items
  value?: EventType[];
}

/**
 * Event Type for a subject under a topic
 */
#suppress "@azure-tools/typespec-azure-core/composition-over-inheritance" "For backward compatibility"
model EventType extends Resource {
  /**
   * Properties of the event type.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: EventTypeProperties;
}

/**
 * Properties of the event type
 */
model EventTypeProperties {
  /**
   * Display name of the event type.
   */
  displayName?: string;

  /**
   * Description of the event type.
   */
  description?: string;

  /**
   * URL of the schema for this event type.
   */
  schemaUrl?: string;

  /**
   * IsInDefaultSet flag of the event type.
   */
  isInDefaultSet?: boolean;
}

/**
 * Properties of the Extension Topic
 */
#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-provisioning-state" "For backward compatibility"
model ExtensionTopicProperties {
  /**
   * Description of the extension topic.
   */
  description?: string;

  /**
   * System topic resource id which is mapped to the source.
   */
  systemTopic?: string;
}

/**
 * The properties of topic space.
 */
model TopicSpaceProperties {
  /**
   * Description for the Topic Space resource.
   */
  description?: string;

  /**
   * The topic filters in the topic space.
   * Example: "topicTemplates": [
   *               "devices/foo/bar",
   *               "devices/topic1/+",
   *               "devices/${principal.name}/${principal.attributes.keyName}" ].
   */
  topicTemplates?: string[];

  /**
   * Provisioning state of the TopicSpace resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: TopicSpaceProvisioningState;
}

/**
 * Result of the List Topic Types operation
 */
@pagedResult
model TopicTypesListResult {
  /**
   * A collection of topic types
   */
  @items
  value?: TopicTypeInfo[];
}

/**
 * Properties of a topic type.
 */
model TopicTypeProperties {
  /**
   * Namespace of the provider of the topic type.
   */
  provider?: string;

  /**
   * Display Name for the topic type.
   */
  displayName?: string;

  /**
   * Description of the topic type.
   */
  description?: string;

  /**
   * Region type of the resource.
   */
  resourceRegionType?: ResourceRegionType;

  /**
   * Provisioning state of the topic type.
   */
  provisioningState?: TopicTypeProvisioningState;

  /**
   * List of locations supported by this topic type.
   */
  supportedLocations?: string[];

  /**
   * Source resource format.
   */
  sourceResourceFormat?: string;

  /**
   * Supported source scopes.
   */
  supportedScopesForSource?: TopicTypeSourceScope[];

  /**
   * Flag to indicate that a topic type can support both regional or global system topics.
   */
  areRegionalAndGlobalSourcesSupported?: boolean;

  /**
   * Permissions which are enforced for creating and updating system topics of this this topic type.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  additionalEnforcedPermissions?: TopicTypeAdditionalEnforcedPermission[];
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model TopicTypeAdditionalEnforcedPermission {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  permissionName?: string;
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  isDataAction?: boolean;
}

/**
 * Properties of the verified partner.
 */
model VerifiedPartnerProperties {
  /**
   * ImmutableId of the corresponding partner registration.
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @format("uuid")
  partnerRegistrationImmutableId?: string;

  /**
   * Official name of the Partner.
   */
  organizationName?: string;

  /**
   * Display name of the verified partner.
   */
  partnerDisplayName?: string;

  /**
   * Details of the partner topic scenario.
   */
  partnerTopicDetails?: PartnerDetails;

  /**
   * Provisioning state of the verified partner.
   */
  provisioningState?: VerifiedPartnerProvisioningState;
}

/**
 * Information about the partner.
 */
model PartnerDetails {
  /**
   * This is short description about the partner. The length of this description should not exceed 256 characters.
   */
  description?: string;

  /**
   * Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.
   */
  longDescription?: string;

  /**
   * URI of the partner website that can be used by Azure customers to setup Event Grid
   * integration on an event source.
   */
  setupUri?: string;
}

/**
 * Namespace custom domain ownership validation result.
 */
model CustomDomainOwnershipValidationResult {
  /**
   * List of custom domain configurations for the namespace under topics configuration.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomainsForTopicsConfiguration?: CustomDomainConfiguration[];

  /**
   * List of custom domain configurations for the namespace under topic spaces configuration.
   */
  @OpenAPI.extension("x-ms-identifiers", #[])
  customDomainsForTopicSpacesConfiguration?: CustomDomainConfiguration[];
}

/**
 * Full endpoint URL of an event subscription
 */
model SubscriptionFullUrl {
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;
}

/**
 * This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.
 */
model JsonInputSchemaMappingProperties {
  /**
   * The mapping information for the Id property of the Event Grid Event.
   */
  id?: JsonField;

  /**
   * The mapping information for the Topic property of the Event Grid Event.
   */
  topic?: JsonField;

  /**
   * The mapping information for the EventTime property of the Event Grid Event.
   */
  eventTime?: JsonField;

  /**
   * The mapping information for the EventType property of the Event Grid Event.
   */
  eventType?: JsonFieldWithDefault;

  /**
   * The mapping information for the Subject property of the Event Grid Event.
   */
  subject?: JsonFieldWithDefault;

  /**
   * The mapping information for the DataVersion property of the Event Grid Event.
   */
  dataVersion?: JsonFieldWithDefault;
}

/**
 * This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.
 */
model JsonField {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;
}

/**
 * This is used to express the source of an input schema mapping for a single target field
 * in the Event Grid Event schema. This is currently used in the mappings for the 'subject',
 * 'eventtype' and 'dataversion' properties. This represents a field in the input event schema
 * along with a default value to be used, and at least one of these two properties should be provided.
 */
model JsonFieldWithDefault {
  /**
   * Name of a field in the input event schema that's to be used as the source of a mapping.
   */
  sourceField?: string;

  /**
   * The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.
   */
  defaultValue?: string;
}

/**
 * This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.
 */
model JsonInputSchemaMapping extends InputSchemaMapping {
  /**
   * JSON Properties of the input schema mapping
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: JsonInputSchemaMappingProperties;

  /**
   * Type of the custom mapping
   */
  inputSchemaMappingType: "Json";
}

/**
 * Information about the webhook destination properties for an event subscription.
 */
model WebHookEventSubscriptionDestinationProperties {
  /**
   * The URL that represents the endpoint of the destination of an event subscription.
   */
  endpointUrl?: string;

  /**
   * The base URL that represents the endpoint of the destination of an event subscription.
   */
  @visibility(Lifecycle.Read)
  endpointBaseUrl?: string;

  /**
   * Maximum number of events per batch.
   */
  maxEventsPerBatch?: int32 = 1;

  /**
   * Preferred batch size in Kilobytes.
   */
  preferredBatchSizeInKilobytes?: int32 = 64;

  /**
   * The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
   */
  azureActiveDirectoryTenantId?: string;

  /**
   * The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
   */
  azureActiveDirectoryApplicationIdOrUri?: string;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];

  /**
   * Minimum TLS version that should be supported by webhook endpoint
   */
  minimumTlsVersionAllowed?: TlsVersion;
}

/**
 * Properties of static delivery attribute mapping.
 */
model StaticDeliveryAttributeMappingProperties {
  /**
   * Value of the delivery attribute.
   */
  value?: string;

  /**
   * Boolean flag to tell if the attribute contains sensitive information .
   */
  isSecret?: boolean;
}

/**
 * Static delivery attribute mapping details.
 */
model StaticDeliveryAttributeMapping extends DeliveryAttributeMapping {
  /**
   * Properties of static delivery attribute mapping.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: StaticDeliveryAttributeMappingProperties;

  /**
   * Type of the delivery attribute or header name.
   */
  type: "Static";
}

/**
 * Properties of dynamic delivery attribute mapping.
 */
model DynamicDeliveryAttributeMappingProperties {
  /**
   * JSON path in the event which contains attribute value.
   */
  sourceField?: string;
}

/**
 * Dynamic delivery attribute mapping details.
 */
model DynamicDeliveryAttributeMapping extends DeliveryAttributeMapping {
  /**
   * Properties of dynamic delivery attribute mapping.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: DynamicDeliveryAttributeMappingProperties;

  /**
   * Type of the delivery attribute or header name.
   */
  type: "Dynamic";
}

/**
 * Properties of the storage blob based dead letter destination.
 */
model StorageBlobDeadLetterDestinationProperties {
  /**
   * The Azure Resource ID of the storage account that is the destination of the deadletter events
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.Storage/storageAccounts";
    }
  ]>;

  /**
   * The name of the Storage blob container that is the destination of the deadletter events
   */
  blobContainerName?: string;
}

/**
 * NumberIn Filter.
 */
model NumberInFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: float64[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberIn";
}

/**
 * NumberNotIn Filter.
 */
model NumberNotInFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: float64[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberNotIn";
}

/**
 * NumberLessThan Filter.
 */
model NumberLessThanFilter extends Filter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberLessThan";
}

/**
 * NumberGreaterThan Filter.
 */
model NumberGreaterThanFilter extends Filter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberGreaterThan";
}

/**
 * NumberLessThanOrEquals Filter.
 */
model NumberLessThanOrEqualsFilter extends Filter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberLessThanOrEquals";
}

/**
 * NumberGreaterThanOrEquals Filter.
 */
model NumberGreaterThanOrEqualsFilter extends Filter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberGreaterThanOrEquals";
}

/**
 * BoolEquals Filter.
 */
model BoolEqualsFilter extends Filter {
  /**
   * The boolean filter value.
   */
  value?: boolean;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "BoolEquals";
}

/**
 * StringIn Filter.
 */
model StringInFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringIn";
}

/**
 * StringNotIn Filter.
 */
model StringNotInFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotIn";
}

/**
 * StringBeginsWith Filter.
 */
model StringBeginsWithFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringBeginsWith";
}

/**
 * StringEndsWith Filter.
 */
model StringEndsWithFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringEndsWith";
}

/**
 * StringContains Filter.
 */
model StringContainsFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringContains";
}

/**
 * NumberInRange Filter.
 */
model NumberInRangeFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: float64[][];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberInRange";
}

/**
 * NumberNotInRange Filter.
 */
model NumberNotInRangeFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: float64[][];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberNotInRange";
}

/**
 * StringNotBeginsWith Filter.
 */
model StringNotBeginsWithFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotBeginsWith";
}

/**
 * StringNotEndsWith Filter.
 */
model StringNotEndsWithFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotEndsWith";
}

/**
 * StringNotContains Filter.
 */
model StringNotContainsFilter extends Filter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotContains";
}

/**
 * IsNullOrUndefined Filter.
 */
model IsNullOrUndefinedFilter extends Filter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "IsNullOrUndefined";
}

/**
 * IsNotNull Filter.
 */
model IsNotNullFilter extends Filter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "IsNotNull";
}

/**
 * NumberIn Advanced Filter.
 */
model NumberInAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: float64[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberIn";
}

/**
 * Information about the storage blob based dead letter destination.
 */
model StorageBlobDeadLetterDestination extends DeadLetterDestination {
  /**
   * The properties of the Storage Blob based deadletter destination
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: StorageBlobDeadLetterDestinationProperties;

  /**
   * Type of the endpoint for the dead letter destination
   */
  endpointType: "StorageBlob";
}

/**
 * NumberNotIn Advanced Filter.
 */
model NumberNotInAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: float64[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberNotIn";
}

/**
 * NumberLessThan Advanced Filter.
 */
model NumberLessThanAdvancedFilter extends AdvancedFilter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberLessThan";
}

/**
 * NumberGreaterThan Advanced Filter.
 */
model NumberGreaterThanAdvancedFilter extends AdvancedFilter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberGreaterThan";
}

/**
 * NumberLessThanOrEquals Advanced Filter.
 */
model NumberLessThanOrEqualsAdvancedFilter extends AdvancedFilter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberLessThanOrEquals";
}

/**
 * NumberGreaterThanOrEquals Advanced Filter.
 */
model NumberGreaterThanOrEqualsAdvancedFilter extends AdvancedFilter {
  /**
   * The filter value.
   */
  value?: float64;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberGreaterThanOrEquals";
}

/**
 * BoolEquals Advanced Filter.
 */
model BoolEqualsAdvancedFilter extends AdvancedFilter {
  /**
   * The boolean filter value.
   */
  value?: boolean;

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "BoolEquals";
}

/**
 * StringIn Advanced Filter.
 */
model StringInAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringIn";
}

/**
 * StringNotIn Advanced Filter.
 */
model StringNotInAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotIn";
}

/**
 * StringBeginsWith Advanced Filter.
 */
model StringBeginsWithAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringBeginsWith";
}

/**
 * StringEndsWith Advanced Filter.
 */
model StringEndsWithAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringEndsWith";
}

/**
 * StringContains Advanced Filter.
 */
model StringContainsAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringContains";
}

/**
 * NumberInRange Advanced Filter.
 */
model NumberInRangeAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: float64[][];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberInRange";
}

/**
 * NumberNotInRange Advanced Filter.
 */
model NumberNotInRangeAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: float64[][];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "NumberNotInRange";
}

/**
 * StringNotBeginsWith Advanced Filter.
 */
model StringNotBeginsWithAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotBeginsWith";
}

/**
 * StringNotEndsWith Advanced Filter.
 */
model StringNotEndsWithAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotEndsWith";
}

/**
 * StringNotContains Advanced Filter.
 */
model StringNotContainsAdvancedFilter extends AdvancedFilter {
  /**
   * The set of filter values.
   */
  values?: string[];

  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "StringNotContains";
}

/**
 * IsNullOrUndefined Advanced Filter.
 */
model IsNullOrUndefinedAdvancedFilter extends AdvancedFilter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "IsNullOrUndefined";
}

/**
 * IsNotNull Advanced Filter.
 */
model IsNotNullAdvancedFilter extends AdvancedFilter {
  /**
   * The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
   */
  operatorType: "IsNotNull";
}

/**
 * Information about the webhook destination for an event subscription.
 */
model WebHookEventSubscriptionDestination extends EventSubscriptionDestination {
  /**
   * WebHook Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: WebHookEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "WebHook";
}

/**
 * The properties for a event hub destination.
 */
model EventHubEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];
}

/**
 * Information about the event hub destination for an event subscription.
 */
model EventHubEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Event Hub Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: EventHubEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "EventHub";
}

/**
 * The properties for a storage queue destination.
 */
model StorageQueueEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.Storage/storageAccounts/queues";
    }
  ]>;

  /**
   * The name of the Storage queue under a storage account that is the destination of an event subscription.
   */
  queueName?: string;

  /**
   * Storage queue message time to live in seconds. This value cannot be zero or negative with the exception of using -1 to indicate that the Time To Live of the message is Infinite.
   */
  queueMessageTimeToLiveInSeconds?: int64;
}

/**
 * Information about the storage queue destination for an event subscription.
 */
model StorageQueueEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Storage Queue Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: StorageQueueEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "StorageQueue";
}

/**
 * The properties for a hybrid connection destination.
 */
model HybridConnectionEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource ID of an hybrid connection that is the destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];
}

/**
 * Information about the HybridConnection destination for an event subscription.
 */
model HybridConnectionEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Hybrid connection Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: HybridConnectionEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "HybridConnection";
}

/**
 * The properties that represent the Service Bus destination of an event subscription.
 */
model ServiceBusQueueEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.ServiceBus/namespaces/queues";
    }
  ]>;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];
}

/**
 * Information about the service bus destination for an event subscription.
 */
model ServiceBusQueueEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Service Bus Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: ServiceBusQueueEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "ServiceBusQueue";
}

/**
 * The properties that represent the Service Bus Topic destination of an event subscription.
 */
model ServiceBusTopicEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.ServiceBus/namespaces/topics";
    }
  ]>;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];
}

/**
 * Information about the service bus topic destination for an event subscription.
 */
model ServiceBusTopicEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Service Bus Topic Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: ServiceBusTopicEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "ServiceBusTopic";
}

/**
 * The properties that represent the Azure Function destination of an event subscription.
 */
model AzureFunctionEventSubscriptionDestinationProperties {
  /**
   * The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.Web/sites/functions";
    }
  ]>;

  /**
   * Maximum number of events per batch.
   */
  maxEventsPerBatch?: int32 = 1;

  /**
   * Preferred batch size in Kilobytes.
   */
  preferredBatchSizeInKilobytes?: int32 = 64;

  /**
   * Delivery attribute details.
   */
  deliveryAttributeMappings?: DeliveryAttributeMapping[];
}

/**
 * Information about the azure function destination for an event subscription.
 */
model AzureFunctionEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Azure Function Properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: AzureFunctionEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "AzureFunction";
}

/**
 * The properties that represent the Monitor Alert destination of an event subscription.
 */
model MonitorAlertEventSubscriptionDestinationProperties {
  /**
   * The severity that will be attached to every Alert fired through this event subscription.
   * This field must be provided.
   */
  severity?: MonitorAlertSeverity;

  /**
   * The description that will be attached to every Alert fired through this event subscription.
   */
  description?: string;

  /**
   * The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.
   * Each resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}.
   */
  actionGroups?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.Insights/actiongroups";
    }
  ]>[];
}

/**
 * Information about the Monitor Alert destination for an event subscription.
 */
model MonitorAlertEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Monitor Alert properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: MonitorAlertEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "MonitorAlert";
}

/**
 * The properties that represent the Event Grid Namespace Topic destination of an event subscription.
 */
model NamespaceTopicEventSubscriptionDestinationProperties {
  /**
   * The Azure resource Id that represents the endpoint of the Event Grid Namespace Topic destination of an event subscription.
   * This field is required and the Namespace Topic resource listed must already exist.
   * The resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.EventGrid/namespaces/{NamespaceName}/topics/{TopicName}.
   */
  resourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.EventGrid/namespaces/topics";
    }
  ]>;
}

/**
 * Information about the Namespace Topic destination for an event subscription.
 */
model NamespaceTopicEventSubscriptionDestination
  extends EventSubscriptionDestination {
  /**
   * Namespace Topic properties of the event subscription destination.
   */
  #suppress "@azure-tools/typespec-azure-core/no-private-usage" "For backward compatibility"
  @Azure.ResourceManager.Private.conditionalClientFlatten
  properties?: NamespaceTopicEventSubscriptionDestinationProperties;

  /**
   * Type of the endpoint for the event subscription destination.
   */
  endpointType: "NamespaceTopic";
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model StaticStringRoutingEnrichment extends StaticRoutingEnrichment {
  /**
   * String type routing enrichment value.
   */
  value?: string;

  /**
   * Static routing enrichment value type. For e.g. this property value can be 'String'.
   */
  valueType: "String";
}
