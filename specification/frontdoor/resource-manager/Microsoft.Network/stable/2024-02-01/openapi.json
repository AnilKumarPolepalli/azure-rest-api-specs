{
  "swagger": "2.0",
  "info": {
    "title": "FrontDoorManagementClient",
    "version": "2024-02-01",
    "description": "FrontDoor Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "WebApplicationFirewallPolicies"
    },
    {
      "name": "FrontDoors"
    },
    {
      "name": "FrontendEndpoints"
    },
    {
      "name": "RulesEngines"
    },
    {
      "name": "Profiles"
    },
    {
      "name": "Experiments"
    }
  ],
  "paths": {
    "/providers/Microsoft.Network/checkFrontDoorNameAvailability": {
      "post": {
        "operationId": "FrontDoorNameAvailability_Check",
        "description": "Check the availability of a Front Door resource name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityOutput"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckNameAvailability": {
            "$ref": "./examples/CheckFrontdoorNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
      "get": {
        "operationId": "Policies_ListBySubscription",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all Policies in a Resource Group": {
            "$ref": "./examples/WafListPoliciesUnderSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/NetworkExperimentProfiles": {
      "get": {
        "operationId": "NetworkExperimentProfiles_List",
        "tags": [
          "Profiles"
        ],
        "description": "Gets a list of Network Experiment Profiles under a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List NetworkExperiment Profiles in a Resource Group": {
            "$ref": "./examples/NetworkExperimentListProfiles.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability": {
      "post": {
        "operationId": "FrontDoorNameAvailabilityWithSubscription_Check",
        "description": "Check the availability of a Front Door subdomain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityOutput"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckNameAvailabilityWithSubscription": {
            "$ref": "./examples/CheckFrontdoorNameAvailabilityWithSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoorWebApplicationFirewallManagedRuleSets": {
      "get": {
        "operationId": "ManagedRuleSets_List",
        "description": "Lists all available managed rule sets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedRuleSetDefinitionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Policies ManagedRuleSets in a Resource Group": {
            "$ref": "./examples/WafListManagedRuleSets.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoors": {
      "get": {
        "operationId": "FrontDoors_List",
        "tags": [
          "FrontDoors"
        ],
        "description": "Lists all of the Front Doors within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all Front Doors": {
            "$ref": "./examples/FrontdoorListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
      "get": {
        "operationId": "Policies_List",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicyList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all Policies in a Resource Group": {
            "$ref": "./examples/WafListPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}": {
      "get": {
        "operationId": "Policies_Get",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the Web Application Firewall Policy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Policy": {
            "$ref": "./examples/WafPolicyGet.json"
          }
        }
      },
      "put": {
        "operationId": "Policies_CreateOrUpdate",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Create or update policy with specified rule set name within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the Web Application Firewall Policy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Policy to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WebApplicationFirewallPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "201": {
            "description": "Resource 'WebApplicationFirewallPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/WafPolicyCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Policies_Update",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Patch a specific frontdoor webApplicationFirewall policy for tags update under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the Web Application Firewall Policy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "FrontdoorWebApplicationFirewallPolicy parameters to be patched.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patches specific policy": {
            "$ref": "./examples/WafPolicyPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Policies_Delete",
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Deletes Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the Web Application Firewall Policy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete protection policy": {
            "$ref": "./examples/WafPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles": {
      "get": {
        "operationId": "NetworkExperimentProfiles_ListByResourceGroup",
        "tags": [
          "Profiles"
        ],
        "description": "Gets a list of Network Experiment Profiles within a resource group under a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}": {
      "get": {
        "operationId": "NetworkExperimentProfiles_Get",
        "tags": [
          "Profiles"
        ],
        "description": "Gets an NetworkExperiment Profile by ProfileName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an NetworkExperiment Profile by Profile Id": {
            "$ref": "./examples/NetworkExperimentGetProfile.json"
          }
        }
      },
      "put": {
        "operationId": "NetworkExperimentProfiles_CreateOrUpdate",
        "tags": [
          "Profiles"
        ],
        "description": "Creates an NetworkExperiment Profile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "An Network Experiment Profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Profile' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "201": {
            "description": "Resource 'Profile' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates an NetworkExperiment Profile in a Resource Group": {
            "$ref": "./examples/NetworkExperimentCreateProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NetworkExperimentProfiles_Update",
        "tags": [
          "Profiles"
        ],
        "description": "Updates an NetworkExperimentProfiles",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Profile Update Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates an Experiment": {
            "$ref": "./examples/NetworkExperimentUpdateProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NetworkExperimentProfiles_Delete",
        "tags": [
          "Profiles"
        ],
        "description": "Deletes an NetworkExperiment Profile by ProfileName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes an NetworkExperiment Profile by ProfileName": {
            "$ref": "./examples/NetworkExperimentDeleteProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments": {
      "get": {
        "operationId": "Experiments_ListByProfile",
        "tags": [
          "Experiments"
        ],
        "description": "Gets a list of Experiments",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExperimentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a list of Experiments": {
            "$ref": "./examples/NetworkExperimentListExperiments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}": {
      "get": {
        "operationId": "Experiments_Get",
        "tags": [
          "Experiments"
        ],
        "description": "Gets an Experiment by ExperimentName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an Experiment by ExperimentName": {
            "$ref": "./examples/NetworkExperimentGetExperiment.json"
          }
        }
      },
      "put": {
        "operationId": "Experiments_CreateOrUpdate",
        "tags": [
          "Experiments"
        ],
        "description": "Creates or updates an Experiment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Experiment resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Experiment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "201": {
            "description": "Resource 'Experiment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Experiment"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates an Experiment": {
            "$ref": "./examples/NetworkExperimentCreateExperiment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Experiments_Update",
        "tags": [
          "Experiments"
        ],
        "description": "Updates an Experiment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Experiment Update Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperimentUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates an Experiment": {
            "$ref": "./examples/NetworkExperimentUpdateExperiment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Experiments_Delete",
        "tags": [
          "Experiments"
        ],
        "description": "Deletes an Experiment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes an Experiment": {
            "$ref": "./examples/NetworkExperimentDeleteExperiment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/latencyScorecard": {
      "get": {
        "operationId": "Reports_GetLatencyScorecards",
        "tags": [
          "Experiments"
        ],
        "description": "Gets a Latency Scorecard for a given Experiment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "endDateTimeUTC",
            "in": "query",
            "description": "The end DateTime of the Latency Scorecard in UTC",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregationInterval",
            "in": "query",
            "description": "The aggregation interval of the Latency Scorecard",
            "required": true,
            "type": "string",
            "enum": [
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "x-ms-enum": {
              "name": "LatencyScorecardAggregationInterval",
              "modelAsString": true,
              "values": [
                {
                  "name": "Daily",
                  "value": "Daily"
                },
                {
                  "name": "Weekly",
                  "value": "Weekly"
                },
                {
                  "name": "Monthly",
                  "value": "Monthly"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LatencyScorecard"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Latency Scorecard for a given Experiment": {
            "$ref": "./examples/NetworkExperimentGetLatencyScorecard.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/timeseries": {
      "get": {
        "operationId": "Reports_GetTimeseries",
        "tags": [
          "Experiments"
        ],
        "description": "Gets a Timeseries for a given Experiment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The Experiment identifier associated with the Experiment",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          },
          {
            "name": "startDateTimeUTC",
            "in": "query",
            "description": "The start DateTime of the Timeseries in UTC",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDateTimeUTC",
            "in": "query",
            "description": "The end DateTime of the Timeseries in UTC",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "aggregationInterval",
            "in": "query",
            "description": "The aggregation interval of the Timeseries",
            "required": true,
            "type": "string",
            "enum": [
              "Hourly",
              "Daily"
            ],
            "x-ms-enum": {
              "name": "TimeseriesAggregationInterval",
              "modelAsString": true,
              "values": [
                {
                  "name": "Hourly",
                  "value": "Hourly"
                },
                {
                  "name": "Daily",
                  "value": "Daily"
                }
              ]
            }
          },
          {
            "name": "timeseriesType",
            "in": "query",
            "description": "The type of Timeseries",
            "required": true,
            "type": "string",
            "enum": [
              "MeasurementCounts",
              "LatencyP50",
              "LatencyP75",
              "LatencyP95"
            ],
            "x-ms-enum": {
              "name": "TimeseriesType",
              "modelAsString": true,
              "values": [
                {
                  "name": "MeasurementCounts",
                  "value": "MeasurementCounts"
                },
                {
                  "name": "LatencyP50",
                  "value": "LatencyP50"
                },
                {
                  "name": "LatencyP75",
                  "value": "LatencyP75"
                },
                {
                  "name": "LatencyP95",
                  "value": "LatencyP95"
                }
              ]
            }
          },
          {
            "name": "endpoint",
            "in": "query",
            "description": "The specific endpoint",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Timeseries"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Timeseries for a given Experiment": {
            "$ref": "./examples/NetworkExperimentGetTimeseries.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/preconfiguredEndpoints": {
      "get": {
        "operationId": "PreconfiguredEndpoints_List",
        "tags": [
          "Profiles"
        ],
        "description": "Gets a list of Preconfigured Endpoints",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The Profile identifier associated with the Tenant and Partner",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PreconfiguredEndpointList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a list of Preconfigured Endpoints": {
            "$ref": "./examples/NetworkExperimentGetPreconfiguredEndpoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors": {
      "get": {
        "operationId": "FrontDoors_ListByResourceGroup",
        "tags": [
          "FrontDoors"
        ],
        "description": "Lists all of the Front Doors within a resource group under a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Front Doors in a Resource Group": {
            "$ref": "./examples/FrontdoorList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}": {
      "get": {
        "operationId": "FrontDoors_Get",
        "tags": [
          "FrontDoors"
        ],
        "description": "Gets a Front Door with the specified Front Door name under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Front Door": {
            "$ref": "./examples/FrontdoorGet.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoors_CreateOrUpdate",
        "tags": [
          "FrontDoors"
        ],
        "description": "Creates a new Front Door with a Front Door name under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "frontDoorParameters",
            "in": "body",
            "description": "Front Door properties needed to create a new Front Door.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoor' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoor"
            }
          },
          "201": {
            "description": "Resource 'FrontDoor' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoor"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/FrontDoor"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update specific Front Door": {
            "$ref": "./examples/FrontdoorCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "FrontDoors_Delete",
        "tags": [
          "FrontDoors"
        ],
        "description": "Deletes an existing Front Door with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Front Door": {
            "$ref": "./examples/FrontdoorDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints": {
      "get": {
        "operationId": "FrontendEndpoints_ListByFrontDoor",
        "tags": [
          "FrontendEndpoints"
        ],
        "description": "Lists all of the frontend endpoints within a Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontendEndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Frontend endpoints in a Front Door": {
            "$ref": "./examples/FrontdoorFrontendEndpointList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}": {
      "get": {
        "operationId": "FrontendEndpoints_Get",
        "tags": [
          "FrontendEndpoints"
        ],
        "description": "Gets a Frontend endpoint with the specified name within the specified Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "frontendEndpointName",
            "in": "path",
            "description": "Name of the Frontend endpoint which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontendEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Frontend Endpoint": {
            "$ref": "./examples/FrontdoorFrontendEndpointGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/disableHttps": {
      "post": {
        "operationId": "FrontendEndpoints_DisableHttps",
        "tags": [
          "FrontendEndpoints"
        ],
        "description": "Disables a frontendEndpoint for HTTPS traffic",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "frontendEndpointName",
            "in": "path",
            "description": "Name of the Frontend endpoint which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FrontendEndpoints_DisableHttps": {
            "$ref": "./examples/FrontdoorDisableHttps.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/enableHttps": {
      "post": {
        "operationId": "FrontendEndpoints_EnableHttps",
        "tags": [
          "FrontendEndpoints"
        ],
        "description": "Enables a frontendEndpoint for HTTPS traffic",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "frontendEndpointName",
            "in": "path",
            "description": "Name of the Frontend endpoint which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          },
          {
            "name": "customHttpsConfiguration",
            "in": "body",
            "description": "The configuration specifying how to enable HTTPS",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomHttpsConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FrontendEndpoints_EnableHttps": {
            "$ref": "./examples/FrontdoorEnableHttps.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/purge": {
      "post": {
        "operationId": "Endpoints_PurgeContent",
        "tags": [
          "FrontDoors"
        ],
        "description": "Removes a content from Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "contentFilePaths",
            "in": "body",
            "description": "The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurgeParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Purge content from Front Door": {
            "$ref": "./examples/FrontdoorPurgeContent.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/rulesEngines": {
      "get": {
        "operationId": "RulesEngines_ListByFrontDoor",
        "tags": [
          "RulesEngines"
        ],
        "description": "Lists all of the Rules Engine Configurations within a Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RulesEngineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rules Engine Configurations in a Front Door": {
            "$ref": "./examples/FrontdoorRulesEngineList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/rulesEngines/{rulesEngineName}": {
      "get": {
        "operationId": "RulesEngines_Get",
        "tags": [
          "RulesEngines"
        ],
        "description": "Gets a Rules Engine Configuration with the specified name within the specified Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "rulesEngineName",
            "in": "path",
            "description": "Name of the Rules Engine which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RulesEngine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rules Engine Configuration": {
            "$ref": "./examples/FrontdoorRulesEngineGet.json"
          }
        }
      },
      "put": {
        "operationId": "RulesEngines_CreateOrUpdate",
        "tags": [
          "RulesEngines"
        ],
        "description": "Creates a new Rules Engine Configuration with the specified name within the specified Front Door.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "rulesEngineName",
            "in": "path",
            "description": "Name of the Rules Engine which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          },
          {
            "name": "rulesEngineParameters",
            "in": "body",
            "description": "Rules Engine Configuration properties needed to create a new Rules Engine Configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RulesEngine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RulesEngine' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RulesEngine"
            }
          },
          "201": {
            "description": "Resource 'RulesEngine' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RulesEngine"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/RulesEngine"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a specific Rules Engine Configuration": {
            "$ref": "./examples/FrontdoorRulesEngineCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "RulesEngines_Delete",
        "tags": [
          "RulesEngines"
        ],
        "description": "Deletes an existing Rules Engine Configuration with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "rulesEngineName",
            "in": "path",
            "description": "Name of the Rules Engine which is unique within the Front Door.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rules Engine Configuration": {
            "$ref": "./examples/FrontdoorRulesEngineDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/validateCustomDomain": {
      "post": {
        "operationId": "FrontDoors_ValidateCustomDomain",
        "tags": [
          "FrontDoors"
        ],
        "description": "Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "frontDoorName",
            "in": "path",
            "description": "Name of the Front Door which is globally unique.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
          },
          {
            "name": "customDomainProperties",
            "in": "body",
            "description": "Custom domain to be validated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainOutput"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FrontDoor_ValidateCustomDomain": {
            "$ref": "./examples/FrontdoorValidateCustomDomain.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AggregationInterval": {
      "type": "string",
      "description": "The aggregation interval of the Timeseries",
      "enum": [
        "Hourly",
        "Daily"
      ],
      "x-ms-enum": {
        "name": "AggregationInterval",
        "modelAsString": true,
        "values": [
          {
            "name": "Hourly",
            "value": "Hourly"
          },
          {
            "name": "Daily",
            "value": "Daily"
          }
        ]
      }
    },
    "Availability": {
      "type": "string",
      "description": "Indicates whether the name is available.",
      "enum": [
        "Available",
        "Unavailable"
      ],
      "x-ms-enum": {
        "name": "Availability",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available"
          },
          {
            "name": "Unavailable",
            "value": "Unavailable"
          }
        ]
      }
    },
    "Azure.ResourceManager.CommonTypes.ActionType": {
      "type": "string",
      "description": "Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Actions are for internal-only APIs."
          }
        ]
      }
    },
    "Backend": {
      "type": "object",
      "description": "Backend address of a frontDoor load balancer.",
      "properties": {
        "address": {
          "type": "string",
          "description": "Location of the backend (IP address or FQDN)"
        },
        "privateLinkAlias": {
          "type": "string",
          "description": "The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"
        },
        "privateLinkLocation": {
          "type": "string",
          "description": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated"
        },
        "privateEndpointStatus": {
          "$ref": "#/definitions/PrivateEndpointStatus",
          "description": "The Approval status for the connection to the Private Link",
          "readOnly": true
        },
        "privateLinkApprovalMessage": {
          "type": "string",
          "description": "A custom message to be included in the approval request to connect to the Private Link"
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP TCP port number. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "enabledState": {
          "$ref": "#/definitions/BackendEnabledState",
          "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
          "minimum": 1,
          "maximum": 5
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of this endpoint for load balancing purposes.",
          "minimum": 1,
          "maximum": 1000
        },
        "backendHostHeader": {
          "type": "string",
          "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
        }
      }
    },
    "BackendEnabledState": {
      "type": "string",
      "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "BackendEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "BackendPool": {
      "type": "object",
      "description": "A backend pool is a collection of backends that can be routed to.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackendPoolProperties",
          "description": "Properties of the Front Door Backend Pool",
          "x-ms-client-flatten": true
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "BackendPoolProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a Backend Pool.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendPoolUpdateParameters"
        }
      ]
    },
    "BackendPoolUpdateParameters": {
      "type": "object",
      "description": "A collection of backends that can be routed to.",
      "properties": {
        "backends": {
          "type": "array",
          "description": "The set of backends for this pool",
          "items": {
            "$ref": "#/definitions/Backend"
          },
          "x-ms-identifiers": []
        },
        "loadBalancingSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Load balancing settings for a backend pool"
        },
        "healthProbeSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "L7 health probe settings for a backend pool"
        }
      }
    },
    "BackendPoolsSettings": {
      "type": "object",
      "description": "Settings that apply to all backend pools.",
      "properties": {
        "enforceCertificateNameCheck": {
          "type": "string",
          "description": "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnforceCertificateNameCheckEnabledState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "sendRecvTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.",
          "minimum": 16
        }
      }
    },
    "CacheConfiguration": {
      "type": "object",
      "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
      "properties": {
        "queryParameterStripDirective": {
          "$ref": "#/definitions/FrontDoorQuery",
          "description": "Treatment of URL query terms when forming the cache key."
        },
        "queryParameters": {
          "type": "string",
          "description": "query parameters to include or exclude (comma separated)."
        },
        "dynamicCompression": {
          "$ref": "#/definitions/DynamicCompressionEnabled",
          "description": "Whether to use dynamic compression for cached content"
        },
        "cacheDuration": {
          "type": "string",
          "format": "duration",
          "description": "The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year"
        }
      }
    },
    "CheckNameAvailabilityInput": {
      "type": "object",
      "description": "Input of CheckNameAvailability API.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name to validate."
        },
        "type": {
          "$ref": "#/definitions/ResourceType",
          "description": "The type of the resource whose name is to be validated."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameAvailabilityOutput": {
      "type": "object",
      "description": "Output of check name availability API.",
      "properties": {
        "nameAvailability": {
          "$ref": "#/definitions/Availability",
          "description": "Indicates whether the name is available.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The reason why the name is not available.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed error message describing why the name is not available.",
          "readOnly": true
        }
      }
    },
    "CustomHttpsConfiguration": {
      "type": "object",
      "description": "Https settings for a domain",
      "properties": {
        "certificateSource": {
          "$ref": "#/definitions/FrontDoorCertificateSource",
          "description": "Defines the source of the SSL certificate"
        },
        "protocolType": {
          "$ref": "#/definitions/FrontDoorTlsProtocolType",
          "description": "Defines the TLS extension protocol that is used for secure delivery"
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/MinimumTLSVersion",
          "description": "The minimum TLS version required from the clients to establish an SSL handshake with Front Door."
        },
        "keyVaultCertificateSourceParameters": {
          "$ref": "#/definitions/KeyVaultCertificateSourceParameters",
          "description": "KeyVault certificate source parameters (if certificateSource=AzureKeyVault)",
          "x-ms-client-flatten": true
        },
        "frontDoorCertificateSourceParameters": {
          "$ref": "#/definitions/FrontDoorCertificateSourceParameters",
          "description": "Parameters required for enabling SSL with Front Door-managed certificates (if certificateSource=FrontDoor)",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "certificateSource",
        "protocolType",
        "minimumTlsVersion"
      ]
    },
    "CustomHttpsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of Custom Https of the frontendEndpoint.",
      "enum": [
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CustomHttpsProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabling",
            "value": "Enabling"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabling",
            "value": "Disabling"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "CustomHttpsProvisioningSubstate": {
      "type": "string",
      "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
      "enum": [
        "SubmittingDomainControlValidationRequest",
        "PendingDomainControlValidationREquestApproval",
        "DomainControlValidationRequestApproved",
        "DomainControlValidationRequestRejected",
        "DomainControlValidationRequestTimedOut",
        "IssuingCertificate",
        "DeployingCertificate",
        "CertificateDeployed",
        "DeletingCertificate",
        "CertificateDeleted"
      ],
      "x-ms-enum": {
        "name": "CustomHttpsProvisioningSubstate",
        "modelAsString": true,
        "values": [
          {
            "name": "SubmittingDomainControlValidationRequest",
            "value": "SubmittingDomainControlValidationRequest"
          },
          {
            "name": "PendingDomainControlValidationREquestApproval",
            "value": "PendingDomainControlValidationREquestApproval"
          },
          {
            "name": "DomainControlValidationRequestApproved",
            "value": "DomainControlValidationRequestApproved"
          },
          {
            "name": "DomainControlValidationRequestRejected",
            "value": "DomainControlValidationRequestRejected"
          },
          {
            "name": "DomainControlValidationRequestTimedOut",
            "value": "DomainControlValidationRequestTimedOut"
          },
          {
            "name": "IssuingCertificate",
            "value": "IssuingCertificate"
          },
          {
            "name": "DeployingCertificate",
            "value": "DeployingCertificate"
          },
          {
            "name": "CertificateDeployed",
            "value": "CertificateDeployed"
          },
          {
            "name": "DeletingCertificate",
            "value": "DeletingCertificate"
          },
          {
            "name": "CertificateDeleted",
            "value": "CertificateDeleted"
          }
        ]
      }
    },
    "CustomRule": {
      "type": "object",
      "description": "Defines contents of a web application rule",
      "properties": {
        "name": {
          "type": "string",
          "description": "Describes the name of the rule.",
          "maxLength": 128
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value."
        },
        "enabledState": {
          "$ref": "#/definitions/CustomRuleEnabledState",
          "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified."
        },
        "ruleType": {
          "$ref": "#/definitions/RuleType",
          "description": "Describes type of rule."
        },
        "rateLimitDurationInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time window for resetting the rate limit count. Default is 1 minute.",
          "maximum": 5
        },
        "rateLimitThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Number of allowed requests per client within the time window."
        },
        "groupBy": {
          "type": "array",
          "description": "Describes the list of variables to group the rate limit requests",
          "items": {
            "$ref": "#/definitions/GroupByVariable"
          },
          "x-ms-identifiers": []
        },
        "matchConditions": {
          "type": "array",
          "description": "List of match conditions.",
          "items": {
            "$ref": "#/definitions/MatchCondition"
          },
          "x-ms-identifiers": []
        },
        "action": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ActionType",
          "description": "Describes what action to be applied when rule matches."
        }
      },
      "required": [
        "priority",
        "ruleType",
        "matchConditions",
        "action"
      ]
    },
    "CustomRuleEnabledState": {
      "type": "string",
      "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CustomRuleEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "CustomRuleList": {
      "type": "object",
      "description": "Defines contents of custom rules",
      "properties": {
        "rules": {
          "type": "array",
          "description": "List of rules",
          "items": {
            "$ref": "#/definitions/CustomRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DynamicCompressionEnabled": {
      "type": "string",
      "description": "Whether to use dynamic compression for cached content",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DynamicCompressionEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "Endpoint": {
      "type": "object",
      "description": "Defines the endpoint properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint"
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint URL"
        }
      }
    },
    "EndpointType": {
      "type": "string",
      "description": "The type of endpoint",
      "enum": [
        "AFD",
        "AzureRegion",
        "CDN",
        "ATM"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "AFD",
            "value": "AFD"
          },
          {
            "name": "AzureRegion",
            "value": "AzureRegion"
          },
          {
            "name": "CDN",
            "value": "CDN"
          },
          {
            "name": "ATM",
            "value": "ATM"
          }
        ]
      }
    },
    "Experiment": {
      "type": "object",
      "description": "Defines the properties of an Experiment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExperimentProperties",
          "description": "The properties of an Experiment",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ExperimentList": {
      "type": "object",
      "description": "Defines a list of Experiments. It contains a list of Experiment objects and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Experiment items on this page",
          "items": {
            "$ref": "#/definitions/Experiment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExperimentProperties": {
      "type": "object",
      "description": "Defines the properties of an experiment",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the details or intents of the Experiment"
        },
        "endpointA": {
          "$ref": "#/definitions/Endpoint",
          "description": "The endpoint A of an experiment"
        },
        "endpointB": {
          "$ref": "#/definitions/Endpoint",
          "description": "The endpoint B of an experiment"
        },
        "enabledState": {
          "$ref": "#/definitions/State",
          "description": "The state of the Experiment"
        },
        "resourceState": {
          "$ref": "#/definitions/NetworkExperimentResourceState",
          "description": "Resource status.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The description of Experiment status from the server side",
          "readOnly": true
        },
        "scriptFileUri": {
          "type": "string",
          "description": "The uri to the Script used in the Experiment",
          "readOnly": true
        }
      }
    },
    "ExperimentUpdateModel": {
      "type": "object",
      "description": "Defines modifiable attributes of an Experiment",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ExperimentUpdateProperties",
          "description": "The properties of a Profile",
          "x-ms-client-flatten": true
        }
      }
    },
    "ExperimentUpdateProperties": {
      "type": "object",
      "description": "Defines the properties of an experiment",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the intent or details of the Experiment"
        },
        "enabledState": {
          "$ref": "#/definitions/State",
          "description": "The state of the Experiment"
        }
      }
    },
    "ForwardingConfiguration": {
      "type": "object",
      "description": "Describes Forwarding Route.",
      "properties": {
        "customForwardingPath": {
          "type": "string",
          "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path."
        },
        "forwardingProtocol": {
          "$ref": "#/definitions/FrontDoorForwardingProtocol",
          "description": "Protocol this rule will use when forwarding traffic to backends."
        },
        "cacheConfiguration": {
          "$ref": "#/definitions/CacheConfiguration",
          "description": "The caching configuration associated with this rule."
        },
        "backendPool": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to the BackendPool which this rule routes to."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RouteConfiguration"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"
    },
    "FrontDoor": {
      "type": "object",
      "description": "Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FrontDoorProperties",
          "description": "Properties of the Front Door Load Balancer",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FrontDoorCertificateSource": {
      "type": "string",
      "description": "Defines the source of the SSL certificate",
      "enum": [
        "AzureKeyVault",
        "FrontDoor"
      ],
      "x-ms-enum": {
        "name": "FrontDoorCertificateSource",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureKeyVault",
            "value": "AzureKeyVault"
          },
          {
            "name": "FrontDoor",
            "value": "FrontDoor"
          }
        ]
      }
    },
    "FrontDoorCertificateSourceParameters": {
      "type": "object",
      "description": "Parameters required for enabling SSL with Front Door-managed certificates",
      "properties": {
        "certificateType": {
          "$ref": "#/definitions/FrontDoorCertificateType",
          "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint"
        }
      }
    },
    "FrontDoorCertificateType": {
      "type": "string",
      "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
      "enum": [
        "Dedicated"
      ],
      "x-ms-enum": {
        "name": "FrontDoorCertificateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Dedicated",
            "value": "Dedicated"
          }
        ]
      }
    },
    "FrontDoorEnabledState": {
      "type": "string",
      "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "FrontDoorEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "FrontDoorForwardingProtocol": {
      "type": "string",
      "description": "Protocol this rule will use when forwarding traffic to backends.",
      "enum": [
        "HttpOnly",
        "HttpsOnly",
        "MatchRequest"
      ],
      "x-ms-enum": {
        "name": "FrontDoorForwardingProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "HttpOnly",
            "value": "HttpOnly"
          },
          {
            "name": "HttpsOnly",
            "value": "HttpsOnly"
          },
          {
            "name": "MatchRequest",
            "value": "MatchRequest"
          }
        ]
      }
    },
    "FrontDoorListResult": {
      "type": "object",
      "description": "The response of a FrontDoor list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoor items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoor"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create an endpoint.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status of the Front Door.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the Front Door.",
          "readOnly": true
        },
        "cname": {
          "type": "string",
          "description": "The host that each frontendEndpoint must CNAME to.",
          "readOnly": true
        },
        "frontdoorId": {
          "type": "string",
          "description": "The Id of the frontdoor.",
          "readOnly": true
        },
        "rulesEngines": {
          "type": "array",
          "description": "Rules Engine Configurations available to routing rules.",
          "items": {
            "$ref": "#/definitions/RulesEngine"
          },
          "readOnly": true
        },
        "extendedProperties": {
          "type": "object",
          "description": "Key-Value pair representing additional properties for frontdoor.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FrontDoorUpdateParameters"
        }
      ]
    },
    "FrontDoorProtocol": {
      "type": "string",
      "description": "Accepted protocol schemes.",
      "enum": [
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "FrontDoorProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "Http",
            "value": "Http"
          },
          {
            "name": "Https",
            "value": "Https"
          }
        ]
      }
    },
    "FrontDoorQuery": {
      "type": "string",
      "description": "Treatment of URL query terms when forming the cache key.",
      "enum": [
        "StripNone",
        "StripAll",
        "StripOnly",
        "StripAllExcept"
      ],
      "x-ms-enum": {
        "name": "FrontDoorQuery",
        "modelAsString": true,
        "values": [
          {
            "name": "StripNone",
            "value": "StripNone"
          },
          {
            "name": "StripAll",
            "value": "StripAll"
          },
          {
            "name": "StripOnly",
            "value": "StripOnly"
          },
          {
            "name": "StripAllExcept",
            "value": "StripAllExcept"
          }
        ]
      }
    },
    "FrontDoorRedirectProtocol": {
      "type": "string",
      "description": "The protocol of the destination to where the traffic is redirected",
      "enum": [
        "HttpOnly",
        "HttpsOnly",
        "MatchRequest"
      ],
      "x-ms-enum": {
        "name": "FrontDoorRedirectProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "HttpOnly",
            "value": "HttpOnly"
          },
          {
            "name": "HttpsOnly",
            "value": "HttpsOnly"
          },
          {
            "name": "MatchRequest",
            "value": "MatchRequest"
          }
        ]
      }
    },
    "FrontDoorRedirectType": {
      "type": "string",
      "description": "The redirect type the rule will use when redirecting traffic.",
      "enum": [
        "Moved",
        "Found",
        "TemporaryRedirect",
        "PermanentRedirect"
      ],
      "x-ms-enum": {
        "name": "FrontDoorRedirectType",
        "modelAsString": true,
        "values": [
          {
            "name": "Moved",
            "value": "Moved"
          },
          {
            "name": "Found",
            "value": "Found"
          },
          {
            "name": "TemporaryRedirect",
            "value": "TemporaryRedirect"
          },
          {
            "name": "PermanentRedirect",
            "value": "PermanentRedirect"
          }
        ]
      }
    },
    "FrontDoorResourceState": {
      "type": "string",
      "description": "Resource status of the Front Door or Front Door SubResource.",
      "enum": [
        "Creating",
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Deleting",
        "Migrating",
        "Migrated"
      ],
      "x-ms-enum": {
        "name": "FrontDoorResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Enabling",
            "value": "Enabling"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabling",
            "value": "Disabling"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Migrating",
            "value": "Migrating"
          },
          {
            "name": "Migrated",
            "value": "Migrated"
          }
        ]
      }
    },
    "FrontDoorTlsProtocolType": {
      "type": "string",
      "description": "Defines the TLS extension protocol that is used for secure delivery",
      "enum": [
        "ServerNameIndication"
      ],
      "x-ms-enum": {
        "name": "FrontDoorTlsProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "ServerNameIndication",
            "value": "ServerNameIndication"
          }
        ]
      }
    },
    "FrontDoorUpdateParameters": {
      "type": "object",
      "description": "The properties needed to update a Front Door",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "A friendly name for the frontDoor"
        },
        "routingRules": {
          "type": "array",
          "description": "Routing rules associated with this Front Door.",
          "items": {
            "$ref": "#/definitions/RoutingRule"
          }
        },
        "loadBalancingSettings": {
          "type": "array",
          "description": "Load balancing settings associated with this Front Door instance.",
          "items": {
            "$ref": "#/definitions/LoadBalancingSettingsModel"
          }
        },
        "healthProbeSettings": {
          "type": "array",
          "description": "Health probe settings associated with this Front Door instance.",
          "items": {
            "$ref": "#/definitions/HealthProbeSettingsModel"
          }
        },
        "backendPools": {
          "type": "array",
          "description": "Backend pools available to routing rules.",
          "items": {
            "$ref": "#/definitions/BackendPool"
          }
        },
        "frontendEndpoints": {
          "type": "array",
          "description": "Frontend endpoints available to routing rules.",
          "items": {
            "$ref": "#/definitions/FrontendEndpoint"
          }
        },
        "backendPoolsSettings": {
          "$ref": "#/definitions/BackendPoolsSettings",
          "description": "Settings for all backendPools"
        },
        "enabledState": {
          "$ref": "#/definitions/FrontDoorEnabledState",
          "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'"
        }
      }
    },
    "FrontendEndpoint": {
      "type": "object",
      "description": "A frontend endpoint used for routing.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FrontendEndpointProperties",
          "description": "Properties of the Frontend endpoint",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontendEndpointLink": {
      "type": "object",
      "description": "Defines the Resource ID for a Frontend Endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "FrontendEndpointListResult": {
      "type": "object",
      "description": "The response of a FrontendEndpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontendEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/FrontendEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontendEndpointProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a frontend endpoint.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        },
        "customHttpsProvisioningState": {
          "$ref": "#/definitions/CustomHttpsProvisioningState",
          "description": "Provisioning status of Custom Https of the frontendEndpoint.",
          "readOnly": true
        },
        "customHttpsProvisioningSubstate": {
          "$ref": "#/definitions/CustomHttpsProvisioningSubstate",
          "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
          "readOnly": true
        },
        "customHttpsConfiguration": {
          "$ref": "#/definitions/CustomHttpsConfiguration",
          "description": "The configuration specifying how to enable HTTPS",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FrontendEndpointUpdateParameters"
        }
      ]
    },
    "FrontendEndpointUpdateParameters": {
      "type": "object",
      "description": "Frontend endpoint used in routing rule",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the frontendEndpoint. Must be a domain name."
        },
        "sessionAffinityEnabledState": {
          "$ref": "#/definitions/SessionAffinityEnabledState",
          "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'"
        },
        "sessionAffinityTtlSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable."
        },
        "webApplicationFirewallPolicyLink": {
          "$ref": "#/definitions/FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink",
          "description": "Defines the Web Application Firewall policy for each host (if applicable)"
        }
      }
    },
    "FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink": {
      "type": "object",
      "description": "Defines the Web Application Firewall policy for each host (if applicable)",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "GroupByVariable": {
      "type": "object",
      "description": "Describes the variables available to group the rate limit requests",
      "properties": {
        "variableName": {
          "$ref": "#/definitions/VariableName",
          "description": "Describes the supported variable for group by"
        }
      },
      "required": [
        "variableName"
      ]
    },
    "HeaderAction": {
      "type": "object",
      "description": "An action that can manipulate an http header.",
      "properties": {
        "headerActionType": {
          "$ref": "#/definitions/HeaderActionType",
          "description": "Which type of manipulation to apply to the header."
        },
        "headerName": {
          "type": "string",
          "description": "The name of the header this action will apply to."
        },
        "value": {
          "type": "string",
          "description": "The value to update the given header name with. This value is not used if the actionType is Delete."
        }
      },
      "required": [
        "headerActionType",
        "headerName"
      ]
    },
    "HeaderActionType": {
      "type": "string",
      "description": "Which type of manipulation to apply to the header.",
      "enum": [
        "Append",
        "Delete",
        "Overwrite"
      ],
      "x-ms-enum": {
        "name": "HeaderActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Append",
            "value": "Append"
          },
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Overwrite",
            "value": "Overwrite"
          }
        ]
      }
    },
    "HealthProbeEnabled": {
      "type": "string",
      "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "HealthProbeEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "HealthProbeSettingsModel": {
      "type": "object",
      "description": "Load balancing settings for a backend pool",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HealthProbeSettingsProperties",
          "description": "Properties of the health probe settings",
          "x-ms-client-flatten": true
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "HealthProbeSettingsProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a health probe settings.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HealthProbeSettingsUpdateParameters"
        }
      ]
    },
    "HealthProbeSettingsUpdateParameters": {
      "type": "object",
      "description": "L7 health probe settings for a backend pool",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to use for the health probe. Default is /"
        },
        "protocol": {
          "$ref": "#/definitions/FrontDoorProtocol",
          "description": "Protocol scheme to use for this probe"
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The number of seconds between health probes."
        },
        "healthProbeMethod": {
          "type": "string",
          "description": "Configures which HTTP method to use to probe the backends defined under backendPools.",
          "default": "HEAD",
          "enum": [
            "GET",
            "HEAD"
          ],
          "x-ms-enum": {
            "name": "FrontDoorHealthProbeMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "GET",
                "value": "GET"
              },
              {
                "name": "HEAD",
                "value": "HEAD"
              }
            ]
          }
        },
        "enabledState": {
          "$ref": "#/definitions/HealthProbeEnabled",
          "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool."
        }
      }
    },
    "KeyVaultCertificateSourceParameters": {
      "type": "object",
      "description": "Parameters required for bring-your-own-certification via Key Vault",
      "properties": {
        "vault": {
          "$ref": "#/definitions/KeyVaultCertificateSourceParametersVault",
          "description": "The Key Vault containing the SSL certificate"
        },
        "secretName": {
          "type": "string",
          "description": "The name of the Key Vault secret representing the full certificate PFX"
        },
        "secretVersion": {
          "type": "string",
          "description": "The version of the Key Vault secret representing the full certificate PFX"
        }
      }
    },
    "KeyVaultCertificateSourceParametersVault": {
      "type": "object",
      "description": "The Key Vault containing the SSL certificate",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "LatencyMetric": {
      "type": "object",
      "description": "Defines the properties of a latency metric used in the latency scorecard",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Latency Metric",
          "readOnly": true
        },
        "endDateTimeUTC": {
          "type": "string",
          "description": "The end time of the Latency Scorecard in UTC",
          "readOnly": true
        },
        "aValue": {
          "type": "number",
          "format": "float",
          "description": "The metric value of the A endpoint",
          "readOnly": true
        },
        "bValue": {
          "type": "number",
          "format": "float",
          "description": "The metric value of the B endpoint",
          "readOnly": true
        },
        "delta": {
          "type": "number",
          "format": "float",
          "description": "The difference in value between endpoint A and B",
          "readOnly": true
        },
        "deltaPercent": {
          "type": "number",
          "format": "float",
          "description": "The percent difference between endpoint A and B",
          "readOnly": true
        },
        "aCLower95CI": {
          "type": "number",
          "format": "float",
          "description": "The lower end of the 95% confidence interval for endpoint A",
          "readOnly": true
        },
        "aHUpper95CI": {
          "type": "number",
          "format": "float",
          "description": "The upper end of the 95% confidence interval for endpoint A",
          "readOnly": true
        },
        "bCLower95CI": {
          "type": "number",
          "format": "float",
          "description": "The lower end of the 95% confidence interval for endpoint B",
          "readOnly": true
        },
        "bUpper95CI": {
          "type": "number",
          "format": "float",
          "description": "The upper end of the 95% confidence interval for endpoint B",
          "readOnly": true
        }
      }
    },
    "LatencyScorecard": {
      "type": "object",
      "description": "Defines the LatencyScorecard",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LatencyScorecardProperties",
          "description": "The properties of a latency scorecard",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "LatencyScorecardProperties": {
      "type": "object",
      "description": "Defines a the properties of a Latency Scorecard",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the Latency Scorecard",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the Latency Scorecard",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the Latency Scorecard",
          "readOnly": true
        },
        "endpointA": {
          "type": "string",
          "description": "The A endpoint in the scorecard",
          "readOnly": true
        },
        "endpointB": {
          "type": "string",
          "description": "The B endpoint in the scorecard",
          "readOnly": true
        },
        "startDateTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Latency Scorecard in UTC",
          "readOnly": true
        },
        "endDateTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Latency Scorecard in UTC",
          "readOnly": true
        },
        "country": {
          "type": "string",
          "description": "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
          "readOnly": true
        },
        "latencyMetrics": {
          "type": "array",
          "description": "The latency metrics of the Latency Scorecard",
          "items": {
            "$ref": "#/definitions/LatencyMetric"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "LoadBalancingSettingsModel": {
      "type": "object",
      "description": "Load balancing settings for a backend pool",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LoadBalancingSettingsProperties",
          "description": "Properties of the load balancing settings",
          "x-ms-client-flatten": true
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "LoadBalancingSettingsProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create load balancing settings",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LoadBalancingSettingsUpdateParameters"
        }
      ]
    },
    "LoadBalancingSettingsUpdateParameters": {
      "type": "object",
      "description": "Round-Robin load balancing settings for a backend pool",
      "properties": {
        "sampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "The number of samples to consider for load balancing decisions"
        },
        "successfulSamplesRequired": {
          "type": "integer",
          "format": "int32",
          "description": "The number of samples within the sample period that must succeed"
        },
        "additionalLatencyMilliseconds": {
          "type": "integer",
          "format": "int32",
          "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket"
        }
      }
    },
    "ManagedRuleDefinition": {
      "type": "object",
      "description": "Describes a managed rule definition.",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Identifier for the managed rule.",
          "readOnly": true
        },
        "defaultState": {
          "$ref": "#/definitions/ManagedRuleEnabledState",
          "description": "Describes the default state for the managed rule.",
          "readOnly": true
        },
        "defaultAction": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ActionType",
          "description": "Describes the default action to be applied when the managed rule matches.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Describes the functionality of the managed rule.",
          "readOnly": true
        }
      }
    },
    "ManagedRuleEnabledState": {
      "type": "string",
      "description": "Describes if the managed rule is in enabled or disabled state.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "ManagedRuleEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "ManagedRuleExclusion": {
      "type": "object",
      "description": "Exclude variables from managed rule evaluation.",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/ManagedRuleExclusionMatchVariable",
          "description": "The variable type to be excluded."
        },
        "selectorMatchOperator": {
          "$ref": "#/definitions/ManagedRuleExclusionSelectorMatchOperator",
          "description": "Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to."
        },
        "selector": {
          "type": "string",
          "description": "Selector value for which elements in the collection this exclusion applies to."
        }
      },
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ]
    },
    "ManagedRuleExclusionMatchVariable": {
      "type": "string",
      "description": "The variable type to be excluded.",
      "enum": [
        "RequestHeaderNames",
        "RequestCookieNames",
        "QueryStringArgNames",
        "RequestBodyPostArgNames",
        "RequestBodyJsonArgNames"
      ],
      "x-ms-enum": {
        "name": "ManagedRuleExclusionMatchVariable",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestHeaderNames",
            "value": "RequestHeaderNames"
          },
          {
            "name": "RequestCookieNames",
            "value": "RequestCookieNames"
          },
          {
            "name": "QueryStringArgNames",
            "value": "QueryStringArgNames"
          },
          {
            "name": "RequestBodyPostArgNames",
            "value": "RequestBodyPostArgNames"
          },
          {
            "name": "RequestBodyJsonArgNames",
            "value": "RequestBodyJsonArgNames"
          }
        ]
      }
    },
    "ManagedRuleExclusionSelectorMatchOperator": {
      "type": "string",
      "description": "Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.",
      "enum": [
        "Equals",
        "Contains",
        "StartsWith",
        "EndsWith",
        "EqualsAny"
      ],
      "x-ms-enum": {
        "name": "ManagedRuleExclusionSelectorMatchOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Equals",
            "value": "Equals"
          },
          {
            "name": "Contains",
            "value": "Contains"
          },
          {
            "name": "StartsWith",
            "value": "StartsWith"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith"
          },
          {
            "name": "EqualsAny",
            "value": "EqualsAny"
          }
        ]
      }
    },
    "ManagedRuleGroupDefinition": {
      "type": "object",
      "description": "Describes a managed rule group.",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "Name of the managed rule group.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the managed rule group.",
          "readOnly": true
        },
        "rules": {
          "type": "array",
          "description": "List of rules within the managed rule group.",
          "items": {
            "$ref": "#/definitions/ManagedRuleDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedRuleGroupOverride": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "Describes the managed rule group to override."
        },
        "exclusions": {
          "type": "array",
          "description": "Describes the exclusions that are applied to all rules in the group.",
          "items": {
            "$ref": "#/definitions/ManagedRuleExclusion"
          },
          "x-ms-identifiers": []
        },
        "rules": {
          "type": "array",
          "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
          "items": {
            "$ref": "#/definitions/ManagedRuleOverride"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleGroupName"
      ]
    },
    "ManagedRuleOverride": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Identifier for the managed rule."
        },
        "enabledState": {
          "$ref": "#/definitions/ManagedRuleEnabledState",
          "description": "Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified."
        },
        "action": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ActionType",
          "description": "Describes the override action to be applied when rule matches."
        },
        "exclusions": {
          "type": "array",
          "description": "Describes the exclusions that are applied to this specific rule.",
          "items": {
            "$ref": "#/definitions/ManagedRuleExclusion"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleId"
      ]
    },
    "ManagedRuleSet": {
      "type": "object",
      "description": "Defines a managed rule set.",
      "properties": {
        "ruleSetType": {
          "type": "string",
          "description": "Defines the rule set type to use."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "Defines the version of the rule set to use."
        },
        "ruleSetAction": {
          "$ref": "#/definitions/ManagedRuleSetActionType",
          "description": "Defines the rule set action."
        },
        "exclusions": {
          "type": "array",
          "description": "Describes the exclusions that are applied to all rules in the set.",
          "items": {
            "$ref": "#/definitions/ManagedRuleExclusion"
          },
          "x-ms-identifiers": []
        },
        "ruleGroupOverrides": {
          "type": "array",
          "description": "Defines the rule group overrides to apply to the rule set.",
          "items": {
            "$ref": "#/definitions/ManagedRuleGroupOverride"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ]
    },
    "ManagedRuleSetActionType": {
      "type": "string",
      "description": "Defines the action to take when a managed rule set score threshold is met.",
      "enum": [
        "Block",
        "Log",
        "Redirect"
      ],
      "x-ms-enum": {
        "name": "ManagedRuleSetActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Block",
            "value": "Block"
          },
          {
            "name": "Log",
            "value": "Log"
          },
          {
            "name": "Redirect",
            "value": "Redirect"
          }
        ]
      }
    },
    "ManagedRuleSetDefinition": {
      "type": "object",
      "description": "Describes the a managed rule set definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedRuleSetDefinitionProperties",
          "description": "Properties for a managed rule set definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ManagedRuleSetDefinitionList": {
      "type": "object",
      "description": "List of managed rule set definitions available for use in a policy.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedRuleSetDefinition items on this page",
          "items": {
            "$ref": "#/definitions/ManagedRuleSetDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedRuleSetDefinitionProperties": {
      "type": "object",
      "description": "Properties for a managed rule set definition.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the managed rule set.",
          "readOnly": true
        },
        "ruleSetId": {
          "type": "string",
          "description": "Id of the managed rule set.",
          "readOnly": true
        },
        "ruleSetType": {
          "type": "string",
          "description": "Type of the managed rule set.",
          "readOnly": true
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "Version of the managed rule set type.",
          "readOnly": true
        },
        "ruleGroups": {
          "type": "array",
          "description": "Rule groups of the managed rule set.",
          "items": {
            "$ref": "#/definitions/ManagedRuleGroupDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedRuleSetList": {
      "type": "object",
      "description": "Defines the list of managed rule sets for the policy.",
      "properties": {
        "managedRuleSets": {
          "type": "array",
          "description": "List of rule sets.",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MatchCondition": {
      "type": "object",
      "description": "Define a match condition.",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/MatchVariable",
          "description": "Request variable to compare with."
        },
        "selector": {
          "type": "string",
          "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null."
        },
        "operator": {
          "$ref": "#/definitions/Operator",
          "description": "Comparison type to use for matching with the variable value."
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if the result of this condition should be negated."
        },
        "matchValue": {
          "type": "array",
          "description": "List of possible match values.",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms.",
          "items": {
            "$ref": "#/definitions/TransformType"
          }
        }
      },
      "required": [
        "matchVariable",
        "operator",
        "matchValue"
      ]
    },
    "MatchProcessingBehavior": {
      "type": "string",
      "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.",
      "enum": [
        "Continue",
        "Stop"
      ],
      "x-ms-enum": {
        "name": "MatchProcessingBehavior",
        "modelAsString": true,
        "values": [
          {
            "name": "Continue",
            "value": "Continue"
          },
          {
            "name": "Stop",
            "value": "Stop"
          }
        ]
      }
    },
    "MatchVariable": {
      "type": "string",
      "description": "Request variable to compare with.",
      "enum": [
        "RemoteAddr",
        "RequestMethod",
        "QueryString",
        "PostArgs",
        "RequestUri",
        "RequestHeader",
        "RequestBody",
        "Cookies",
        "SocketAddr"
      ],
      "x-ms-enum": {
        "name": "MatchVariable",
        "modelAsString": true,
        "values": [
          {
            "name": "RemoteAddr",
            "value": "RemoteAddr"
          },
          {
            "name": "RequestMethod",
            "value": "RequestMethod"
          },
          {
            "name": "QueryString",
            "value": "QueryString"
          },
          {
            "name": "PostArgs",
            "value": "PostArgs"
          },
          {
            "name": "RequestUri",
            "value": "RequestUri"
          },
          {
            "name": "RequestHeader",
            "value": "RequestHeader"
          },
          {
            "name": "RequestBody",
            "value": "RequestBody"
          },
          {
            "name": "Cookies",
            "value": "Cookies"
          },
          {
            "name": "SocketAddr",
            "value": "SocketAddr"
          }
        ]
      }
    },
    "MinimumTLSVersion": {
      "type": "string",
      "description": "The minimum TLS version required from the clients to establish an SSL handshake with Front Door.",
      "enum": [
        "1.0",
        "1.2"
      ],
      "x-ms-enum": {
        "name": "MinimumTLSVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "1.0",
            "value": "1.0"
          },
          {
            "name": "1.2",
            "value": "1.2"
          }
        ]
      }
    },
    "NetworkExperimentResourceState": {
      "type": "string",
      "description": "Defines the server side resource status",
      "enum": [
        "Creating",
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "NetworkExperimentResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Enabling",
            "value": "Enabling"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabling",
            "value": "Disabling"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "Operator": {
      "type": "string",
      "description": "Comparison type to use for matching with the variable value.",
      "enum": [
        "Any",
        "IPMatch",
        "GeoMatch",
        "Equal",
        "Contains",
        "LessThan",
        "GreaterThan",
        "LessThanOrEqual",
        "GreaterThanOrEqual",
        "BeginsWith",
        "EndsWith",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "Operator",
        "modelAsString": true,
        "values": [
          {
            "name": "Any",
            "value": "Any"
          },
          {
            "name": "IPMatch",
            "value": "IPMatch"
          },
          {
            "name": "GeoMatch",
            "value": "GeoMatch"
          },
          {
            "name": "Equal",
            "value": "Equal"
          },
          {
            "name": "Contains",
            "value": "Contains"
          },
          {
            "name": "LessThan",
            "value": "LessThan"
          },
          {
            "name": "GreaterThan",
            "value": "GreaterThan"
          },
          {
            "name": "LessThanOrEqual",
            "value": "LessThanOrEqual"
          },
          {
            "name": "GreaterThanOrEqual",
            "value": "GreaterThanOrEqual"
          },
          {
            "name": "BeginsWith",
            "value": "BeginsWith"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith"
          },
          {
            "name": "RegEx",
            "value": "RegEx"
          }
        ]
      }
    },
    "PolicyEnabledState": {
      "type": "string",
      "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "PolicyEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "PolicyMode": {
      "type": "string",
      "description": "Describes if it is in detection mode or prevention mode at policy level.",
      "enum": [
        "Prevention",
        "Detection"
      ],
      "x-ms-enum": {
        "name": "PolicyMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Prevention",
            "value": "Prevention"
          },
          {
            "name": "Detection",
            "value": "Detection"
          }
        ]
      }
    },
    "PolicyRequestBodyCheck": {
      "type": "string",
      "description": "Describes if policy managed rules will inspect the request body content.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "PolicyRequestBodyCheck",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "PolicyResourceState": {
      "type": "string",
      "description": "Resource status of the policy.",
      "enum": [
        "Creating",
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "PolicyResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Enabling",
            "value": "Enabling"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabling",
            "value": "Disabling"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "PolicySettings": {
      "type": "object",
      "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
      "properties": {
        "enabledState": {
          "$ref": "#/definitions/PolicyEnabledState",
          "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified."
        },
        "mode": {
          "$ref": "#/definitions/PolicyMode",
          "description": "Describes if it is in detection mode or prevention mode at policy level."
        },
        "redirectUrl": {
          "type": "string",
          "description": "If action type is redirect, this field represents redirect URL for the client."
        },
        "customBlockResponseStatusCode": {
          "type": "integer",
          "format": "int32",
          "description": "If the action type is block, customer can override the response status code."
        },
        "customBlockResponseBody": {
          "type": "string",
          "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
        },
        "requestBodyCheck": {
          "$ref": "#/definitions/PolicyRequestBodyCheck",
          "description": "Describes if policy managed rules will inspect the request body content."
        },
        "javascriptChallengeExpirationInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.",
          "minimum": 5,
          "maximum": 1440
        },
        "logScrubbing": {
          "$ref": "#/definitions/PolicySettingsLogScrubbing",
          "description": "Defines rules that scrub sensitive fields in the Web Application Firewall logs.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PolicySettingsLogScrubbing": {
      "type": "object",
      "description": "Defines rules that scrub sensitive fields in the Web Application Firewall logs.",
      "properties": {
        "state": {
          "$ref": "#/definitions/WebApplicationFirewallScrubbingState",
          "description": "State of the log scrubbing config. Default value is Enabled."
        },
        "scrubbingRules": {
          "type": "array",
          "description": "List of log scrubbing rules applied to the Web Application Firewall logs.",
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallScrubbingRules"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PreconfiguredEndpoint": {
      "type": "object",
      "description": "Defines the properties of a preconfigured endpoint",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PreconfiguredEndpointProperties",
          "description": "The properties of a preconfiguredEndpoint",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PreconfiguredEndpointList": {
      "type": "object",
      "description": "Defines a list of preconfigured endpoints.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PreconfiguredEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/PreconfiguredEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PreconfiguredEndpointProperties": {
      "type": "object",
      "description": "Defines the properties of a preconfigured endpoint",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the endpoint"
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint that is preconfigured"
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "The type of endpoint"
        },
        "backend": {
          "type": "string",
          "description": "The preconfigured endpoint backend"
        }
      }
    },
    "PrivateEndpointStatus": {
      "type": "string",
      "description": "The Approval status for the connection to the Private Link",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          },
          {
            "name": "Timeout",
            "value": "Timeout"
          }
        ]
      }
    },
    "Profile": {
      "type": "object",
      "description": "Defines an Network Experiment Profile and lists of Experiments",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProfileProperties",
          "description": "The properties of a Profile",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProfileList": {
      "type": "object",
      "description": "Defines a list of Profiles. It contains a list of Profile objects and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Profile items on this page",
          "items": {
            "$ref": "#/definitions/Profile"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProfileProperties": {
      "type": "object",
      "description": "Defines the properties of an experiment",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/NetworkExperimentResourceState",
          "description": "Resource status.",
          "readOnly": true
        },
        "enabledState": {
          "$ref": "#/definitions/State",
          "description": "The state of the Experiment"
        }
      }
    },
    "ProfileUpdateModel": {
      "type": "object",
      "description": "Defines modifiable attributes of a Profile",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProfileUpdateProperties",
          "description": "The properties of a Profile",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProfileUpdateProperties": {
      "type": "object",
      "description": "Defines the properties of an experiment",
      "properties": {
        "enabledState": {
          "$ref": "#/definitions/State",
          "description": "The enabled state of the Profile"
        }
      }
    },
    "PurgeParameters": {
      "type": "object",
      "description": "Parameters required for content purge.",
      "properties": {
        "contentPaths": {
          "type": "array",
          "description": "The path to the content to be purged. Can describe a file path or a wild card directory.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "contentPaths"
      ]
    },
    "RedirectConfiguration": {
      "type": "object",
      "description": "Describes Redirect Route.",
      "properties": {
        "redirectType": {
          "$ref": "#/definitions/FrontDoorRedirectType",
          "description": "The redirect type the rule will use when redirecting traffic."
        },
        "redirectProtocol": {
          "$ref": "#/definitions/FrontDoorRedirectProtocol",
          "description": "The protocol of the destination to where the traffic is redirected"
        },
        "customHost": {
          "type": "string",
          "description": "Host to redirect. Leave empty to use the incoming host as the destination host."
        },
        "customPath": {
          "type": "string",
          "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
        },
        "customFragment": {
          "type": "string",
          "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
        },
        "customQueryString": {
          "type": "string",
          "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RouteConfiguration"
        }
      ],
      "x-ms-discriminator-value": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration"
    },
    "Resource": {
      "type": "object",
      "description": "Common resource representation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResourceType": {
      "type": "string",
      "description": "Type of Front Door resource used in CheckNameAvailability.",
      "enum": [
        "Microsoft.Network/frontDoors",
        "Microsoft.Network/frontDoors/frontendEndpoints"
      ],
      "x-ms-enum": {
        "name": "ResourceType",
        "modelAsString": false
      }
    },
    "RouteConfiguration": {
      "type": "object",
      "description": "Base class for all types of Route.",
      "properties": {
        "@odata.type": {
          "type": "string",
          "x-ms-client-name": "odataType"
        }
      },
      "discriminator": "@odata.type",
      "required": [
        "@odata.type"
      ]
    },
    "RoutingRule": {
      "type": "object",
      "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RoutingRuleProperties",
          "description": "Properties of the Front Door Routing Rule",
          "x-ms-client-flatten": true
        },
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ]
    },
    "RoutingRuleEnabledState": {
      "type": "string",
      "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "RoutingRuleEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "RoutingRuleLink": {
      "type": "object",
      "description": "Defines the Resource ID for a Routing Rule.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "RoutingRuleProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a routing rule.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RoutingRuleUpdateParameters"
        }
      ]
    },
    "RoutingRuleUpdateParameters": {
      "type": "object",
      "description": "Routing rules to apply to an endpoint",
      "properties": {
        "frontendEndpoints": {
          "type": "array",
          "description": "Frontend endpoints associated with this rule",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "acceptedProtocols": {
          "type": "array",
          "description": "Protocol schemes to match for this rule",
          "items": {
            "$ref": "#/definitions/FrontDoorProtocol"
          }
        },
        "patternsToMatch": {
          "type": "array",
          "description": "The route patterns of the rule.",
          "items": {
            "type": "string"
          }
        },
        "enabledState": {
          "$ref": "#/definitions/RoutingRuleEnabledState",
          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
        },
        "routeConfiguration": {
          "$ref": "#/definitions/RouteConfiguration",
          "description": "A reference to the routing configuration."
        },
        "rulesEngine": {
          "$ref": "#/definitions/SubResource",
          "description": "A reference to a specific Rules Engine Configuration to apply to this route."
        },
        "webApplicationFirewallPolicyLink": {
          "$ref": "#/definitions/RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink",
          "description": "Defines the Web Application Firewall policy for each routing rule (if applicable)"
        }
      }
    },
    "RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink": {
      "type": "object",
      "description": "Defines the Web Application Firewall policy for each routing rule (if applicable)",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "RuleType": {
      "type": "string",
      "description": "Describes type of rule.",
      "enum": [
        "MatchRule",
        "RateLimitRule"
      ],
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true,
        "values": [
          {
            "name": "MatchRule",
            "value": "MatchRule"
          },
          {
            "name": "RateLimitRule",
            "value": "RateLimitRule"
          }
        ]
      }
    },
    "RulesEngine": {
      "type": "object",
      "description": "A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RulesEngineProperties",
          "description": "Properties of the Rules Engine Configuration.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RulesEngineAction": {
      "type": "object",
      "description": "One or more actions that will execute, modifying the request and/or response.",
      "properties": {
        "requestHeaderActions": {
          "type": "array",
          "description": "A list of header actions to apply from the request from AFD to the origin.",
          "items": {
            "$ref": "#/definitions/HeaderAction"
          },
          "x-ms-identifiers": []
        },
        "responseHeaderActions": {
          "type": "array",
          "description": "A list of header actions to apply from the response from AFD to the client.",
          "items": {
            "$ref": "#/definitions/HeaderAction"
          },
          "x-ms-identifiers": []
        },
        "routeConfigurationOverride": {
          "$ref": "#/definitions/RouteConfiguration",
          "description": "Override the route configuration."
        }
      }
    },
    "RulesEngineListResult": {
      "type": "object",
      "description": "The response of a RulesEngine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RulesEngine items on this page",
          "items": {
            "$ref": "#/definitions/RulesEngine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RulesEngineMatchCondition": {
      "type": "object",
      "description": "Define a match condition",
      "properties": {
        "rulesEngineMatchVariable": {
          "$ref": "#/definitions/RulesEngineMatchVariable",
          "description": "Match Variable"
        },
        "selector": {
          "type": "string",
          "description": "Name of selector in RequestHeader or RequestBody to be matched"
        },
        "rulesEngineOperator": {
          "$ref": "#/definitions/RulesEngineOperator",
          "description": "Describes operator to apply to the match condition."
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "rulesEngineMatchValue": {
          "type": "array",
          "description": "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/Transform"
          }
        }
      },
      "required": [
        "rulesEngineMatchVariable",
        "rulesEngineOperator",
        "rulesEngineMatchValue"
      ]
    },
    "RulesEngineMatchVariable": {
      "type": "string",
      "description": "Match Variable",
      "enum": [
        "IsMobile",
        "RemoteAddr",
        "RequestMethod",
        "QueryString",
        "PostArgs",
        "RequestUri",
        "RequestPath",
        "RequestFilename",
        "RequestFilenameExtension",
        "RequestHeader",
        "RequestBody",
        "RequestScheme"
      ],
      "x-ms-enum": {
        "name": "RulesEngineMatchVariable",
        "modelAsString": true,
        "values": [
          {
            "name": "IsMobile",
            "value": "IsMobile"
          },
          {
            "name": "RemoteAddr",
            "value": "RemoteAddr"
          },
          {
            "name": "RequestMethod",
            "value": "RequestMethod"
          },
          {
            "name": "QueryString",
            "value": "QueryString"
          },
          {
            "name": "PostArgs",
            "value": "PostArgs"
          },
          {
            "name": "RequestUri",
            "value": "RequestUri"
          },
          {
            "name": "RequestPath",
            "value": "RequestPath"
          },
          {
            "name": "RequestFilename",
            "value": "RequestFilename"
          },
          {
            "name": "RequestFilenameExtension",
            "value": "RequestFilenameExtension"
          },
          {
            "name": "RequestHeader",
            "value": "RequestHeader"
          },
          {
            "name": "RequestBody",
            "value": "RequestBody"
          },
          {
            "name": "RequestScheme",
            "value": "RequestScheme"
          }
        ]
      }
    },
    "RulesEngineOperator": {
      "type": "string",
      "description": "Describes operator to apply to the match condition.",
      "enum": [
        "Any",
        "IPMatch",
        "GeoMatch",
        "Equal",
        "Contains",
        "LessThan",
        "GreaterThan",
        "LessThanOrEqual",
        "GreaterThanOrEqual",
        "BeginsWith",
        "EndsWith"
      ],
      "x-ms-enum": {
        "name": "RulesEngineOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Any",
            "value": "Any"
          },
          {
            "name": "IPMatch",
            "value": "IPMatch"
          },
          {
            "name": "GeoMatch",
            "value": "GeoMatch"
          },
          {
            "name": "Equal",
            "value": "Equal"
          },
          {
            "name": "Contains",
            "value": "Contains"
          },
          {
            "name": "LessThan",
            "value": "LessThan"
          },
          {
            "name": "GreaterThan",
            "value": "GreaterThan"
          },
          {
            "name": "LessThanOrEqual",
            "value": "LessThanOrEqual"
          },
          {
            "name": "GreaterThanOrEqual",
            "value": "GreaterThanOrEqual"
          },
          {
            "name": "BeginsWith",
            "value": "BeginsWith"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith"
          }
        ]
      }
    },
    "RulesEngineProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a Rules Engine Configuration.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/FrontDoorResourceState",
          "description": "Resource status.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RulesEngineUpdateParameters"
        }
      ]
    },
    "RulesEngineRule": {
      "type": "object",
      "description": "Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A name to refer to this specific rule."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "A priority assigned to this rule."
        },
        "action": {
          "$ref": "#/definitions/RulesEngineAction",
          "description": "Actions to perform on the request and response if all of the match conditions are met."
        },
        "matchConditions": {
          "type": "array",
          "description": "A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.",
          "items": {
            "$ref": "#/definitions/RulesEngineMatchCondition"
          },
          "x-ms-identifiers": []
        },
        "matchProcessingBehavior": {
          "$ref": "#/definitions/MatchProcessingBehavior",
          "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue."
        }
      },
      "required": [
        "name",
        "priority",
        "action"
      ]
    },
    "RulesEngineUpdateParameters": {
      "type": "object",
      "description": "Rules Engine Configuration to apply to a Routing Rule.",
      "properties": {
        "rules": {
          "type": "array",
          "description": "A list of rules that define a particular Rules Engine Configuration.",
          "items": {
            "$ref": "#/definitions/RulesEngineRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ScrubbingRuleEntryMatchOperator": {
      "type": "string",
      "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.",
      "enum": [
        "EqualsAny",
        "Equals"
      ],
      "x-ms-enum": {
        "name": "ScrubbingRuleEntryMatchOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "EqualsAny",
            "value": "EqualsAny"
          },
          {
            "name": "Equals",
            "value": "Equals"
          }
        ]
      }
    },
    "ScrubbingRuleEntryMatchVariable": {
      "type": "string",
      "description": "The variable to be scrubbed from the logs.",
      "enum": [
        "RequestIPAddress",
        "RequestUri",
        "QueryStringArgNames",
        "RequestHeaderNames",
        "RequestCookieNames",
        "RequestBodyPostArgNames",
        "RequestBodyJsonArgNames"
      ],
      "x-ms-enum": {
        "name": "ScrubbingRuleEntryMatchVariable",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestIPAddress",
            "value": "RequestIPAddress"
          },
          {
            "name": "RequestUri",
            "value": "RequestUri"
          },
          {
            "name": "QueryStringArgNames",
            "value": "QueryStringArgNames"
          },
          {
            "name": "RequestHeaderNames",
            "value": "RequestHeaderNames"
          },
          {
            "name": "RequestCookieNames",
            "value": "RequestCookieNames"
          },
          {
            "name": "RequestBodyPostArgNames",
            "value": "RequestBodyPostArgNames"
          },
          {
            "name": "RequestBodyJsonArgNames",
            "value": "RequestBodyJsonArgNames"
          }
        ]
      }
    },
    "ScrubbingRuleEntryState": {
      "type": "string",
      "description": "Defines the state of a log scrubbing rule. Default value is enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ScrubbingRuleEntryState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SecurityPolicyLink": {
      "type": "object",
      "description": "Defines the Resource ID for a Security Policy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "SessionAffinityEnabledState": {
      "type": "string",
      "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SessionAffinityEnabledState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "The pricing tier of the web application firewall policy.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of the pricing tier."
        }
      }
    },
    "SkuName": {
      "type": "string",
      "description": "Name of the pricing tier.",
      "enum": [
        "Classic_AzureFrontDoor",
        "Standard_AzureFrontDoor",
        "Premium_AzureFrontDoor"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Classic_AzureFrontDoor",
            "value": "Classic_AzureFrontDoor"
          },
          {
            "name": "Standard_AzureFrontDoor",
            "value": "Standard_AzureFrontDoor"
          },
          {
            "name": "Premium_AzureFrontDoor",
            "value": "Premium_AzureFrontDoor"
          }
        ]
      }
    },
    "State": {
      "type": "string",
      "description": "The state of the Experiment",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "SubResource": {
      "type": "object",
      "description": "Reference to another subresource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "TagsObject": {
      "type": "object",
      "description": "Tags object for patch operations.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Timeseries": {
      "type": "object",
      "description": "Defines the Timeseries",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeseriesProperties",
          "description": "The properties of a Timeseries",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TimeseriesDataPoint": {
      "type": "object",
      "description": "Defines a timeseries datapoint used in a timeseries",
      "properties": {
        "dateTimeUTC": {
          "type": "string",
          "description": "The DateTime of the Timeseries data point in UTC"
        },
        "value": {
          "type": "number",
          "format": "float",
          "description": "The Value of the Timeseries data point"
        }
      }
    },
    "TimeseriesProperties": {
      "type": "object",
      "description": "Defines the properties of a timeseries",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint associated with the Timeseries data point"
        },
        "startDateTimeUTC": {
          "type": "string",
          "description": "The start DateTime of the Timeseries in UTC"
        },
        "endDateTimeUTC": {
          "type": "string",
          "description": "The end DateTime of the Timeseries in UTC"
        },
        "aggregationInterval": {
          "$ref": "#/definitions/AggregationInterval",
          "description": "The aggregation interval of the Timeseries"
        },
        "timeseriesType": {
          "$ref": "#/definitions/TimeseriesType",
          "description": "The type of Timeseries"
        },
        "country": {
          "type": "string",
          "description": "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html"
        },
        "timeseriesData": {
          "type": "array",
          "description": "The set of data points for the timeseries",
          "items": {
            "$ref": "#/definitions/TimeseriesDataPoint"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TimeseriesType": {
      "type": "string",
      "description": "The type of Timeseries",
      "enum": [
        "MeasurementCounts",
        "LatencyP50",
        "LatencyP75",
        "LatencyP95"
      ],
      "x-ms-enum": {
        "name": "TimeseriesType",
        "modelAsString": true,
        "values": [
          {
            "name": "MeasurementCounts",
            "value": "MeasurementCounts"
          },
          {
            "name": "LatencyP50",
            "value": "LatencyP50"
          },
          {
            "name": "LatencyP75",
            "value": "LatencyP75"
          },
          {
            "name": "LatencyP95",
            "value": "LatencyP95"
          }
        ]
      }
    },
    "Transform": {
      "type": "string",
      "description": "Describes what transforms are applied before matching",
      "enum": [
        "Lowercase",
        "Uppercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls"
      ],
      "x-ms-enum": {
        "name": "Transform",
        "modelAsString": true,
        "values": [
          {
            "name": "Lowercase",
            "value": "Lowercase"
          },
          {
            "name": "Uppercase",
            "value": "Uppercase"
          },
          {
            "name": "Trim",
            "value": "Trim"
          },
          {
            "name": "UrlDecode",
            "value": "UrlDecode"
          },
          {
            "name": "UrlEncode",
            "value": "UrlEncode"
          },
          {
            "name": "RemoveNulls",
            "value": "RemoveNulls"
          }
        ]
      }
    },
    "TransformType": {
      "type": "string",
      "description": "Describes what transforms applied before matching.",
      "enum": [
        "Lowercase",
        "Uppercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls"
      ],
      "x-ms-enum": {
        "name": "TransformType",
        "modelAsString": true,
        "values": [
          {
            "name": "Lowercase",
            "value": "Lowercase"
          },
          {
            "name": "Uppercase",
            "value": "Uppercase"
          },
          {
            "name": "Trim",
            "value": "Trim"
          },
          {
            "name": "UrlDecode",
            "value": "UrlDecode"
          },
          {
            "name": "UrlEncode",
            "value": "UrlEncode"
          },
          {
            "name": "RemoveNulls",
            "value": "RemoveNulls"
          }
        ]
      }
    },
    "ValidateCustomDomainInput": {
      "type": "object",
      "description": "Input of the custom domain to be validated for DNS mapping.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the custom domain. Must be a domain name."
        }
      },
      "required": [
        "hostName"
      ]
    },
    "ValidateCustomDomainOutput": {
      "type": "object",
      "description": "Output of custom domain validation.",
      "properties": {
        "customDomainValidated": {
          "type": "boolean",
          "description": "Indicates whether the custom domain is valid or not.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The reason why the custom domain is not valid.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message describing why the custom domain is not valid.",
          "readOnly": true
        }
      }
    },
    "VariableName": {
      "type": "string",
      "description": "Describes the supported variable for group by",
      "enum": [
        "SocketAddr",
        "GeoLocation",
        "None"
      ],
      "x-ms-enum": {
        "name": "VariableName",
        "modelAsString": true,
        "values": [
          {
            "name": "SocketAddr",
            "value": "SocketAddr"
          },
          {
            "name": "GeoLocation",
            "value": "GeoLocation"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "WebApplicationFirewallPolicy": {
      "type": "object",
      "description": "Defines web application firewall policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebApplicationFirewallPolicyProperties",
          "description": "Properties of the web application firewall policy.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WebApplicationFirewallPolicyList": {
      "type": "object",
      "description": "Defines a list of WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WebApplicationFirewallPolicy items on this page",
          "items": {
            "$ref": "#/definitions/WebApplicationFirewallPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WebApplicationFirewallPolicyProperties": {
      "type": "object",
      "description": "Defines web application firewall policy properties.",
      "properties": {
        "policySettings": {
          "$ref": "#/definitions/PolicySettings",
          "description": "Describes settings for the policy."
        },
        "customRules": {
          "$ref": "#/definitions/CustomRuleList",
          "description": "Describes custom rules inside the policy."
        },
        "managedRules": {
          "$ref": "#/definitions/ManagedRuleSetList",
          "description": "Describes managed rules inside the policy."
        },
        "frontendEndpointLinks": {
          "type": "array",
          "description": "Describes Frontend Endpoints associated with this Web Application Firewall policy.",
          "items": {
            "$ref": "#/definitions/FrontendEndpointLink"
          },
          "readOnly": true
        },
        "routingRuleLinks": {
          "type": "array",
          "description": "Describes Routing Rules associated with this Web Application Firewall policy.",
          "items": {
            "$ref": "#/definitions/RoutingRuleLink"
          },
          "readOnly": true
        },
        "securityPolicyLinks": {
          "type": "array",
          "description": "Describes Security Policy associated with this Web Application Firewall policy.",
          "items": {
            "$ref": "#/definitions/SecurityPolicyLink"
          },
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the policy.",
          "readOnly": true
        },
        "resourceState": {
          "$ref": "#/definitions/PolicyResourceState",
          "description": "Resource status of the policy.",
          "readOnly": true
        }
      }
    },
    "WebApplicationFirewallScrubbingRules": {
      "type": "object",
      "description": "Defines the contents of the log scrubbing rules.",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/ScrubbingRuleEntryMatchVariable",
          "description": "The variable to be scrubbed from the logs."
        },
        "selectorMatchOperator": {
          "$ref": "#/definitions/ScrubbingRuleEntryMatchOperator",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to."
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to."
        },
        "state": {
          "$ref": "#/definitions/ScrubbingRuleEntryState",
          "description": "Defines the state of a log scrubbing rule. Default value is enabled."
        }
      },
      "required": [
        "matchVariable",
        "selectorMatchOperator"
      ]
    },
    "WebApplicationFirewallScrubbingState": {
      "type": "string",
      "description": "State of the log scrubbing config. Default value is Enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "WebApplicationFirewallScrubbingState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    }
  },
  "parameters": {}
}
