{
  "swagger": "2.0",
  "info": {
    "title": "AzureMapsManagementClient",
    "version": "2024-07-01-preview",
    "description": "Azure Maps",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "Creators"
    }
  ],
  "paths": {
    "/providers/Microsoft.Maps/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maps/accounts": {
      "get": {
        "operationId": "Accounts_ListBySubscription",
        "tags": [
          "Accounts"
        ],
        "description": "Get all Maps Accounts in a Subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Accounts By Subscription": {
            "$ref": "./examples/ListAccountsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts": {
      "get": {
        "operationId": "Accounts_ListByResourceGroup",
        "tags": [
          "Accounts"
        ],
        "description": "Get all Maps Accounts in a Resource Group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Accounts By Resource Group": {
            "$ref": "./examples/ListAccountsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}": {
      "get": {
        "operationId": "Accounts_Get",
        "tags": [
          "Accounts"
        ],
        "description": "Get a Maps Account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetAccount": {
            "$ref": "./examples/GetAccount.json"
          }
        }
      },
      "put": {
        "operationId": "Accounts_CreateOrUpdate",
        "tags": [
          "Accounts"
        ],
        "description": "Create or update a Maps Account. A Maps Account holds the keys which allow access to the Maps REST APIs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "MapsAccount",
            "in": "body",
            "description": "The new or updated parameters for the Maps Account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MapsAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "201": {
            "description": "Resource 'MapsAccount' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Account with Encryption": {
            "$ref": "./examples/CreateAccountEncryption.json"
          },
          "Create Account with Managed Identities": {
            "$ref": "./examples/CreateAccountManagedIdentity.json"
          },
          "Create Gen2 Account": {
            "$ref": "./examples/CreateAccountGen2.json"
          }
        }
      },
      "patch": {
        "operationId": "Accounts_Update",
        "tags": [
          "Accounts"
        ],
        "description": "Updates a Maps Account. Only a subset of the parameters may be updated after creation, such as Sku, Tags, Properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "MapsAccountUpdateParameters",
            "in": "body",
            "description": "The updated parameters for the Maps Account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsAccountUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Account Encryption": {
            "$ref": "./examples/UpdateAccountEncryption.json"
          },
          "Update Account Managed Identities": {
            "$ref": "./examples/UpdateAccountManagedIdentity.json"
          },
          "Update Account Tags": {
            "$ref": "./examples/UpdateAccount.json"
          },
          "Update to Gen2 Account": {
            "$ref": "./examples/UpdateAccountGen2.json"
          }
        }
      },
      "delete": {
        "operationId": "Accounts_Delete",
        "tags": [
          "Accounts"
        ],
        "description": "Delete a Maps Account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteAccount": {
            "$ref": "./examples/DeleteAccount.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators": {
      "get": {
        "operationId": "Creators_ListByAccount",
        "tags": [
          "Creators"
        ],
        "description": "Get all Creator instances for an Azure Maps Account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreatorList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Creator Resources By Account": {
            "$ref": "./examples/ListMapsCreatorsByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}": {
      "get": {
        "operationId": "Creators_Get",
        "tags": [
          "Creators"
        ],
        "description": "Get a Maps Creator resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Creator Resource": {
            "$ref": "./examples/GetMapsCreator.json"
          }
        }
      },
      "put": {
        "operationId": "Creators_CreateOrUpdate",
        "tags": [
          "Creators"
        ],
        "description": "Create or update a Maps Creator resource. Creator resource will manage Azure resources required to populate a custom set of mapping data. It requires an account to exist before it can be created.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "CreatorResource",
            "in": "body",
            "description": "The new or updated parameters for the Creator resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Creator' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "201": {
            "description": "Resource 'Creator' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Creator Resource": {
            "$ref": "./examples/CreateMapsCreator.json"
          }
        }
      },
      "patch": {
        "operationId": "Creators_Update",
        "tags": [
          "Creators"
        ],
        "description": "Updates the Maps Creator resource. Only a subset of the parameters may be updated after creation, such as Tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "CreatorUpdateParameters",
            "in": "body",
            "description": "The update parameters for Maps Creator.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatorUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Creator"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Creator Resource": {
            "$ref": "./examples/UpdateMapsCreator.json"
          }
        }
      },
      "delete": {
        "operationId": "Creators_Delete",
        "tags": [
          "Creators"
        ],
        "description": "Delete a Maps Creator resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "creatorName",
            "in": "path",
            "description": "The name of the Maps Creator instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Creator Resource": {
            "$ref": "./examples/DeleteMapsCreator.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/listKeys": {
      "post": {
        "operationId": "Accounts_ListKeys",
        "tags": [
          "Accounts"
        ],
        "description": "Get the keys to use with the Maps APIs. A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Keys": {
            "$ref": "./examples/ListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/listSas": {
      "post": {
        "operationId": "Accounts_ListSas",
        "tags": [
          "Accounts"
        ],
        "description": "Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token.\n\nPrerequisites:\n1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account.\n2. Create or update an Azure Maps account with the same Azure region as the User Assigned Managed Identity is placed.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "MapsAccountSasParameters",
            "in": "body",
            "description": "The updated parameters for the Maps Account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSasParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountSasToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Account Sas": {
            "$ref": "./examples/AccountListSAS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/regenerateKey": {
      "post": {
        "operationId": "Accounts_RegenerateKeys",
        "tags": [
          "Accounts"
        ],
        "description": "Regenerate either the primary or secondary key for use with the Maps APIs. The old key will stop working immediately.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the Maps Account.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "pattern": "^[^%&:\\\\/#?]+$"
          },
          {
            "name": "keySpecification",
            "in": "body",
            "description": "Which key to regenerate:  primary or secondary.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsKeySpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsAccountKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate Key": {
            "$ref": "./examples/RegenerateKey.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountSasParameters": {
      "type": "object",
      "description": "Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure Maps Role Based Access (RBAC) identity and access.",
      "properties": {
        "signingKey": {
          "$ref": "#/definitions/SigningKey",
          "description": "The Maps account key to use for signing. Picking `primaryKey` or `secondaryKey` will use the Maps account Shared Keys, and using `managedIdentity` will use the auto-renewed private key to sign the SAS."
        },
        "principalId": {
          "type": "string",
          "description": "The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Maps Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id."
        },
        "regions": {
          "type": "array",
          "description": "Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: \"eastus\", \"westus2\". Omitting this parameter will allow all region locations to be accessible.",
          "items": {
            "type": "string"
          }
        },
        "maxRatePerSecond": {
          "type": "integer",
          "format": "int32",
          "description": "Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.",
          "default": 500,
          "maximum": 500
        },
        "start": {
          "type": "string",
          "description": "The date time offset of when the token validity begins. For example \"2017-05-24T10:42:03.1567373Z\". Maximum duration allowed is 24 hours between `start` and `expiry`."
        },
        "expiry": {
          "type": "string",
          "description": "The date time offset of when the token validity expires. For example \"2017-05-24T10:42:03.1567373Z\". Maximum duration allowed is 24 hours between `start` and `expiry`."
        }
      },
      "required": [
        "signingKey",
        "principalId",
        "maxRatePerSecond",
        "start",
        "expiry"
      ]
    },
    "CorsRule": {
      "type": "object",
      "description": "Specifies a CORS rule for the Map Account.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "CorsRules": {
      "type": "object",
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request.",
      "properties": {
        "corsRules": {
          "type": "array",
          "description": "The list of CORS rules. You can include up to five CorsRule elements in the request.",
          "items": {
            "$ref": "#/definitions/CorsRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Creator": {
      "type": "object",
      "description": "An Azure resource which represents Maps Creator product and provides ability to manage private location data.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreatorProperties",
          "description": "The Creator resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CreatorList": {
      "type": "object",
      "description": "A list of Creator resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Creator items on this page",
          "items": {
            "$ref": "#/definitions/Creator"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CreatorProperties": {
      "type": "object",
      "description": "Creator resource properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled",
          "readOnly": true
        },
        "storageUnits": {
          "type": "integer",
          "format": "int32",
          "description": "The storage units to be allocated. Integer values from 1 to 100, inclusive.",
          "minimum": 1,
          "maximum": 100
        },
        "totalStorageUnitSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The total allocated storage unit size in bytes for the creator resource."
        },
        "consumedStorageUnitSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The consumed storage unit size in bytes for the creator resource."
        }
      },
      "required": [
        "storageUnits"
      ]
    },
    "CreatorUpdateParameters": {
      "type": "object",
      "description": "Parameters used to update an existing Creator resource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CreatorProperties",
          "description": "Creator resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "Encryption": {
      "type": "object",
      "description": "All encryption configuration for a resource.",
      "properties": {
        "infrastructureEncryption": {
          "$ref": "#/definitions/InfrastructureEncryption",
          "description": "(Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled."
        },
        "customerManagedKeyEncryption": {
          "$ref": "#/definitions/EncryptionCustomerManagedKeyEncryption",
          "description": "All Customer-managed key encryption properties for the resource."
        }
      }
    },
    "EncryptionCustomerManagedKeyEncryption": {
      "type": "object",
      "description": "All Customer-managed key encryption properties for the resource.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "$ref": "#/definitions/EncryptionCustomerManagedKeyEncryptionKeyEncryptionKeyIdentity",
          "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."
        },
        "keyEncryptionKeyUrl": {
          "type": "string",
          "description": "key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek."
        }
      }
    },
    "EncryptionCustomerManagedKeyEncryptionKeyEncryptionKeyIdentity": {
      "type": "object",
      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/EncryptionCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityIdentityType",
          "description": "The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity."
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."
        },
        "federatedClientId": {
          "type": "string",
          "format": "uuid",
          "description": "application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540"
        },
        "delegatedIdentityClientId": {
          "type": "string",
          "format": "uuid",
          "description": "delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only."
        }
      }
    },
    "EncryptionCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityIdentityType": {
      "type": "string",
      "description": "The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.",
      "enum": [
        "systemAssignedIdentity",
        "userAssignedIdentity",
        "delegatedResourceIdentity"
      ],
      "x-ms-enum": {
        "name": "EncryptionCustomerManagedKeyEncryptionKeyEncryptionKeyIdentityIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "systemAssignedIdentity",
            "value": "systemAssignedIdentity"
          },
          {
            "name": "userAssignedIdentity",
            "value": "userAssignedIdentity"
          },
          {
            "name": "delegatedResourceIdentity",
            "value": "delegatedResourceIdentity"
          }
        ]
      }
    },
    "InfrastructureEncryption": {
      "type": "string",
      "description": "(Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "InfrastructureEncryption",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled"
          },
          {
            "name": "disabled",
            "value": "disabled"
          }
        ]
      }
    },
    "KeyType": {
      "type": "string",
      "description": "Whether the operation refers to the primary or secondary key.",
      "enum": [
        "primary",
        "secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "primary",
            "value": "primary"
          },
          {
            "name": "secondary",
            "value": "secondary"
          }
        ]
      }
    },
    "Kind": {
      "type": "string",
      "description": "The Kind of the Maps Account.",
      "enum": [
        "Gen2"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true,
        "values": [
          {
            "name": "Gen2",
            "value": "Gen2"
          }
        ]
      }
    },
    "LinkedResource": {
      "type": "object",
      "description": "Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.",
      "properties": {
        "uniqueName": {
          "type": "string",
          "description": "A provided name which uniquely identifies the linked resource."
        },
        "id": {
          "type": "string",
          "description": "ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}'."
        }
      },
      "required": [
        "uniqueName",
        "id"
      ]
    },
    "LocationsItem": {
      "type": "object",
      "description": "Data processing location.",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "The location name."
        }
      },
      "required": [
        "locationName"
      ]
    },
    "ManagedServiceIdentity": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType",
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "additionalProperties": {
            "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned,UserAssigned",
            "value": "SystemAssigned,UserAssigned"
          }
        ]
      }
    },
    "MapsAccount": {
      "type": "object",
      "description": "An Azure resource which represents access to a suite of Maps REST APIs.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MapsAccountProperties",
          "description": "The map account properties.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of this account."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Get or Set Kind property."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MapsAccountKeys": {
      "type": "object",
      "description": "The set of keys which can be used to access the Maps REST APIs. Two keys are provided for key rotation without interruption.",
      "properties": {
        "primaryKeyLastUpdated": {
          "type": "string",
          "description": "The last updated date and time of the primary key.",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "The primary key for accessing the Maps REST APIs.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key for accessing the Maps REST APIs.",
          "readOnly": true
        },
        "secondaryKeyLastUpdated": {
          "type": "string",
          "description": "The last updated date and time of the secondary key.",
          "readOnly": true
        }
      }
    },
    "MapsAccountProperties": {
      "type": "object",
      "description": "Additional Maps account properties",
      "properties": {
        "uniqueId": {
          "type": "string",
          "description": "A unique identifier for the Maps Account",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal states: `Succeeded` and `Failed`",
          "readOnly": true
        },
        "linkedResources": {
          "type": "array",
          "description": "The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).",
          "items": {
            "$ref": "#/definitions/LinkedResource"
          }
        },
        "cors": {
          "$ref": "#/definitions/CorsRules",
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "All encryption configuration for a resource."
        },
        "locations": {
          "type": "array",
          "description": "List of additional data processing regions for the Maps Account, which may result in requests being processed in another geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).",
          "items": {
            "$ref": "#/definitions/LocationsItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MapsAccountSasToken": {
      "type": "object",
      "description": "A new Sas token which can be used to access the Maps REST APIs and is controlled by the specified Managed identity permissions on Azure (IAM) Role Based Access Control.",
      "properties": {
        "accountSasToken": {
          "type": "string",
          "description": "The shared access signature access token.",
          "readOnly": true
        }
      }
    },
    "MapsAccountUpdateParameters": {
      "type": "object",
      "description": "Parameters used to update an existing Maps Account.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Get or Set Kind property."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of this account."
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Managed service identity (system assigned and/or user assigned identities)"
        },
        "properties": {
          "$ref": "#/definitions/MapsAccountProperties",
          "description": "The map account properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "MapsAccounts": {
      "type": "object",
      "description": "A list of Maps Accounts.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MapsAccount items on this page",
          "items": {
            "$ref": "#/definitions/MapsAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MapsKeySpecification": {
      "type": "object",
      "description": "Whether the operation refers to the primary or secondary key.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "Whether the operation refers to the primary or secondary key."
        }
      },
      "required": [
        "keyType"
      ]
    },
    "Name": {
      "type": "string",
      "description": "The name of the SKU, in standard format (such as G2).",
      "enum": [
        "G2"
      ],
      "x-ms-enum": {
        "name": "Name",
        "modelAsString": true,
        "values": [
          {
            "name": "G2",
            "value": "G2"
          }
        ]
      }
    },
    "SigningKey": {
      "type": "string",
      "description": "The Maps account key to use for signing. Picking `primaryKey` or `secondaryKey` will use the Maps account Shared Keys, and using `managedIdentity` will use the auto-renewed private key to sign the SAS.",
      "enum": [
        "primaryKey",
        "secondaryKey",
        "managedIdentity"
      ],
      "x-ms-enum": {
        "name": "SigningKey",
        "modelAsString": true,
        "values": [
          {
            "name": "primaryKey",
            "value": "primaryKey"
          },
          {
            "name": "secondaryKey",
            "value": "secondaryKey"
          },
          {
            "name": "managedIdentity",
            "value": "managedIdentity"
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "The SKU of the Maps Account.",
      "properties": {
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the SKU, in standard format (such as G2)."
        },
        "tier": {
          "type": "string",
          "description": "Gets the sku tier. This is based on the SKU name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    }
  },
  "parameters": {}
}
