{
  "swagger": "2.0",
  "info": {
    "title": "AI Model Inference",
    "version": "2024-04-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://widget.contoso.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.contoso.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://widget.contoso.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "operationId": "GetChatCompletions",
        "description": "Gets chat completions for the provided chat messages.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "chatCompletionsOptions",
            "in": "body",
            "description": "The JSON payload containing chat completion options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatCompletionsOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ChatCompletions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetChatCompletions_MaximumSet_Gen": {
            "$ref": "./examples/GetChatCompletions_MaximumSet_Gen.json"
          },
          "GetChatCompletions_MinimumSet_Gen": {
            "$ref": "./examples/GetChatCompletions_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "ChatChoice": {
      "type": "object",
      "description": "The representation of a single prompt completion as part of an overall chat completions request.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ChatResponseMessage",
          "description": "The chat message for a given chat completions prompt."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The ordered index associated with this chat completions choice."
        },
        "finish_reason": {
          "$ref": "#/definitions/CompletionsFinishReason",
          "description": "The reason that this chat completions choice completed its generated.",
          "x-nullable": true,
          "x-ms-client-name": "finishReason"
        }
      },
      "required": [
        "index",
        "finish_reason"
      ]
    },
    "ChatCompletions": {
      "type": "object",
      "description": "Representation of the response data from a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with this chat completions response."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "description": "The first timestamp associated with generation activity for this completions response,\nrepresented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970."
        },
        "choices": {
          "type": "array",
          "description": "The collection of completions choices associated with this completions response.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
          "items": {
            "$ref": "#/definitions/ChatChoice"
          },
          "x-ms-identifiers": []
        },
        "usage": {
          "$ref": "#/definitions/CompletionsUsage",
          "description": "Usage information for tokens processed and generated as part of this completions operation."
        },
        "object": {
          "type": "string",
          "description": "The response object type, which is always `chat.completion`."
        },
        "model": {
          "type": "string",
          "description": "The model used for the chat completion."
        }
      },
      "required": [
        "id",
        "created",
        "choices",
        "usage",
        "object",
        "model"
      ]
    },
    "ChatCompletionsJsonResponseFormat": {
      "type": "object",
      "description": "A response format for Chat Completions that restricts responses to emitting valid JSON objects.",
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsResponseFormat"
        }
      ],
      "x-ms-discriminator-value": "json_object"
    },
    "ChatCompletionsOptions": {
      "type": "object",
      "description": "The configuration information for a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "properties": {
        "messages": {
          "type": "array",
          "description": "The collection of context messages associated with this chat completions request.\nTypical usage begins with a chat message for the System role that provides instructions for\nthe behavior of the assistant, followed by alternating messages between the User and\nAssistant roles.",
          "items": {
            "$ref": "#/definitions/ChatRequestMessage"
          },
          "x-ms-identifiers": []
        },
        "max_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tokens to generate.",
          "x-ms-client-name": "maxTokens"
        },
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "The sampling temperature to use that controls the apparent creativity of generated completions.\nHigher values will make output more random while lower values will make results more focused\nand deterministic.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict."
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "An alternative to sampling with temperature called nucleus sampling. This value causes the\nmodel to consider the results of tokens with the provided probability mass. As an example, a\nvalue of 0.15 will cause only the tokens comprising the top 15% of probability mass to be\nconsidered.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict.",
          "x-ms-client-name": "topP"
        },
        "stop": {
          "type": "array",
          "description": "A collection of textual sequences that will end completions generation.",
          "items": {
            "type": "string"
          }
        },
        "presence_penalty": {
          "type": "number",
          "format": "float",
          "description": "A value that influences the probability of generated tokens appearing based on their existing\npresence in generated text.\nPositive values will make tokens less likely to appear when they already exist and increase the\nmodel's likelihood to output new topics.",
          "x-ms-client-name": "presencePenalty"
        },
        "frequency_penalty": {
          "type": "number",
          "format": "float",
          "description": "A value that influences the probability of generated tokens appearing based on their cumulative\nfrequency in generated text.\nPositive values will make tokens less likely to appear as their frequency increases and\ndecrease the likelihood of the model repeating the same statements verbatim.",
          "x-ms-client-name": "frequencyPenalty"
        },
        "stream": {
          "type": "boolean",
          "description": "A value indicating whether chat completions should be streamed for this request."
        },
        "seed": {
          "type": "integer",
          "format": "int64",
          "description": "If specified, the system will make a best effort to sample deterministically such that repeated requests with the\nsame seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the\nsystem_fingerprint response parameter to monitor changes in the backend.\""
        },
        "response_format": {
          "$ref": "#/definitions/ChatCompletionsResponseFormat",
          "description": "An object specifying the format that the model must output. Used to enable JSON mode.",
          "x-ms-client-name": "responseFormat"
        }
      },
      "required": [
        "messages"
      ]
    },
    "ChatCompletionsResponseFormat": {
      "type": "object",
      "description": "An abstract representation of a response format configuration usable by Chat Completions. Can be used to enable JSON\nmode.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The discriminated type for the response format."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ChatCompletionsTextResponseFormat": {
      "type": "object",
      "description": "The standard Chat Completions response format that can freely generate text and is not guaranteed to produce response\ncontent that adheres to a specific schema.",
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsResponseFormat"
        }
      ],
      "x-ms-discriminator-value": "text"
    },
    "ChatRequestAssistantMessage": {
      "type": "object",
      "description": "A request chat message representing response or action from the assistant.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the message.",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "description": "An optional name for the participant."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "ChatRequestMessage": {
      "type": "object",
      "description": "An abstract representation of a chat message as provided in a request.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ChatRole",
          "description": "The chat role associated with this message."
        }
      },
      "discriminator": "role",
      "required": [
        "role"
      ]
    },
    "ChatRequestSystemMessage": {
      "type": "object",
      "description": "A request chat message containing system instructions that influence how the model will generate a chat completions\nresponse.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The contents of the system message."
        },
        "name": {
          "type": "string",
          "description": "An optional name for the participant."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "ChatRequestUserMessage": {
      "type": "object",
      "description": "A request chat message representing user input to the assistant.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The contents of the user message, with available input types varying by selected model."
        },
        "name": {
          "type": "string",
          "description": "An optional name for the participant."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "ChatResponseMessage": {
      "type": "object",
      "description": "A representation of a chat message as received in a response.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ChatRole",
          "description": "The chat role associated with the message."
        },
        "content": {
          "type": "string",
          "description": "The content of the message.",
          "x-nullable": true
        }
      },
      "required": [
        "role",
        "content"
      ]
    },
    "ChatRole": {
      "type": "string",
      "description": "A description of the intended purpose of a message within a chat completions interaction.",
      "enum": [
        "system",
        "assistant",
        "user"
      ],
      "x-ms-enum": {
        "name": "ChatRole",
        "modelAsString": true,
        "values": [
          {
            "name": "system",
            "value": "system",
            "description": "The role that instructs or sets the behavior of the assistant."
          },
          {
            "name": "assistant",
            "value": "assistant",
            "description": "The role that provides responses to system-instructed, user-prompted input."
          },
          {
            "name": "user",
            "value": "user",
            "description": "The role that provides input for chat completions."
          }
        ]
      }
    },
    "CompletionsFinishReason": {
      "type": "string",
      "description": "Representation of the manner in which a completions response concluded.",
      "enum": [
        "stop",
        "length",
        "content_filter"
      ],
      "x-ms-enum": {
        "name": "CompletionsFinishReason",
        "modelAsString": true,
        "values": [
          {
            "name": "stopped",
            "value": "stop",
            "description": "Completions ended normally and reached its end of token generation."
          },
          {
            "name": "tokenLimitReached",
            "value": "length",
            "description": "Completions exhausted available token limits before generation could complete."
          },
          {
            "name": "contentFiltered",
            "value": "content_filter",
            "description": "Completions generated a response that was identified as potentially sensitive per content\nmoderation policies."
          }
        ]
      }
    },
    "CompletionsUsage": {
      "type": "object",
      "description": "Representation of the token counts processed for a completions request.\nCounts consider all tokens across prompts, choices, choice alternates, best_of generations, and\nother consumers.",
      "properties": {
        "completion_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of tokens generated across all completions emissions.",
          "x-ms-client-name": "completionTokens"
        },
        "prompt_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of tokens in the provided prompts for the completions request.",
          "x-ms-client-name": "promptTokens"
        },
        "total_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of tokens processed for the completions request and response.",
          "x-ms-client-name": "totalTokens"
        }
      },
      "required": [
        "completion_tokens",
        "prompt_tokens",
        "total_tokens"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The ModelInference service versions.",
      "enum": [
        "2024-04-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_04_01_Preview",
            "value": "2024-04-01-preview",
            "description": "The 2024-04-01-preview version of the ModelInference service."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
