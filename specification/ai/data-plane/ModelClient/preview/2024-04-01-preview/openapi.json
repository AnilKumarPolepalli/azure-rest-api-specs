{
  "swagger": "2.0",
  "info": {
    "title": "AI Model Inference",
    "version": "2024-04-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "operationId": "GetChatCompletions",
        "description": "Gets chat completions for the provided chat messages.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "chatCompletionsOptions",
            "in": "body",
            "description": "The JSON payload containing chat completion options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatCompletionsOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ChatCompletions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetChatCompletions_MaximumSet_Gen": {
            "$ref": "./examples/GetChatCompletions_MaximumSet_Gen.json"
          },
          "GetChatCompletions_MinimumSet_Gen": {
            "$ref": "./examples/GetChatCompletions_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "operationId": "GetEmbeddings",
        "description": "Return the embeddings for a given prompt.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "embeddingsOptions",
            "in": "body",
            "description": "The JSON payload containing embedding options.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmbeddingsOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EmbeddingsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetEmbeddings_MaximumSet_Gen": {
            "$ref": "./examples/GetEmbeddings_MaximumSet_Gen.json"
          },
          "GetEmbeddings_MinimumSet_Gen": {
            "$ref": "./examples/GetEmbeddings_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "ChatChoice": {
      "type": "object",
      "description": "The representation of a single prompt completion as part of an overall chat completions request.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The ordered index associated with this chat completions choice."
        },
        "message": {
          "$ref": "#/definitions/ChatResponseMessage",
          "description": "The chat message for a given chat completions prompt."
        },
        "finish_reason": {
          "$ref": "#/definitions/CompletionsFinishReason",
          "description": "The reason that this chat completions choice completed its generated.",
          "x-nullable": true,
          "x-ms-client-name": "finishReason"
        }
      },
      "required": [
        "index",
        "message",
        "finish_reason"
      ]
    },
    "ChatCompletions": {
      "type": "object",
      "description": "Representation of the response data from a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with this chat completions response."
        },
        "object": {
          "type": "string",
          "description": "The response object type, which is always `chat.completion`."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "description": "The first timestamp associated with generation activity for this completions response,\nrepresented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970."
        },
        "model": {
          "type": "string",
          "description": "The model used for the chat completion."
        },
        "choices": {
          "type": "array",
          "description": "The collection of completions choices associated with this completions response.\nGenerally, `n` choices are generated per provided prompt with a default value of 1.\nToken limits and other settings may limit the number of choices generated.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ChatChoice"
          },
          "x-ms-identifiers": []
        },
        "usage": {
          "$ref": "#/definitions/CompletionsUsage",
          "description": "Usage information for tokens processed and generated as part of this completions operation."
        }
      },
      "required": [
        "id",
        "object",
        "created",
        "model",
        "choices",
        "usage"
      ]
    },
    "ChatCompletionsFunctionToolCall": {
      "type": "object",
      "description": "A tool call to a function tool, issued by the model in evaluation of a configured function tool, that represents\na function invocation needed for a subsequent chat completions request to resolve.",
      "properties": {
        "function": {
          "$ref": "#/definitions/FunctionCall",
          "description": "The details of the function invocation requested by the tool call."
        }
      },
      "required": [
        "function"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsToolCall"
        }
      ],
      "x-ms-discriminator-value": "function"
    },
    "ChatCompletionsFunctionToolDefinition": {
      "type": "object",
      "description": "The definition information for a chat completions function tool that can call a function in response to a tool call.",
      "properties": {
        "function": {
          "$ref": "#/definitions/FunctionDefinition",
          "description": "The function definition details for the function tool."
        }
      },
      "required": [
        "function"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsToolDefinition"
        }
      ],
      "x-ms-discriminator-value": "function"
    },
    "ChatCompletionsJsonResponseFormat": {
      "type": "object",
      "description": "A response format for Chat Completions that restricts responses to emitting valid JSON objects.",
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsResponseFormat"
        }
      ],
      "x-ms-discriminator-value": "json_object"
    },
    "ChatCompletionsNamedToolSelection": {
      "type": "object",
      "description": "An abstract representation of an explicit, named tool selection to use for a chat completions request.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The object type."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ChatCompletionsOptions": {
      "type": "object",
      "description": "The configuration information for a chat completions request.\nCompletions support a wide variety of tasks and generate text that continues from or \"completes\"\nprovided prompt data.",
      "properties": {
        "messages": {
          "type": "array",
          "description": "The collection of context messages associated with this chat completions request.\nTypical usage begins with a chat message for the System role that provides instructions for\nthe behavior of the assistant, followed by alternating messages between the User and\nAssistant roles.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ChatRequestMessage"
          },
          "x-ms-identifiers": []
        },
        "frequency_penalty": {
          "type": "number",
          "format": "float",
          "description": "A value that influences the probability of generated tokens appearing based on their cumulative\nfrequency in generated text.\nPositive values will make tokens less likely to appear as their frequency increases and\ndecrease the likelihood of the model repeating the same statements verbatim.",
          "default": 0,
          "minimum": -2,
          "maximum": 2,
          "x-ms-client-name": "frequencyPenalty"
        },
        "presence_penalty": {
          "type": "number",
          "format": "float",
          "description": "A value that influences the probability of generated tokens appearing based on their existing\npresence in generated text.\nPositive values will make tokens less likely to appear when they already exist and increase the\nmodel's likelihood to output new topics.",
          "default": 0,
          "minimum": -2,
          "maximum": 2,
          "x-ms-client-name": "presencePenalty"
        },
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "The sampling temperature to use that controls the apparent creativity of generated completions.\nHigher values will make output more random while lower values will make results more focused\nand deterministic.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict.",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "An alternative to sampling with temperature called nucleus sampling. This value causes the\nmodel to consider the results of tokens with the provided probability mass. As an example, a\nvalue of 0.15 will cause only the tokens comprising the top 15% of probability mass to be\nconsidered.\nIt is not recommended to modify temperature and top_p for the same completions request as the\ninteraction of these two settings is difficult to predict.",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "x-ms-client-name": "topP"
        },
        "max_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tokens to generate.",
          "minimum": 0,
          "x-ms-client-name": "maxTokens"
        },
        "response_format": {
          "$ref": "#/definitions/ChatCompletionsResponseFormat",
          "description": "An object specifying the format that the model must output. Used to enable JSON mode.",
          "x-ms-client-name": "responseFormat"
        },
        "stop": {
          "type": "array",
          "description": "A collection of textual sequences that will end completions generation.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "stream": {
          "type": "boolean",
          "description": "A value indicating whether chat completions should be streamed for this request.",
          "default": false
        },
        "tools": {
          "type": "array",
          "description": "The available tool definitions that the chat completions request can use, including caller-defined functions.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ChatCompletionsToolDefinition"
          },
          "x-ms-identifiers": []
        },
        "tool_choice": {
          "description": "If specified, the model will configure which of the provided tools it can use for the chat completions response.",
          "x-ms-client-name": "toolChoice"
        },
        "seed": {
          "type": "integer",
          "format": "int64",
          "description": "If specified, the system will make a best effort to sample deterministically such that repeated requests with the\nsame seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the\nsystem_fingerprint response parameter to monitor changes in the backend.\""
        }
      },
      "required": [
        "messages"
      ]
    },
    "ChatCompletionsResponseFormat": {
      "type": "object",
      "description": "An abstract representation of a response format configuration usable by Chat Completions. Can be used to enable JSON\nmode.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The discriminated type for the response format."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ChatCompletionsTextResponseFormat": {
      "type": "object",
      "description": "The standard Chat Completions response format that can freely generate text and is not guaranteed to produce response\ncontent that adheres to a specific schema.",
      "allOf": [
        {
          "$ref": "#/definitions/ChatCompletionsResponseFormat"
        }
      ],
      "x-ms-discriminator-value": "text"
    },
    "ChatCompletionsToolCall": {
      "type": "object",
      "description": "An abstract representation of a tool call that must be resolved in a subsequent request to perform the requested\nchat completion.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The object type."
        },
        "id": {
          "type": "string",
          "description": "The ID of the tool call."
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "id"
      ]
    },
    "ChatCompletionsToolDefinition": {
      "type": "object",
      "description": "An abstract representation of a tool that can be used by the model to improve a chat completions response.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The object type."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ChatCompletionsToolSelectionPreset": {
      "type": "string",
      "description": "Represents a generic policy for how a chat completions tool may be selected.",
      "enum": [
        "auto",
        "none"
      ],
      "x-ms-enum": {
        "name": "ChatCompletionsToolSelectionPreset",
        "modelAsString": true,
        "values": [
          {
            "name": "auto",
            "value": "auto",
            "description": "Specifies that the model may either use any of the tools provided in this chat completions request or\ninstead return a standard chat completions response as if no tools were provided."
          },
          {
            "name": "none",
            "value": "none",
            "description": "Specifies that the model should not respond with a tool call and should instead provide a standard chat\ncompletions response. Response content may still be influenced by the provided tool definitions."
          }
        ]
      }
    },
    "ChatRequestAssistantMessage": {
      "type": "object",
      "description": "A request chat message representing response or action from the assistant.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the message.",
          "x-nullable": true
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "ChatRequestMessage": {
      "type": "object",
      "description": "An abstract representation of a chat message as provided in a request.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ChatRole",
          "description": "The chat role associated with this message."
        }
      },
      "discriminator": "role",
      "required": [
        "role"
      ]
    },
    "ChatRequestSystemMessage": {
      "type": "object",
      "description": "A request chat message containing system instructions that influence how the model will generate a chat completions\nresponse.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The contents of the system message."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "ChatRequestToolMessage": {
      "type": "object",
      "description": "A request chat message representing requested output from a configured tool.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the message.",
          "x-nullable": true
        },
        "tool_call_id": {
          "type": "string",
          "description": "The ID of the tool call resolved by the provided content.",
          "x-ms-client-name": "toolCallId"
        }
      },
      "required": [
        "content",
        "tool_call_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "tool"
    },
    "ChatRequestUserMessage": {
      "type": "object",
      "description": "A request chat message representing user input to the assistant.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The contents of the user message, with available input types varying by selected model."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChatRequestMessage"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "ChatResponseMessage": {
      "type": "object",
      "description": "A representation of a chat message as received in a response.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ChatRole",
          "description": "The chat role associated with the message."
        },
        "content": {
          "type": "string",
          "description": "The content of the message.",
          "x-nullable": true
        },
        "tool_calls": {
          "type": "array",
          "description": "The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat\ncompletions request to resolve as configured.",
          "items": {
            "$ref": "#/definitions/ChatCompletionsToolCall"
          },
          "x-ms-client-name": "toolCalls"
        }
      },
      "required": [
        "role",
        "content"
      ]
    },
    "ChatRole": {
      "type": "string",
      "description": "A description of the intended purpose of a message within a chat completions interaction.",
      "enum": [
        "system",
        "user",
        "assistant",
        "tool"
      ],
      "x-ms-enum": {
        "name": "ChatRole",
        "modelAsString": true,
        "values": [
          {
            "name": "system",
            "value": "system",
            "description": "The role that instructs or sets the behavior of the assistant."
          },
          {
            "name": "user",
            "value": "user",
            "description": "The role that provides input for chat completions."
          },
          {
            "name": "assistant",
            "value": "assistant",
            "description": "The role that provides responses to system-instructed, user-prompted input."
          },
          {
            "name": "tool",
            "value": "tool",
            "description": "The role that represents extension tool activity within a chat completions operation."
          }
        ]
      }
    },
    "CompletionsFinishReason": {
      "type": "string",
      "description": "Representation of the manner in which a completions response concluded.",
      "enum": [
        "stop",
        "length",
        "content_filter"
      ],
      "x-ms-enum": {
        "name": "CompletionsFinishReason",
        "modelAsString": true,
        "values": [
          {
            "name": "stopped",
            "value": "stop",
            "description": "Completions ended normally and reached its end of token generation."
          },
          {
            "name": "tokenLimitReached",
            "value": "length",
            "description": "Completions exhausted available token limits before generation could complete."
          },
          {
            "name": "contentFiltered",
            "value": "content_filter",
            "description": "Completions generated a response that was identified as potentially sensitive per content\nmoderation policies."
          }
        ]
      }
    },
    "CompletionsUsage": {
      "type": "object",
      "description": "Representation of the token counts processed for a completions request.\nCounts consider all tokens across prompts, choices, choice alternates, best_of generations, and\nother consumers.",
      "properties": {
        "completion_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of tokens generated across all completions emissions.",
          "x-ms-client-name": "completionTokens"
        },
        "prompt_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of tokens in the provided prompts for the completions request.",
          "x-ms-client-name": "promptTokens"
        },
        "total_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of tokens processed for the completions request and response.",
          "x-ms-client-name": "totalTokens"
        }
      },
      "required": [
        "completion_tokens",
        "prompt_tokens",
        "total_tokens"
      ]
    },
    "EmbeddingInputType": {
      "type": "string",
      "description": "Represents the input types used for embedding search.",
      "enum": [
        "text",
        "query",
        "document"
      ],
      "x-ms-enum": {
        "name": "EmbeddingInputType",
        "modelAsString": true,
        "values": [
          {
            "name": "text",
            "value": "text",
            "description": "to do"
          },
          {
            "name": "query",
            "value": "query",
            "description": "to do"
          },
          {
            "name": "document",
            "value": "document",
            "description": "to do"
          }
        ]
      }
    },
    "EmbeddingItem": {
      "type": "object",
      "description": "Representation of a single embeddings relatedness comparison.",
      "properties": {
        "embedding": {
          "type": "array",
          "description": "List of embeddings value for the input prompt. These represent a measurement of the\nvector-based relatedness of the provided input.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the prompt to which the EmbeddingItem corresponds."
        },
        "object": {
          "type": "string",
          "description": "The object type of this embeddings item. Will always be `embedding`."
        }
      },
      "required": [
        "embedding",
        "index",
        "object"
      ]
    },
    "EmbeddingsOptions": {
      "type": "object",
      "description": "The configuration information for an embeddings request.\nEmbeddings measure the relatedness of text strings and are commonly used for search, clustering,\nrecommendations, and other similar scenarios.",
      "properties": {
        "input": {
          "type": "array",
          "description": "Input texts to get embeddings for, encoded as a an array of strings.",
          "items": {
            "type": "string"
          }
        },
        "input_type": {
          "type": "string",
          "description": "Specifies the input type to use for embedding search.",
          "default": "text",
          "enum": [
            "text",
            "query",
            "document"
          ],
          "x-ms-enum": {
            "name": "EmbeddingInputType",
            "modelAsString": true,
            "values": [
              {
                "name": "text",
                "value": "text",
                "description": "to do"
              },
              {
                "name": "query",
                "value": "query",
                "description": "to do"
              },
              {
                "name": "document",
                "value": "document",
                "description": "to do"
              }
            ]
          },
          "x-ms-client-name": "inputType"
        }
      },
      "required": [
        "input"
      ]
    },
    "EmbeddingsResult": {
      "type": "object",
      "description": "Representation of the response data from an embeddings request.\nEmbeddings measure the relatedness of text strings and are commonly used for search, clustering,\nrecommendations, and other similar scenarios.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the embeddings result."
        },
        "data": {
          "type": "array",
          "description": "Embedding values for the prompts submitted in the request.",
          "items": {
            "$ref": "#/definitions/EmbeddingItem"
          },
          "x-ms-identifiers": []
        },
        "usage": {
          "$ref": "#/definitions/EmbeddingsUsage",
          "description": "Usage counts for tokens input using the embeddings API."
        },
        "object": {
          "type": "string",
          "description": "The object type of the embeddings result. Will always be `list`."
        },
        "model": {
          "type": "string",
          "description": "The model ID used to generate this result."
        }
      },
      "required": [
        "id",
        "data",
        "usage",
        "object",
        "model"
      ]
    },
    "EmbeddingsUsage": {
      "type": "object",
      "description": "Measurement of the amount of tokens used in this request and response.",
      "properties": {
        "prompt_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tokens sent in the original request.",
          "x-ms-client-name": "promptTokens"
        },
        "total_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of tokens transacted in this request/response.",
          "x-ms-client-name": "totalTokens"
        }
      },
      "required": [
        "prompt_tokens",
        "total_tokens"
      ]
    },
    "FunctionCall": {
      "type": "object",
      "description": "The name and arguments of a function that should be called, as generated by the model.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the function to call."
        },
        "arguments": {
          "type": "string",
          "description": "The arguments to call the function with, as generated by the model in JSON format.\nNote that the model does not always generate valid JSON, and may hallucinate parameters\nnot defined by your function schema. Validate the arguments in your code before calling\nyour function."
        }
      },
      "required": [
        "name",
        "arguments"
      ]
    },
    "FunctionDefinition": {
      "type": "object",
      "description": "The definition of a caller-specified function that chat completions may invoke in response to matching user input.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the function to be called."
        },
        "description": {
          "type": "string",
          "description": "A description of what the function does. The model will use this description when selecting the function and\ninterpreting its parameters."
        },
        "parameters": {
          "description": "The parameters the function accepts, described as a JSON Schema object."
        }
      },
      "required": [
        "name"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The ModelClient service versions.",
      "enum": [
        "2024-04-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_04_01_Preview",
            "value": "2024-04-01-preview",
            "description": "The 2024-04-01-preview version of the ModelClient service."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
