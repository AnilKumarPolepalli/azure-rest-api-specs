{
  "swagger": "2.0",
  "info": {
    "title": "DataShareManagementClient",
    "version": "2020-09-01",
    "description": "Creates a Microsoft.DataShare management client.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Accounts"
    },
    {
      "name": "ConsumerInvitations"
    },
    {
      "name": "DataSets"
    },
    {
      "name": "Shares"
    },
    {
      "name": "DataSetMappings"
    },
    {
      "name": "ShareSubscriptions"
    },
    {
      "name": "Invitations"
    },
    {
      "name": "ProviderShareSubscriptions"
    },
    {
      "name": "SynchronizationSettings"
    },
    {
      "name": "Triggers"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataShare/listInvitations": {
      "get": {
        "operationId": "ConsumerInvitations_ListInvitations",
        "summary": "List the invitations",
        "description": "Lists invitations",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerInvitations_ListInvitations": {
            "$ref": "./examples/ConsumerInvitations_ListInvitations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/activateEmail": {
      "post": {
        "operationId": "EmailRegistrations_ActivateEmail",
        "summary": "Activates the tenant and email combination using email code received.",
        "description": "Activate the email registration for the current tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EmailRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EmailRegistrations_ActivateEmail": {
            "$ref": "./examples/EmailRegistrations_ActivateEmail.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/consumerInvitations/{invitationId}": {
      "get": {
        "operationId": "ConsumerInvitations_Get",
        "tags": [
          "ConsumerInvitations"
        ],
        "description": "Get an invitation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "invitationId",
            "in": "path",
            "description": "An invitation id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerInvitations_Get": {
            "$ref": "./examples/ConsumerInvitations_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/registerEmail": {
      "post": {
        "operationId": "EmailRegistrations_RegisterEmail",
        "summary": "Registers the tenant and email combination for verification.",
        "description": "Register an email for the current tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EmailRegistration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EmailRegistrations_RegisterEmail": {
            "$ref": "./examples/EmailRegistrations_RegisterEmail.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/rejectInvitation": {
      "post": {
        "operationId": "ConsumerInvitations_RejectInvitation",
        "summary": "Rejects the invitation identified by invitationId",
        "description": "Reject an invitation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumerInvitation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConsumerInvitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerInvitations_RejectInvitation": {
            "$ref": "./examples/ConsumerInvitations_RejectInvitation.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataShare/accounts": {
      "get": {
        "operationId": "Accounts_ListBySubscription",
        "tags": [
          "Accounts"
        ],
        "description": "List Accounts in Subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_ListBySubscription": {
            "$ref": "./examples/Accounts_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts": {
      "get": {
        "operationId": "Accounts_ListByResourceGroup",
        "tags": [
          "Accounts"
        ],
        "description": "List Accounts in ResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_ListByResourceGroup": {
            "$ref": "./examples/Accounts_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}": {
      "get": {
        "operationId": "Accounts_Get",
        "tags": [
          "Accounts"
        ],
        "description": "Get an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "./examples/Accounts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Accounts_Create",
        "tags": [
          "Accounts"
        ],
        "description": "Create an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "body",
            "description": "The account payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Account' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "201": {
            "description": "Resource 'Account' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Create": {
            "$ref": "./examples/Accounts_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Accounts_Update",
        "tags": [
          "Accounts"
        ],
        "description": "Patch an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountUpdateParameters",
            "in": "body",
            "description": "The account update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "./examples/Accounts_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Accounts_Delete",
        "tags": [
          "Accounts"
        ],
        "description": "DeleteAccount",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "./examples/Accounts_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions": {
      "get": {
        "operationId": "ShareSubscriptions_ListByAccount",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "List share subscriptions in an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation Token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_ListByAccount": {
            "$ref": "./examples/ShareSubscriptions_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}": {
      "get": {
        "operationId": "ShareSubscriptions_Get",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Get a shareSubscription in an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_Get": {
            "$ref": "./examples/ShareSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ShareSubscriptions_Create",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Create a shareSubscription in an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscription",
            "in": "body",
            "description": "create parameters for shareSubscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ShareSubscription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ShareSubscription"
            }
          },
          "201": {
            "description": "Resource 'ShareSubscription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ShareSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_Create": {
            "$ref": "./examples/ShareSubscriptions_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "ShareSubscriptions_Delete",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Delete a shareSubscription in an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_Delete": {
            "$ref": "./examples/ShareSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization": {
      "post": {
        "operationId": "ShareSubscriptions_CancelSynchronization",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Request to cancel a synchronization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionSynchronization",
            "in": "body",
            "description": "Share Subscription Synchronization payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionSynchronization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionSynchronization"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_CancelSynchronization": {
            "$ref": "./examples/ShareSubscriptions_CancelSynchronization.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets": {
      "get": {
        "operationId": "ConsumerSourceDataSets_ListByShareSubscription",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Get source dataSets of a shareSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConsumerSourceDataSetList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerSourceDataSets_ListByShareSubscription": {
            "$ref": "./examples/ConsumerSourceDataSets_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings": {
      "get": {
        "operationId": "DataSetMappings_ListByShareSubscription",
        "tags": [
          "DataSetMappings"
        ],
        "description": "List DataSetMappings in a share subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataSetMappingList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSetMappings_ListByShareSubscription": {
            "$ref": "./examples/DataSetMappings_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}": {
      "get": {
        "operationId": "DataSetMappings_Get",
        "tags": [
          "DataSetMappings"
        ],
        "description": "Get a DataSetMapping in a shareSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetMappingName",
            "in": "path",
            "description": "The name of the dataSetMapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataSetMapping"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSetMappings_Get": {
            "$ref": "./examples/DataSetMappings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DataSetMappings_Create",
        "tags": [
          "DataSetMappings"
        ],
        "description": "Create a DataSetMapping",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetMappingName",
            "in": "path",
            "description": "The name of the dataSetMapping.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetMapping",
            "in": "body",
            "description": "Destination data set configuration details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSetMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataSetMapping' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataSetMapping"
            }
          },
          "201": {
            "description": "Resource 'DataSetMapping' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataSetMapping"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSetMappings_Create": {
            "$ref": "./examples/DataSetMappings_Create.json"
          },
          "DataSetMappings_SqlDB_Create": {
            "$ref": "./examples/DataSetMappings_SqlDB_Create.json"
          },
          "DataSetMappings_SqlDWDataSetToAdlsGen2File_Create": {
            "$ref": "./examples/DataSetMappings_SqlDWDataSetToAdlsGen2File_Create.json"
          },
          "DataSetMappings_SqlDW_Create": {
            "$ref": "./examples/DataSetMappings_SqlDW_Create.json"
          },
          "DataSetMappings_SynapseWorkspaceSqlPoolTable_Create": {
            "$ref": "./examples/DataSetMappings_SynapseWorkspaceSqlPoolTable_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "DataSetMappings_Delete",
        "tags": [
          "DataSetMappings"
        ],
        "description": "Delete a DataSetMapping in a shareSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetMappingName",
            "in": "path",
            "description": "The name of the dataSetMapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSetMappings_Delete": {
            "$ref": "./examples/DataSetMappings_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings": {
      "post": {
        "operationId": "ShareSubscriptions_ListSourceShareSynchronizationSettings",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Get synchronization settings set on a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceShareSynchronizationSettingList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_ListSourceShareSynchronizationSettings": {
            "$ref": "./examples/ShareSubscriptions_ListSourceShareSynchronizationSettings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails": {
      "post": {
        "operationId": "ShareSubscriptions_ListSynchronizationDetails",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "List synchronization details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "shareSubscriptionSynchronization",
            "in": "body",
            "description": "Share Subscription Synchronization payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionSynchronization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SynchronizationDetailsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_ListSynchronizationDetails": {
            "$ref": "./examples/ShareSubscriptions_ListSynchronizationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations": {
      "post": {
        "operationId": "ShareSubscriptions_ListSynchronizations",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "List synchronizations of a share subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionSynchronizationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_ListSynchronizations": {
            "$ref": "./examples/ShareSubscriptions_ListSynchronizations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize": {
      "post": {
        "operationId": "ShareSubscriptions_Synchronize",
        "tags": [
          "ShareSubscriptions"
        ],
        "description": "Initiate a copy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronize",
            "in": "body",
            "description": "Synchronize payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Synchronize"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSubscriptionSynchronization"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ShareSubscriptions_Synchronize": {
            "$ref": "./examples/ShareSubscriptions_Synchronize.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers": {
      "get": {
        "operationId": "Triggers_ListByShareSubscription",
        "tags": [
          "Triggers"
        ],
        "description": "List Triggers in a share subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TriggerList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_ListByShareSubscription": {
            "$ref": "./examples/Triggers_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}": {
      "get": {
        "operationId": "Triggers_Get",
        "tags": [
          "Triggers"
        ],
        "description": "Get a Trigger in a shareSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The name of the trigger.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Triggers_Create",
        "tags": [
          "Triggers"
        ],
        "description": "Create a Trigger",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The name of the trigger.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trigger",
            "in": "body",
            "description": "Trigger details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Trigger' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "201": {
            "description": "Resource 'Trigger' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Trigger"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Create": {
            "$ref": "./examples/Triggers_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Triggers_Delete",
        "tags": [
          "Triggers"
        ],
        "description": "Delete a Trigger in a shareSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareSubscriptionName",
            "in": "path",
            "description": "The name of the shareSubscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The name of the trigger.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares": {
      "get": {
        "operationId": "Shares_ListByAccount",
        "tags": [
          "Shares"
        ],
        "description": "List shares in an account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation Token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_ListByAccount": {
            "$ref": "./examples/Shares_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}": {
      "get": {
        "operationId": "Shares_Get",
        "tags": [
          "Shares"
        ],
        "description": "Get a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_Get": {
            "$ref": "./examples/Shares_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Shares_Create",
        "tags": [
          "Shares"
        ],
        "description": "Create a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "share",
            "in": "body",
            "description": "The share payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Share"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Share' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "201": {
            "description": "Resource 'Share' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_Create": {
            "$ref": "./examples/Shares_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "Shares_Delete",
        "tags": [
          "Shares"
        ],
        "description": "Delete a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_Delete": {
            "$ref": "./examples/Shares_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets": {
      "get": {
        "operationId": "DataSets_ListByShare",
        "tags": [
          "DataSets"
        ],
        "description": "List DataSets in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataSetList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_ListByShare": {
            "$ref": "./examples/DataSets_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}": {
      "get": {
        "operationId": "DataSets_Get",
        "tags": [
          "DataSets"
        ],
        "description": "Get a DataSet in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetName",
            "in": "path",
            "description": "The name of the dataSet.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_Get": {
            "$ref": "./examples/DataSets_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DataSets_Create",
        "tags": [
          "DataSets"
        ],
        "description": "Create a DataSet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetName",
            "in": "path",
            "description": "The name of the dataSet.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSet",
            "in": "body",
            "description": "The new data set information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataSet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "201": {
            "description": "Resource 'DataSet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_Create": {
            "$ref": "./examples/DataSets_Create.json"
          },
          "DataSets_KustoCluster_Create": {
            "$ref": "./examples/DataSets_KustoCluster_Create.json"
          },
          "DataSets_KustoDatabase_Create": {
            "$ref": "./examples/DataSets_KustoDatabase_Create.json"
          },
          "DataSets_SqlDBTable_Create": {
            "$ref": "./examples/DataSets_SqlDBTable_Create.json"
          },
          "DataSets_SqlDWTable_Create": {
            "$ref": "./examples/DataSets_SqlDWTable_Create.json"
          },
          "DataSets_SynapseWorkspaceSqlPoolTable_Create": {
            "$ref": "./examples/DataSets_SynapseWorkspaceSqlPoolTable_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "DataSets_Delete",
        "tags": [
          "DataSets"
        ],
        "description": "Delete a DataSet in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSetName",
            "in": "path",
            "description": "The name of the dataSet.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataSets_Delete": {
            "$ref": "./examples/DataSets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations": {
      "get": {
        "operationId": "Invitations_ListByShare",
        "tags": [
          "Invitations"
        ],
        "description": "List invitations in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InvitationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_ListByShare": {
            "$ref": "./examples/Invitations_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}": {
      "get": {
        "operationId": "Invitations_Get",
        "tags": [
          "Invitations"
        ],
        "description": "Get an invitation in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Get": {
            "$ref": "./examples/Invitations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Invitations_Create",
        "tags": [
          "Invitations"
        ],
        "description": "Create an invitation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitation",
            "in": "body",
            "description": "Invitation details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Invitation' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "201": {
            "description": "Resource 'Invitation' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Create": {
            "$ref": "./examples/Invitations_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "Invitations_Delete",
        "tags": [
          "Invitations"
        ],
        "description": "Delete an invitation in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitationName",
            "in": "path",
            "description": "The name of the invitation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Invitations_Delete": {
            "$ref": "./examples/Invitations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails": {
      "post": {
        "operationId": "Shares_ListSynchronizationDetails",
        "tags": [
          "Shares"
        ],
        "description": "List synchronization details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "shareSynchronization",
            "in": "body",
            "description": "Share Synchronization payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareSynchronization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SynchronizationDetailsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_ListSynchronizationDetails": {
            "$ref": "./examples/Shares_ListSynchronizationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations": {
      "post": {
        "operationId": "Shares_ListSynchronizations",
        "tags": [
          "Shares"
        ],
        "description": "List synchronizations of a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results using OData syntax.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results using OData syntax.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareSynchronizationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Shares_ListSynchronizations": {
            "$ref": "./examples/Shares_ListSynchronizations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions": {
      "get": {
        "operationId": "ProviderShareSubscriptions_ListByShare",
        "tags": [
          "ProviderShareSubscriptions"
        ],
        "description": "List share subscriptions in a provider share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation Token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscriptionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderShareSubscriptions_ListByShare": {
            "$ref": "./examples/ProviderShareSubscriptions_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}": {
      "get": {
        "operationId": "ProviderShareSubscriptions_GetByShare",
        "tags": [
          "ProviderShareSubscriptions"
        ],
        "description": "Get share subscription in a provider share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscriptionId",
            "in": "path",
            "description": "To locate shareSubscription",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderShareSubscriptions_GetByShare": {
            "$ref": "./examples/ProviderShareSubscriptions_GetByShare.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/adjust": {
      "post": {
        "operationId": "ProviderShareSubscriptions_Adjust",
        "tags": [
          "ProviderShareSubscriptions"
        ],
        "description": "Adjust a share subscription's expiration date in a provider share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscriptionId",
            "in": "path",
            "description": "To locate shareSubscription",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscription",
            "in": "body",
            "description": "The provider share subscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderShareSubscriptions_Adjust": {
            "$ref": "./examples/ProviderShareSubscriptions_Adjust.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/reinstate": {
      "post": {
        "operationId": "ProviderShareSubscriptions_Reinstate",
        "tags": [
          "ProviderShareSubscriptions"
        ],
        "description": "Reinstate share subscription in a provider share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscriptionId",
            "in": "path",
            "description": "To locate shareSubscription",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscription",
            "in": "body",
            "description": "The provider share subscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderShareSubscriptions_Reinstate": {
            "$ref": "./examples/ProviderShareSubscriptions_Reinstate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/revoke": {
      "post": {
        "operationId": "ProviderShareSubscriptions_Revoke",
        "tags": [
          "ProviderShareSubscriptions"
        ],
        "description": "Revoke share subscription in a provider share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerShareSubscriptionId",
            "in": "path",
            "description": "To locate shareSubscription",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProviderShareSubscription"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ProviderShareSubscriptions_Revoke": {
            "$ref": "./examples/ProviderShareSubscriptions_Revoke.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings": {
      "get": {
        "operationId": "SynchronizationSettings_ListByShare",
        "tags": [
          "SynchronizationSettings"
        ],
        "description": "List synchronizationSettings in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "continuation token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SynchronizationSettingList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SynchronizationSettings_ListByShare": {
            "$ref": "./examples/SynchronizationSettings_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}": {
      "get": {
        "operationId": "SynchronizationSettings_Get",
        "tags": [
          "SynchronizationSettings"
        ],
        "description": "Get a synchronizationSetting in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronizationSettingName",
            "in": "path",
            "description": "The name of the synchronizationSetting.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SynchronizationSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SynchronizationSettings_Get": {
            "$ref": "./examples/SynchronizationSettings_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SynchronizationSettings_Create",
        "tags": [
          "SynchronizationSettings"
        ],
        "description": "Create a synchronizationSetting",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronizationSettingName",
            "in": "path",
            "description": "The name of the synchronizationSetting.",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronizationSetting",
            "in": "body",
            "description": "The new synchronization setting information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SynchronizationSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SynchronizationSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SynchronizationSetting"
            }
          },
          "201": {
            "description": "Resource 'SynchronizationSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SynchronizationSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SynchronizationSettings_Create": {
            "$ref": "./examples/SynchronizationSettings_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "SynchronizationSettings_Delete",
        "tags": [
          "SynchronizationSettings"
        ],
        "description": "Delete a synchronizationSetting in a share",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "The name of the share account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shareName",
            "in": "path",
            "description": "The name of the share to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronizationSettingName",
            "in": "path",
            "description": "The name of the synchronizationSetting.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SynchronizationSettings_Delete": {
            "$ref": "./examples/SynchronizationSettings_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "description": "An account data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "description": "Properties on the account",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Identity Info on the Account"
        }
      },
      "required": [
        "identity"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AccountList": {
      "type": "object",
      "description": "List response for get Accounts.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Account items on this page",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AccountProperties": {
      "type": "object",
      "description": "Account property bag.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the account was created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the Account",
          "readOnly": true
        },
        "userEmail": {
          "type": "string",
          "description": "Email of the user who created the resource",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the resource",
          "readOnly": true
        }
      }
    },
    "AccountUpdateParameters": {
      "type": "object",
      "description": "Update parameters for accounts",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags on the azure resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AdlsGen1FileDataSet": {
      "type": "object",
      "description": "An ADLS Gen 1 file data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen1FileProperties",
          "description": "ADLS Gen 1 file data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "AdlsGen1File"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "AdlsGen1FileProperties": {
      "type": "object",
      "description": "Properties of the ADLS Gen1 file data set.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The ADLS account name."
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "fileName": {
          "type": "string",
          "description": "The file name in the ADLS account."
        },
        "folderPath": {
          "type": "string",
          "description": "The folder path within the ADLS account."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of ADLS account."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of ADLS account."
        }
      },
      "required": [
        "accountName",
        "fileName",
        "folderPath",
        "resourceGroup",
        "subscriptionId"
      ]
    },
    "AdlsGen1FolderDataSet": {
      "type": "object",
      "description": "An ADLS Gen 1 folder data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen1FolderProperties",
          "description": "ADLS Gen 1 folder data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "AdlsGen1Folder"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "AdlsGen1FolderProperties": {
      "type": "object",
      "description": "Properties of the ADLS Gen1 folder data set.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The ADLS account name."
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "folderPath": {
          "type": "string",
          "description": "The folder path within the ADLS account."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of ADLS account."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of ADLS account."
        }
      },
      "required": [
        "accountName",
        "folderPath",
        "resourceGroup",
        "subscriptionId"
      ]
    },
    "AdlsGen2FileDataSet": {
      "type": "object",
      "description": "An ADLS Gen 2 file data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FileProperties",
          "description": "ADLS Gen 2 file data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "AdlsGen2File"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "AdlsGen2FileDataSetMapping": {
      "type": "object",
      "description": "An ADLS Gen2 file data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FileDataSetMappingProperties",
          "description": "ADLS Gen2 file data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "AdlsGen2File"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "AdlsGen2FileDataSetMappingProperties": {
      "type": "object",
      "description": "ADLS Gen 2 file data set mapping property bag.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "File path within the file system."
        },
        "fileSystem": {
          "type": "string",
          "description": "File system to which the file belongs."
        },
        "outputType": {
          "$ref": "#/definitions/OutputType",
          "description": "Type of output file"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "dataSetId",
        "filePath",
        "fileSystem",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "AdlsGen2FileProperties": {
      "type": "object",
      "description": "Properties of the ADLS Gen2 file data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "File path within the file system."
        },
        "fileSystem": {
          "type": "string",
          "description": "File system to which the file belongs."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "filePath",
        "fileSystem",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "AdlsGen2FileSystemDataSet": {
      "type": "object",
      "description": "An ADLS Gen 2 file system data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FileSystemProperties",
          "description": "ADLS Gen 2 file system data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "AdlsGen2FileSystem"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "AdlsGen2FileSystemDataSetMapping": {
      "type": "object",
      "description": "An ADLS Gen2 file system data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FileSystemDataSetMappingProperties",
          "description": "ADLS Gen2 file system data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "AdlsGen2FileSystem"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "AdlsGen2FileSystemDataSetMappingProperties": {
      "type": "object",
      "description": "ADLS Gen 2 file system data set mapping property bag.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "fileSystem": {
          "type": "string",
          "description": "The file system name."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "dataSetId",
        "fileSystem",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "AdlsGen2FileSystemProperties": {
      "type": "object",
      "description": "Properties of the ADLS Gen2 file system data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "fileSystem": {
          "type": "string",
          "description": "The file system name."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "fileSystem",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "AdlsGen2FolderDataSet": {
      "type": "object",
      "description": "An ADLS Gen 2 folder data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FolderProperties",
          "description": "ADLS Gen 2 folder data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "AdlsGen2Folder"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "AdlsGen2FolderDataSetMapping": {
      "type": "object",
      "description": "An ADLS Gen2 folder data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdlsGen2FolderDataSetMappingProperties",
          "description": "ADLS Gen2 folder data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "AdlsGen2Folder"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "AdlsGen2FolderDataSetMappingProperties": {
      "type": "object",
      "description": "ADLS Gen 2 folder data set mapping property bag.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "fileSystem": {
          "type": "string",
          "description": "File system to which the folder belongs."
        },
        "folderPath": {
          "type": "string",
          "description": "Folder path within the file system."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "dataSetId",
        "fileSystem",
        "folderPath",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "AdlsGen2FolderProperties": {
      "type": "object",
      "description": "Properties of the ADLS Gen2 folder data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "fileSystem": {
          "type": "string",
          "description": "File system to which the folder belongs."
        },
        "folderPath": {
          "type": "string",
          "description": "Folder path within the file system."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "fileSystem",
        "folderPath",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobContainerDataSet": {
      "type": "object",
      "description": "An Azure storage blob container data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobContainerProperties",
          "description": "Blob container data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "Container"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "BlobContainerDataSetMapping": {
      "type": "object",
      "description": "A Blob container data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobContainerMappingProperties",
          "description": "Blob container data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "Container"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "BlobContainerMappingProperties": {
      "type": "object",
      "description": "Azure storage Blob container data set mapping property bag.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "BLOB Container name."
        },
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "containerName",
        "dataSetId",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobContainerProperties": {
      "type": "object",
      "description": "Properties of the BLOB container data set.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "BLOB Container name."
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "containerName",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobDataSet": {
      "type": "object",
      "description": "An Azure storage blob data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobProperties",
          "description": "Blob data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "Blob"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "BlobDataSetMapping": {
      "type": "object",
      "description": "A Blob data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobMappingProperties",
          "description": "Blob data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "Blob"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "BlobFolderDataSet": {
      "type": "object",
      "description": "An Azure storage blob folder data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobFolderProperties",
          "description": "Blob folder data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "BlobFolder"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "BlobFolderDataSetMapping": {
      "type": "object",
      "description": "A Blob folder data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BlobFolderMappingProperties",
          "description": "Blob folder data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "BlobFolder"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "BlobFolderMappingProperties": {
      "type": "object",
      "description": "Azure storage Blob folder data set mapping property bag.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Container that has the file path."
        },
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "prefix": {
          "type": "string",
          "description": "Prefix for blob folder"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "containerName",
        "dataSetId",
        "prefix",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobFolderProperties": {
      "type": "object",
      "description": "Properties of the blob folder data set.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Container that has the file path."
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "prefix": {
          "type": "string",
          "description": "Prefix for blob folder"
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "containerName",
        "prefix",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobMappingProperties": {
      "type": "object",
      "description": "Azure storage Blob data set mapping property bag.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Container that has the file path."
        },
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "File path within the source data set"
        },
        "outputType": {
          "$ref": "#/definitions/OutputType",
          "description": "File output type"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account."
        }
      },
      "required": [
        "containerName",
        "dataSetId",
        "filePath",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "BlobProperties": {
      "type": "object",
      "description": "Properties of the blob data set.",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Container that has the file path."
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "File path within the source data set"
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group of storage account"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage account name of the source data set"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id of storage account"
        }
      },
      "required": [
        "containerName",
        "filePath",
        "resourceGroup",
        "storageAccountName",
        "subscriptionId"
      ]
    },
    "ConsumerInvitation": {
      "type": "object",
      "description": "A consumer Invitation data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConsumerInvitationProperties",
          "description": "Properties on the account",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConsumerInvitationList": {
      "type": "object",
      "description": "List response for get InvitationList",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConsumerInvitation items on this page",
          "items": {
            "$ref": "#/definitions/ConsumerInvitation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConsumerInvitationProperties": {
      "type": "object",
      "description": "Properties of consumer invitation",
      "properties": {
        "dataSetCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of data sets in a share",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description shared when the invitation was created",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date for the share subscription created by accepting the invitation.",
          "readOnly": true
        },
        "invitationId": {
          "type": "string",
          "description": "Unique id of the invitation."
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "description": "The status of the invitation.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "invitation location",
          "readOnly": true
        },
        "providerEmail": {
          "type": "string",
          "description": "Email of the provider who created the resource",
          "readOnly": true
        },
        "providerName": {
          "type": "string",
          "description": "Name of the provider who created the resource",
          "readOnly": true
        },
        "providerTenantName": {
          "type": "string",
          "description": "Tenant name of the provider who created the resource",
          "readOnly": true
        },
        "respondedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "readOnly": true
        },
        "sentAt": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "readOnly": true
        },
        "shareName": {
          "type": "string",
          "description": "Gets the source share Name.",
          "readOnly": true
        },
        "termsOfUse": {
          "type": "string",
          "description": "Terms of use shared when the invitation was created",
          "readOnly": true
        },
        "userEmail": {
          "type": "string",
          "description": "Email of the user who created the resource",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the resource",
          "readOnly": true
        }
      },
      "required": [
        "invitationId"
      ]
    },
    "ConsumerSourceDataSet": {
      "type": "object",
      "description": "A consumer side dataSet data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConsumerSourceDataSetProperties",
          "description": "source dataSet properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ]
    },
    "ConsumerSourceDataSetList": {
      "type": "object",
      "description": "A consumer side list of source dataSets",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConsumerSourceDataSet items on this page",
          "items": {
            "$ref": "#/definitions/ConsumerSourceDataSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConsumerSourceDataSetProperties": {
      "type": "object",
      "description": "Properties of consumer source dataSet",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "DataSet Id",
          "readOnly": true
        },
        "dataSetLocation": {
          "type": "string",
          "description": "Location of the data set.",
          "readOnly": true
        },
        "dataSetName": {
          "type": "string",
          "description": "DataSet name",
          "readOnly": true
        },
        "dataSetPath": {
          "type": "string",
          "description": "DataSet path",
          "readOnly": true
        },
        "dataSetType": {
          "$ref": "#/definitions/DataSetType",
          "description": "Type of data set",
          "readOnly": true
        }
      }
    },
    "DataSet": {
      "type": "object",
      "description": "A DataSet data transfer object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/DataSetKind",
          "description": "Kind of data set."
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataSetKind": {
      "type": "string",
      "description": "Kind of data set.",
      "enum": [
        "Blob",
        "Container",
        "BlobFolder",
        "AdlsGen2FileSystem",
        "AdlsGen2Folder",
        "AdlsGen2File",
        "AdlsGen1Folder",
        "AdlsGen1File",
        "KustoCluster",
        "KustoDatabase",
        "SqlDBTable",
        "SqlDWTable",
        "SynapseWorkspaceSqlPoolTable"
      ],
      "x-ms-enum": {
        "name": "DataSetKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Blob",
            "value": "Blob"
          },
          {
            "name": "Container",
            "value": "Container"
          },
          {
            "name": "BlobFolder",
            "value": "BlobFolder"
          },
          {
            "name": "AdlsGen2FileSystem",
            "value": "AdlsGen2FileSystem"
          },
          {
            "name": "AdlsGen2Folder",
            "value": "AdlsGen2Folder"
          },
          {
            "name": "AdlsGen2File",
            "value": "AdlsGen2File"
          },
          {
            "name": "AdlsGen1Folder",
            "value": "AdlsGen1Folder"
          },
          {
            "name": "AdlsGen1File",
            "value": "AdlsGen1File"
          },
          {
            "name": "KustoCluster",
            "value": "KustoCluster"
          },
          {
            "name": "KustoDatabase",
            "value": "KustoDatabase"
          },
          {
            "name": "SqlDBTable",
            "value": "SqlDBTable"
          },
          {
            "name": "SqlDWTable",
            "value": "SqlDWTable"
          },
          {
            "name": "SynapseWorkspaceSqlPoolTable",
            "value": "SynapseWorkspaceSqlPoolTable"
          }
        ]
      }
    },
    "DataSetList": {
      "type": "object",
      "description": "List response for get DataSets",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataSet items on this page",
          "items": {
            "$ref": "#/definitions/DataSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataSetMapping": {
      "type": "object",
      "description": "A data set mapping data transfer object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/DataSetMappingKind",
          "description": "Kind of data set mapping."
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataSetMappingKind": {
      "type": "string",
      "description": "Kind of data set mapping.",
      "enum": [
        "Blob",
        "Container",
        "BlobFolder",
        "AdlsGen2FileSystem",
        "AdlsGen2Folder",
        "AdlsGen2File",
        "KustoCluster",
        "KustoDatabase",
        "SqlDBTable",
        "SqlDWTable",
        "SynapseWorkspaceSqlPoolTable"
      ],
      "x-ms-enum": {
        "name": "DataSetMappingKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Blob",
            "value": "Blob"
          },
          {
            "name": "Container",
            "value": "Container"
          },
          {
            "name": "BlobFolder",
            "value": "BlobFolder"
          },
          {
            "name": "AdlsGen2FileSystem",
            "value": "AdlsGen2FileSystem"
          },
          {
            "name": "AdlsGen2Folder",
            "value": "AdlsGen2Folder"
          },
          {
            "name": "AdlsGen2File",
            "value": "AdlsGen2File"
          },
          {
            "name": "KustoCluster",
            "value": "KustoCluster"
          },
          {
            "name": "KustoDatabase",
            "value": "KustoDatabase"
          },
          {
            "name": "SqlDBTable",
            "value": "SqlDBTable"
          },
          {
            "name": "SqlDWTable",
            "value": "SqlDWTable"
          },
          {
            "name": "SynapseWorkspaceSqlPoolTable",
            "value": "SynapseWorkspaceSqlPoolTable"
          }
        ]
      }
    },
    "DataSetMappingList": {
      "type": "object",
      "description": "List response for get DataSetMappings",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataSetMapping items on this page",
          "items": {
            "$ref": "#/definitions/DataSetMapping"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataSetMappingStatus": {
      "type": "string",
      "description": "Gets the status of the data set mapping.",
      "enum": [
        "Ok",
        "Broken"
      ],
      "x-ms-enum": {
        "name": "DataSetMappingStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ok",
            "value": "Ok"
          },
          {
            "name": "Broken",
            "value": "Broken"
          }
        ]
      }
    },
    "DataSetType": {
      "type": "string",
      "description": "Type of data set",
      "enum": [
        "Blob",
        "Container",
        "BlobFolder",
        "AdlsGen2FileSystem",
        "AdlsGen2Folder",
        "AdlsGen2File",
        "AdlsGen1Folder",
        "AdlsGen1File",
        "KustoCluster",
        "KustoDatabase",
        "SqlDBTable",
        "SqlDWTable",
        "SynapseWorkspaceSqlPoolTable"
      ],
      "x-ms-enum": {
        "name": "DataSetType",
        "modelAsString": true,
        "values": [
          {
            "name": "Blob",
            "value": "Blob"
          },
          {
            "name": "Container",
            "value": "Container"
          },
          {
            "name": "BlobFolder",
            "value": "BlobFolder"
          },
          {
            "name": "AdlsGen2FileSystem",
            "value": "AdlsGen2FileSystem"
          },
          {
            "name": "AdlsGen2Folder",
            "value": "AdlsGen2Folder"
          },
          {
            "name": "AdlsGen2File",
            "value": "AdlsGen2File"
          },
          {
            "name": "AdlsGen1Folder",
            "value": "AdlsGen1Folder"
          },
          {
            "name": "AdlsGen1File",
            "value": "AdlsGen1File"
          },
          {
            "name": "KustoCluster",
            "value": "KustoCluster"
          },
          {
            "name": "KustoDatabase",
            "value": "KustoDatabase"
          },
          {
            "name": "SqlDBTable",
            "value": "SqlDBTable"
          },
          {
            "name": "SqlDWTable",
            "value": "SqlDWTable"
          },
          {
            "name": "SynapseWorkspaceSqlPoolTable",
            "value": "SynapseWorkspaceSqlPoolTable"
          }
        ]
      }
    },
    "DataShareErrorInfo": {
      "type": "object",
      "description": "The data share error body model.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code of the error"
        },
        "details": {
          "type": "array",
          "description": "Nested details of the error model",
          "items": {
            "$ref": "#/definitions/DataShareErrorInfo"
          },
          "x-ms-identifiers": []
        },
        "message": {
          "type": "string",
          "description": "Message of the error"
        },
        "target": {
          "type": "string",
          "description": "Target of the error"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "DefaultDto": {
      "type": "object",
      "description": "Base data transfer object implementation for default resources.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the azure resource."
        },
        "tags": {
          "type": "object",
          "description": "Tags on the azure resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyDto"
        }
      ]
    },
    "EmailRegistration": {
      "type": "object",
      "description": "Dto for tenant domain registration",
      "properties": {
        "activationCode": {
          "type": "string",
          "description": "Activation code for the registration"
        },
        "activationExpirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the activation expiration",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "description": "The email to register",
          "readOnly": true
        },
        "registrationStatus": {
          "$ref": "#/definitions/RegistrationStatus",
          "description": "Registration status",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant to register",
          "readOnly": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity of resource",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "service principal Id",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "Identity Type"
        }
      }
    },
    "Invitation": {
      "type": "object",
      "description": "A Invitation data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InvitationProperties",
          "description": "Properties on the Invitation",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InvitationList": {
      "type": "object",
      "description": "List response for get InvitationList",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Invitation items on this page",
          "items": {
            "$ref": "#/definitions/Invitation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InvitationProperties": {
      "type": "object",
      "description": "Invitation property bag.",
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date for the invitation and share subscription."
        },
        "invitationId": {
          "type": "string",
          "description": "unique invitation id",
          "readOnly": true
        },
        "invitationStatus": {
          "$ref": "#/definitions/InvitationStatus",
          "description": "The status of the invitation.",
          "readOnly": true
        },
        "respondedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the recipient responded to the invitation.",
          "readOnly": true
        },
        "sentAt": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the time at which the invitation was sent.",
          "readOnly": true
        },
        "targetActiveDirectoryId": {
          "type": "string",
          "description": "The target Azure AD Id. Can't be combined with email."
        },
        "targetEmail": {
          "type": "string",
          "description": "The email the invitation is directed to."
        },
        "targetObjectId": {
          "type": "string",
          "description": "The target user or application Id that invitation is being sent to.\nMust be specified along TargetActiveDirectoryId. This enables sending\ninvitations to specific users or applications in an AD tenant."
        },
        "userEmail": {
          "type": "string",
          "description": "Email of the user who created the resource",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the resource",
          "readOnly": true
        }
      }
    },
    "InvitationStatus": {
      "type": "string",
      "description": "The status of the invitation.",
      "enum": [
        "Pending",
        "Accepted",
        "Rejected",
        "Withdrawn"
      ],
      "x-ms-enum": {
        "name": "InvitationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Withdrawn",
            "value": "Withdrawn"
          }
        ]
      }
    },
    "KustoClusterDataSet": {
      "type": "object",
      "description": "A kusto cluster data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KustoClusterDataSetProperties",
          "description": "Kusto cluster data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "KustoCluster"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "KustoClusterDataSetMapping": {
      "type": "object",
      "description": "A Kusto cluster data set mapping",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KustoClusterDataSetMappingProperties",
          "description": "Kusto cluster data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "KustoCluster"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "KustoClusterDataSetMappingProperties": {
      "type": "object",
      "description": "Properties of the Kusto cluster data set mapping",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "kustoClusterResourceId": {
          "type": "string",
          "description": "Resource id of the sink kusto cluster."
        },
        "location": {
          "type": "string",
          "description": "Location of the sink kusto cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        }
      },
      "required": [
        "dataSetId",
        "kustoClusterResourceId"
      ]
    },
    "KustoClusterDataSetProperties": {
      "type": "object",
      "description": "Properties of the kusto cluster data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "kustoClusterResourceId": {
          "type": "string",
          "description": "Resource id of the kusto cluster."
        },
        "location": {
          "type": "string",
          "description": "Location of the kusto cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the kusto cluster data set.",
          "readOnly": true
        }
      },
      "required": [
        "kustoClusterResourceId"
      ]
    },
    "KustoDatabaseDataSet": {
      "type": "object",
      "description": "A kusto database data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KustoDatabaseDataSetProperties",
          "description": "Kusto database data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "KustoDatabase"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "KustoDatabaseDataSetMapping": {
      "type": "object",
      "description": "A Kusto database data set mapping",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KustoDatabaseDataSetMappingProperties",
          "description": "Kusto database data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "KustoDatabase"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "KustoDatabaseDataSetMappingProperties": {
      "type": "object",
      "description": "Properties of the Kusto database data set mapping",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "kustoClusterResourceId": {
          "type": "string",
          "description": "Resource id of the sink kusto cluster."
        },
        "location": {
          "type": "string",
          "description": "Location of the sink kusto cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        }
      },
      "required": [
        "dataSetId",
        "kustoClusterResourceId"
      ]
    },
    "KustoDatabaseDataSetProperties": {
      "type": "object",
      "description": "Properties of the kusto database data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "kustoDatabaseResourceId": {
          "type": "string",
          "description": "Resource id of the kusto database."
        },
        "location": {
          "type": "string",
          "description": "Location of the kusto cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the kusto database data set.",
          "readOnly": true
        }
      },
      "required": [
        "kustoDatabaseResourceId"
      ]
    },
    "OperationResponse": {
      "type": "object",
      "description": "Response for long running operation",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "error": {
          "$ref": "#/definitions/DataShareErrorInfo",
          "description": "The error property when status is failed."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time"
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Operation state of the long running operation."
        }
      },
      "required": [
        "status"
      ]
    },
    "OutputType": {
      "type": "string",
      "description": "Type of output file",
      "enum": [
        "Csv",
        "Parquet"
      ],
      "x-ms-enum": {
        "name": "OutputType",
        "modelAsString": true,
        "values": [
          {
            "name": "Csv",
            "value": "Csv"
          },
          {
            "name": "Parquet",
            "value": "Parquet"
          }
        ]
      }
    },
    "ProviderShareSubscription": {
      "type": "object",
      "description": "A provider side share subscription data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProviderShareSubscriptionProperties",
          "description": "properties of providerShareSubscription",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProviderShareSubscriptionList": {
      "type": "object",
      "description": "List response for get ShareSubscription.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProviderShareSubscription items on this page",
          "items": {
            "$ref": "#/definitions/ProviderShareSubscription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProviderShareSubscriptionProperties": {
      "type": "object",
      "description": "Provider share subscription properties",
      "properties": {
        "consumerEmail": {
          "type": "string",
          "description": "Email of the consumer who created the share subscription",
          "readOnly": true
        },
        "consumerName": {
          "type": "string",
          "description": "Name of the consumer who created the share subscription",
          "readOnly": true
        },
        "consumerTenantName": {
          "type": "string",
          "description": "Tenant name of the consumer who created the share subscription",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "created at",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the share subscription in UTC format"
        },
        "providerEmail": {
          "type": "string",
          "description": "Email of the provider who created the share",
          "readOnly": true
        },
        "providerName": {
          "type": "string",
          "description": "Name of the provider who created the share",
          "readOnly": true
        },
        "sharedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Shared at",
          "readOnly": true
        },
        "shareSubscriptionObjectId": {
          "type": "string",
          "description": "share Subscription Object Id",
          "readOnly": true
        },
        "shareSubscriptionStatus": {
          "$ref": "#/definitions/ShareSubscriptionStatus",
          "description": "Gets the status of share subscription",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Account",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Moving",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Moving",
            "value": "Moving"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "ProxyDto": {
      "type": "object",
      "description": "Base data transfer object implementation for proxy resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id of the azure resource",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the azure resource",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "System Data of the Azure resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the azure resource",
          "readOnly": true
        }
      }
    },
    "RecurrenceInterval": {
      "type": "string",
      "description": "Recurrence Interval",
      "enum": [
        "Hour",
        "Day"
      ],
      "x-ms-enum": {
        "name": "RecurrenceInterval",
        "modelAsString": true,
        "values": [
          {
            "name": "Hour",
            "value": "Hour"
          },
          {
            "name": "Day",
            "value": "Day"
          }
        ]
      }
    },
    "RegistrationStatus": {
      "type": "string",
      "description": "Registration status",
      "enum": [
        "ActivationPending",
        "Activated",
        "ActivationAttemptsExhausted"
      ],
      "x-ms-enum": {
        "name": "RegistrationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "ActivationPending",
            "value": "ActivationPending"
          },
          {
            "name": "Activated",
            "value": "Activated"
          },
          {
            "name": "ActivationAttemptsExhausted",
            "value": "ActivationAttemptsExhausted"
          }
        ]
      }
    },
    "ScheduledSourceShareSynchronizationSettingProperties": {
      "type": "object",
      "description": "A Scheduled source synchronization setting data transfer object.",
      "properties": {
        "recurrenceInterval": {
          "$ref": "#/definitions/RecurrenceInterval",
          "description": "Recurrence Interval"
        },
        "synchronizationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Synchronization time"
        }
      }
    },
    "ScheduledSourceSynchronizationSetting": {
      "type": "object",
      "description": "A type of synchronization setting based on schedule",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledSourceShareSynchronizationSettingProperties",
          "description": "Properties of scheduled synchronization",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SourceShareSynchronizationSetting"
        }
      ],
      "x-ms-discriminator-value": "ScheduleBased"
    },
    "ScheduledSynchronizationSetting": {
      "type": "object",
      "description": "A type of synchronization setting based on schedule",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledSynchronizationSettingProperties",
          "description": "Properties of scheduled synchronization",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of synchronization setting.",
          "enum": [
            "ScheduleBased"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SynchronizationSetting"
        }
      ]
    },
    "ScheduledSynchronizationSettingProperties": {
      "type": "object",
      "description": "A Scheduled synchronization setting data transfer object.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the synchronization setting was created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state",
          "readOnly": true
        },
        "recurrenceInterval": {
          "$ref": "#/definitions/RecurrenceInterval",
          "description": "Recurrence Interval"
        },
        "synchronizationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Synchronization time"
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the synchronization setting.",
          "readOnly": true
        }
      },
      "required": [
        "recurrenceInterval",
        "synchronizationTime"
      ]
    },
    "ScheduledTrigger": {
      "type": "object",
      "description": "A type of trigger based on schedule",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledTriggerProperties",
          "description": "Properties of scheduled synchronization",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of synchronization on trigger.",
          "enum": [
            "ScheduleBased"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ]
    },
    "ScheduledTriggerProperties": {
      "type": "object",
      "description": "A Scheduled trigger data transfer object.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the trigger was created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets the provisioning state",
          "readOnly": true
        },
        "recurrenceInterval": {
          "$ref": "#/definitions/RecurrenceInterval",
          "description": "Recurrence Interval"
        },
        "synchronizationMode": {
          "$ref": "#/definitions/SynchronizationMode",
          "description": "Synchronization mode"
        },
        "synchronizationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Synchronization time"
        },
        "triggerStatus": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "Gets the trigger state",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the trigger.",
          "readOnly": true
        }
      },
      "required": [
        "recurrenceInterval",
        "synchronizationTime"
      ]
    },
    "Share": {
      "type": "object",
      "description": "A share data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ShareProperties",
          "description": "Properties on the share",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ShareKind": {
      "type": "string",
      "description": "Share kind.",
      "enum": [
        "CopyBased",
        "InPlace"
      ],
      "x-ms-enum": {
        "name": "ShareKind",
        "modelAsString": true,
        "values": [
          {
            "name": "CopyBased",
            "value": "CopyBased"
          },
          {
            "name": "InPlace",
            "value": "InPlace"
          }
        ]
      }
    },
    "ShareList": {
      "type": "object",
      "description": "List response for get Shares.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Share items on this page",
          "items": {
            "$ref": "#/definitions/Share"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ShareProperties": {
      "type": "object",
      "description": "Share property bag.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the share was created.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Share description."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Gets or sets the provisioning state",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind",
          "description": "Share kind."
        },
        "terms": {
          "type": "string",
          "description": "Share terms."
        },
        "userEmail": {
          "type": "string",
          "description": "Email of the user who created the resource",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the resource",
          "readOnly": true
        }
      }
    },
    "ShareSubscription": {
      "type": "object",
      "description": "A share subscription data transfer object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ShareSubscriptionProperties",
          "description": "Properties on the share subscription",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ShareSubscriptionList": {
      "type": "object",
      "description": "List response for get ShareSubscription.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ShareSubscription items on this page",
          "items": {
            "$ref": "#/definitions/ShareSubscription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ShareSubscriptionProperties": {
      "type": "object",
      "description": "Share subscription property bag.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the share subscription was created.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of the share subscription."
        },
        "invitationId": {
          "type": "string",
          "description": "The invitation id."
        },
        "providerEmail": {
          "type": "string",
          "description": "Email of the provider who created the resource",
          "readOnly": true
        },
        "providerName": {
          "type": "string",
          "description": "Name of the provider who created the resource",
          "readOnly": true
        },
        "providerTenantName": {
          "type": "string",
          "description": "Tenant name of the provider who created the resource",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the share subscription",
          "readOnly": true
        },
        "shareDescription": {
          "type": "string",
          "description": "Description of share",
          "readOnly": true
        },
        "shareKind": {
          "$ref": "#/definitions/ShareKind",
          "description": "Kind of share",
          "readOnly": true
        },
        "shareName": {
          "type": "string",
          "description": "Name of the share",
          "readOnly": true
        },
        "shareSubscriptionStatus": {
          "$ref": "#/definitions/ShareSubscriptionStatus",
          "description": "Gets the current status of share subscription.",
          "readOnly": true
        },
        "shareTerms": {
          "type": "string",
          "description": "Terms of a share",
          "readOnly": true
        },
        "sourceShareLocation": {
          "type": "string",
          "description": "Source share location."
        },
        "userEmail": {
          "type": "string",
          "description": "Email of the user who created the resource",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who created the resource",
          "readOnly": true
        }
      },
      "required": [
        "invitationId",
        "sourceShareLocation"
      ]
    },
    "ShareSubscriptionStatus": {
      "type": "string",
      "description": "Gets the status of share subscription",
      "enum": [
        "Active",
        "Revoked",
        "SourceDeleted",
        "Revoking"
      ],
      "x-ms-enum": {
        "name": "ShareSubscriptionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Revoked",
            "value": "Revoked"
          },
          {
            "name": "SourceDeleted",
            "value": "SourceDeleted"
          },
          {
            "name": "Revoking",
            "value": "Revoking"
          }
        ]
      }
    },
    "ShareSubscriptionSynchronization": {
      "type": "object",
      "description": "A ShareSubscriptionSynchronization data transfer object.",
      "properties": {
        "durationMs": {
          "type": "integer",
          "format": "int32",
          "description": "Synchronization duration",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of synchronization",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "message of Synchronization",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time of synchronization",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Raw Status",
          "readOnly": true
        },
        "synchronizationId": {
          "type": "string",
          "description": "Synchronization id"
        },
        "synchronizationMode": {
          "$ref": "#/definitions/SynchronizationMode",
          "description": "Synchronization Mode",
          "readOnly": true
        }
      },
      "required": [
        "synchronizationId"
      ]
    },
    "ShareSubscriptionSynchronizationList": {
      "type": "object",
      "description": "A consumer side list of share subscription synchronizations",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ShareSubscriptionSynchronization items on this page",
          "items": {
            "$ref": "#/definitions/ShareSubscriptionSynchronization"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ShareSynchronization": {
      "type": "object",
      "description": "A ShareSynchronization data transfer object.",
      "properties": {
        "consumerEmail": {
          "type": "string",
          "description": "Email of the user who created the synchronization"
        },
        "consumerName": {
          "type": "string",
          "description": "Name of the user who created the synchronization"
        },
        "consumerTenantName": {
          "type": "string",
          "description": "Tenant name of the consumer who created the synchronization"
        },
        "durationMs": {
          "type": "integer",
          "format": "int32",
          "description": "synchronization duration"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of synchronization"
        },
        "message": {
          "type": "string",
          "description": "message of synchronization"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "start time of synchronization"
        },
        "status": {
          "type": "string",
          "description": "Raw Status"
        },
        "synchronizationId": {
          "type": "string",
          "description": "Synchronization id"
        },
        "synchronizationMode": {
          "$ref": "#/definitions/SynchronizationMode",
          "description": "Synchronization mode",
          "readOnly": true
        }
      }
    },
    "ShareSynchronizationList": {
      "type": "object",
      "description": "List response for get ShareSynchronization.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ShareSynchronization items on this page",
          "items": {
            "$ref": "#/definitions/ShareSynchronization"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SourceShareSynchronizationSetting": {
      "type": "object",
      "description": "A view of synchronization setting added by the provider",
      "properties": {
        "kind": {
          "$ref": "#/definitions/SourceShareSynchronizationSettingKind",
          "description": "Kind of synchronization setting on share."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "SourceShareSynchronizationSettingKind": {
      "type": "string",
      "description": "Kind of synchronization setting on share.",
      "enum": [
        "ScheduleBased"
      ],
      "x-ms-enum": {
        "name": "SourceShareSynchronizationSettingKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ScheduleBased",
            "value": "ScheduleBased"
          }
        ]
      }
    },
    "SourceShareSynchronizationSettingList": {
      "type": "object",
      "description": "List response for get source share Synchronization settings",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SourceShareSynchronizationSetting items on this page",
          "items": {
            "$ref": "#/definitions/SourceShareSynchronizationSetting"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SqlDBTableDataSet": {
      "type": "object",
      "description": "A SQL DB table data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDBTableProperties",
          "description": "SQL DB table data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "SqlDBTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "SqlDBTableDataSetMapping": {
      "type": "object",
      "description": "A SQL DB Table data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDBTableDataSetMappingProperties",
          "description": "Sql DB data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "SqlDBTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "SqlDBTableDataSetMappingProperties": {
      "type": "object",
      "description": "Properties of the SQL DB table data set mapping.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "DatabaseName name of the sink data set"
        },
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "Schema of the table. Default value is dbo."
        },
        "sqlServerResourceId": {
          "type": "string",
          "description": "Resource id of SQL server"
        },
        "tableName": {
          "type": "string",
          "description": "SQL DB table name."
        }
      },
      "required": [
        "databaseName",
        "dataSetId",
        "schemaName",
        "sqlServerResourceId",
        "tableName"
      ]
    },
    "SqlDBTableProperties": {
      "type": "object",
      "description": "Properties of the SQL DB table data set.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Database name of the source data set"
        },
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "Schema of the table. Default value is dbo."
        },
        "sqlServerResourceId": {
          "type": "string",
          "description": "Resource id of SQL server"
        },
        "tableName": {
          "type": "string",
          "description": "SQL DB table name."
        }
      },
      "required": [
        "databaseName",
        "schemaName",
        "sqlServerResourceId",
        "tableName"
      ]
    },
    "SqlDWTableDataSet": {
      "type": "object",
      "description": "A SQL DW table data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDWTableProperties",
          "description": "SQL DW table data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "SqlDWTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "SqlDWTableDataSetMapping": {
      "type": "object",
      "description": "A SQL DW Table data set mapping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDWTableDataSetMappingProperties",
          "description": "Sql DW data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "SqlDWTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "SqlDWTableDataSetMappingProperties": {
      "type": "object",
      "description": "Properties of the SQL DW table data set mapping.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "dataWarehouseName": {
          "type": "string",
          "description": "DataWarehouse name of the source data set"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "Schema of the table. Default value is dbo."
        },
        "sqlServerResourceId": {
          "type": "string",
          "description": "Resource id of SQL server"
        },
        "tableName": {
          "type": "string",
          "description": "SQL DW table name."
        }
      },
      "required": [
        "dataSetId",
        "dataWarehouseName",
        "schemaName",
        "sqlServerResourceId",
        "tableName"
      ]
    },
    "SqlDWTableProperties": {
      "type": "object",
      "description": "Properties of the SQL DW table data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "dataWarehouseName": {
          "type": "string",
          "description": "DataWarehouse name of the source data set"
        },
        "schemaName": {
          "type": "string",
          "description": "Schema of the table. Default value is dbo."
        },
        "sqlServerResourceId": {
          "type": "string",
          "description": "Resource id of SQL server"
        },
        "tableName": {
          "type": "string",
          "description": "SQL DW table name."
        }
      },
      "required": [
        "dataWarehouseName",
        "schemaName",
        "sqlServerResourceId",
        "tableName"
      ]
    },
    "Status": {
      "type": "string",
      "description": "Operation state of the long running operation.",
      "enum": [
        "Accepted",
        "InProgress",
        "TransientFailure",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "TransientFailure",
            "value": "TransientFailure"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      },
      "readOnly": true
    },
    "SynapseWorkspaceSqlPoolTableDataSet": {
      "type": "object",
      "description": "A Synapse Workspace Sql Pool Table data set.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SynapseWorkspaceSqlPoolTableDataSetProperties",
          "description": "Synapse Workspace Sql Pool Table data set properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set.",
          "enum": [
            "SynapseWorkspaceSqlPoolTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSet"
        }
      ]
    },
    "SynapseWorkspaceSqlPoolTableDataSetMapping": {
      "type": "object",
      "description": "A Synapse Workspace Sql Pool Table data set mapping",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SynapseWorkspaceSqlPoolTableDataSetMappingProperties",
          "description": "A Synapse Workspace Sql Pool Table data set mapping properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of data set mapping.",
          "enum": [
            "SynapseWorkspaceSqlPoolTable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "properties",
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataSetMapping"
        }
      ]
    },
    "SynapseWorkspaceSqlPoolTableDataSetMappingProperties": {
      "type": "object",
      "description": "Properties of the Synapse Workspace SQL Pool Table data set mapping",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "The id of the source data set."
        },
        "dataSetMappingStatus": {
          "$ref": "#/definitions/DataSetMappingStatus",
          "description": "Gets the status of the data set mapping.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the data set mapping.",
          "readOnly": true
        },
        "synapseWorkspaceSqlPoolTableResourceId": {
          "type": "string",
          "description": "Resource id of the Synapse Workspace SQL Pool Table"
        }
      },
      "required": [
        "dataSetId",
        "synapseWorkspaceSqlPoolTableResourceId"
      ]
    },
    "SynapseWorkspaceSqlPoolTableDataSetProperties": {
      "type": "object",
      "description": "Properties of the Synapse Workspace SQL Pool Table data set.",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Unique id for identifying a data set resource",
          "readOnly": true
        },
        "synapseWorkspaceSqlPoolTableResourceId": {
          "type": "string",
          "description": "Resource id of the Synapse Workspace SQL Pool Table"
        }
      },
      "required": [
        "synapseWorkspaceSqlPoolTableResourceId"
      ]
    },
    "SynchronizationDetails": {
      "type": "object",
      "description": "Synchronization details at data set level",
      "properties": {
        "dataSetId": {
          "type": "string",
          "description": "Id of data set",
          "readOnly": true
        },
        "dataSetType": {
          "$ref": "#/definitions/DataSetType",
          "description": "Type of the data set",
          "readOnly": true
        },
        "durationMs": {
          "type": "integer",
          "format": "int32",
          "description": "Duration of data set level copy",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of data set level copy",
          "readOnly": true
        },
        "filesRead": {
          "type": "integer",
          "format": "int64",
          "description": "The number of files read from the source data set",
          "readOnly": true
        },
        "filesWritten": {
          "type": "integer",
          "format": "int64",
          "description": "The number of files written into the sink data set",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message if any",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the data set",
          "readOnly": true
        },
        "rowsCopied": {
          "type": "integer",
          "format": "int64",
          "description": "The number of files copied into the sink data set",
          "readOnly": true
        },
        "rowsRead": {
          "type": "integer",
          "format": "int64",
          "description": "The number of rows read from the source data set.",
          "readOnly": true
        },
        "sizeRead": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the data read from the source data set in bytes",
          "readOnly": true
        },
        "sizeWritten": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the data written into the sink data set in bytes",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of data set level copy",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Raw Status",
          "readOnly": true
        },
        "vCore": {
          "type": "integer",
          "format": "int64",
          "description": "The vCore units consumed for the data set synchronization",
          "readOnly": true
        }
      }
    },
    "SynchronizationDetailsList": {
      "type": "object",
      "description": "details of synchronization",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SynchronizationDetails items on this page",
          "items": {
            "$ref": "#/definitions/SynchronizationDetails"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SynchronizationMode": {
      "type": "string",
      "description": "Synchronization mode",
      "enum": [
        "Incremental",
        "FullSync"
      ],
      "x-ms-enum": {
        "name": "SynchronizationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Incremental",
            "value": "Incremental"
          },
          {
            "name": "FullSync",
            "value": "FullSync"
          }
        ]
      }
    },
    "SynchronizationSetting": {
      "type": "object",
      "description": "A Synchronization Setting data transfer object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/SynchronizationSettingKind",
          "description": "Kind of synchronization setting."
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SynchronizationSettingKind": {
      "type": "string",
      "description": "Kind of synchronization setting.",
      "enum": [
        "ScheduleBased"
      ],
      "x-ms-enum": {
        "name": "SynchronizationSettingKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ScheduleBased",
            "value": "ScheduleBased"
          }
        ]
      }
    },
    "SynchronizationSettingList": {
      "type": "object",
      "description": "List response for get Synchronization settings",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SynchronizationSetting items on this page",
          "items": {
            "$ref": "#/definitions/SynchronizationSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Synchronize": {
      "type": "object",
      "description": "Payload for the synchronizing the data.",
      "properties": {
        "synchronizationMode": {
          "$ref": "#/definitions/SynchronizationMode",
          "description": "Mode of synchronization used in triggers and snapshot sync. Incremental by default"
        }
      }
    },
    "Trigger": {
      "type": "object",
      "description": "A Trigger data transfer object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/TriggerKind",
          "description": "Kind of synchronization on trigger."
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TriggerKind": {
      "type": "string",
      "description": "Kind of synchronization on trigger.",
      "enum": [
        "ScheduleBased"
      ],
      "x-ms-enum": {
        "name": "TriggerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ScheduleBased",
            "value": "ScheduleBased"
          }
        ]
      }
    },
    "TriggerList": {
      "type": "object",
      "description": "List response for get triggers",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Trigger items on this page",
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TriggerStatus": {
      "type": "string",
      "description": "Gets the trigger state",
      "enum": [
        "Active",
        "Inactive",
        "SourceSynchronizationSettingDeleted"
      ],
      "x-ms-enum": {
        "name": "TriggerStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Inactive",
            "value": "Inactive"
          },
          {
            "name": "SourceSynchronizationSettingDeleted",
            "value": "SourceSynchronizationSettingDeleted"
          }
        ]
      }
    },
    "Type": {
      "type": "string",
      "description": "Identity Type",
      "enum": [
        "SystemAssigned"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          }
        ]
      }
    }
  },
  "parameters": {}
}
