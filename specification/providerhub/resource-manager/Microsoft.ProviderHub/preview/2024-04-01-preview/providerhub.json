{
  "swagger": "2.0",
  "info": {
    "title": "ProviderHub",
    "description": "Microsoft ProviderHub",
    "version": "2024-04-01-preview",
    "x-ms-code-generation-settings": {
      "name": "ProviderHubClient"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts/{rolloutName}": {
      "get": {
        "tags": [
          "CustomRollouts"
        ],
        "description": "Gets the custom rollout details.",
        "operationId": "CustomRollouts_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the rollout details.",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_Get": {
            "$ref": "./examples/CustomRollouts_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CustomRollouts"
        ],
        "description": "Deletes the custom rollout resource. Custom rollout must be in terminal state.",
        "operationId": "CustomRollouts_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the custom rollout resource."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "providerReleases_Delete": {
            "$ref": "./examples/CustomRollouts_Delete.json"
          }
        }
      },
      "put": {
        "tags": [
          "CustomRollouts"
        ],
        "description": "Creates or updates the rollout details.",
        "operationId": "CustomRollouts_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            },
            "description": "The custom rollout properties supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Rollout completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          },
          "201": {
            "description": "Rollout created successfully.",
            "schema": {
              "$ref": "#/definitions/CustomRollout"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_CreateOrUpdate": {
            "$ref": "./examples/CustomRollouts_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts": {
      "get": {
        "tags": [
          "CustomRollouts"
        ],
        "description": "Gets the list of the custom rollouts for the given provider.",
        "operationId": "CustomRollouts_ListByProviderRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of custom rollouts for given provider.",
            "schema": {
              "$ref": "#/definitions/CustomRolloutArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_ListByProviderRegistration": {
            "$ref": "./examples/CustomRollouts_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/customRollouts/{rolloutName}/stop": {
      "post": {
        "tags": [
          "CustomRollouts"
        ],
        "description": "Stops or cancels the custom rollout, if in progress.",
        "operationId": "CustomRollouts_Stop",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cancelled the custom rollout."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomRollouts_Stop": {
            "$ref": "./examples/CustomRollouts_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts/{rolloutName}": {
      "get": {
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Gets the default rollout details.",
        "operationId": "DefaultRollouts_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the default rollout details.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Get": {
            "$ref": "./examples/DefaultRollouts_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Deletes the rollout resource. Rollout must be in terminal state.",
        "operationId": "DefaultRollouts_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the default rollout resource."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Delete": {
            "$ref": "./examples/DefaultRollouts_Delete.json"
          }
        }
      },
      "put": {
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Creates or updates the rollout details.",
        "operationId": "DefaultRollouts_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            },
            "description": "The Default rollout properties supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Default rollout started successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "201": {
            "description": "Default rollout completed successfully.",
            "schema": {
              "$ref": "#/definitions/DefaultRollout"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_CreateOrUpdate": {
            "$ref": "./examples/DefaultRollouts_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts": {
      "get": {
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Gets the list of the rollouts for the given provider.",
        "operationId": "DefaultRollouts_ListByProviderRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of default rollouts.",
            "schema": {
              "$ref": "#/definitions/DefaultRolloutArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_ListByProviderRegistration": {
            "$ref": "./examples/DefaultRollouts_ListByProviderRegistration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/defaultRollouts/{rolloutName}/stop": {
      "post": {
        "tags": [
          "DefaultRollouts"
        ],
        "description": "Stops or cancels the rollout, if in progress.",
        "operationId": "DefaultRollouts_Stop",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetRolloutNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cancelled the default rollout."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DefaultRollouts_Stop": {
            "$ref": "./examples/DefaultRollouts_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateManifest": {
      "post": {
        "tags": [
          "Manifest"
        ],
        "description": "Generates the manifest for the given provider.",
        "operationId": "GenerateManifest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "GenerateManifest": {
            "$ref": "./examples/GenerateManifest.json"
          }
        },
        "responses": {
          "200": {
            "description": "Manifest generated.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderManifest"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/checkinManifest": {
      "post": {
        "tags": [
          "Manifest"
        ],
        "description": "Checkin the manifest.",
        "operationId": "CheckinManifest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "name": "checkinManifestParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckinManifestParams"
            },
            "description": "The required body parameters supplied to the checkin manifest operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "CheckinManifest": {
            "$ref": "./examples/CheckinManifest.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully checked-in manifest.",
            "schema": {
              "$ref": "#/definitions/CheckinManifestInfo"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations/{notificationRegistrationName}": {
      "get": {
        "tags": [
          "NotificationRegistration"
        ],
        "description": "Gets the notification registration details.",
        "operationId": "NotificationRegistrations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetNotificationRegistrationNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "NotificationRegistrations_Get": {
            "$ref": "./examples/NotificationRegistrations_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the notification registration.",
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRegistration"
        ],
        "description": "Creates or updates a notification registration.",
        "operationId": "NotificationRegistrations_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetNotificationRegistrationNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            },
            "description": "The required body parameters supplied to the notification registration operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "NotificationRegistrations_CreateOrUpdate": {
            "$ref": "./examples/NotificationRegistrations_CreateOrUpdate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the notification registration.",
            "schema": {
              "$ref": "#/definitions/NotificationRegistration"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRegistration"
        ],
        "description": "Deletes a notification registration.",
        "operationId": "NotificationRegistrations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetNotificationRegistrationNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "NotificationRegistrations_Delete": {
            "$ref": "./examples/NotificationRegistrations_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the notification registration."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/notificationRegistrations": {
      "get": {
        "tags": [
          "NotificationRegistration"
        ],
        "description": "Gets the list of the notification registrations for the given provider.",
        "operationId": "NotificationRegistrations_ListByProviderRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "NotificationRegistrations_ListByProviderRegistration": {
            "$ref": "./examples/NotificationRegistrations_ListByProviderRegistration.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the notification registrations.",
            "schema": {
              "$ref": "#/definitions/NotificationRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.ProviderHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all the operations supported by Microsoft.ProviderHub.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of supported operations.",
            "schema": {
              "$ref": "#/definitions/OperationsDefinitionArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/operations/default": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Gets the operations supported by the given provider.",
        "operationId": "Operations_ListByProviderRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Operations_ListByProviderRegistration": {
            "$ref": "./examples/Operations_ListByProviderRegistration.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the supported operations.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationsDefinition"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Operations"
        ],
        "description": "Creates or updates the operation supported by the given provider.",
        "operationId": "Operations_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "name": "OperationsPutContent",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationsPutContent"
            },
            "description": "The operations content properties supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Operations_CreateOrUpdate": {
            "$ref": "./examples/Operations_CreateOrUpdate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the operation.",
            "schema": {
              "$ref": "#/definitions/OperationsPutContent"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Operations"
        ],
        "description": "Deletes an operation.",
        "operationId": "Operations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Operations_Delete": {
            "$ref": "./examples/Operations_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the operation."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}": {
      "get": {
        "tags": [
          "ProviderRegistration"
        ],
        "description": "Gets the provider registration details.",
        "operationId": "ProviderRegistrations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderRegistrations_Get": {
            "$ref": "./examples/ProviderRegistrations_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the provider registration.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProviderRegistration"
        ],
        "description": "Creates or updates the provider registration.",
        "operationId": "ProviderRegistrations_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            },
            "description": "The provider registration properties supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderRegistrations_CreateOrUpdate": {
            "$ref": "./examples/ProviderRegistrations_CreateOrUpdate.json"
          },
          "DirectProviderRegistrations_CreateOrUpdate": {
            "$ref": "./examples/DirectProviderRegistrations_CreateOrUpdate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the provider registration.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistration"
            }
          },
          "201": {
            "description": "Successfully created the provider registration."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ProviderRegistration"
        ],
        "description": "Deletes a provider registration.",
        "operationId": "ProviderRegistrations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderRegistrations_Delete": {
            "$ref": "./examples/ProviderRegistrations_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the provider registration."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations": {
      "get": {
        "tags": [
          "ProviderRegistration"
        ],
        "description": "Gets the list of the provider registrations in the subscription.",
        "operationId": "ProviderRegistrations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderRegistrations_List": {
            "$ref": "./examples/ProviderRegistrations_List.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the provider registrations.",
            "schema": {
              "$ref": "#/definitions/ProviderRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/generateOperations": {
      "post": {
        "tags": [
          "ProviderRegistration"
        ],
        "description": "Generates the operations api for the given provider.",
        "operationId": "ProviderRegistrations_GenerateOperations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderRegistrations_GenerateOperations": {
            "$ref": "./examples/ProviderRegistrations_GenerateOperations.json"
          }
        },
        "responses": {
          "200": {
            "description": "The operations api has been generated successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationsDefinition"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}": {
      "get": {
        "tags": [
          "ResourceTypeRegistration"
        ],
        "description": "Gets a resource type details in the given subscription and provider.",
        "operationId": "ResourceTypeRegistrations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ResourceTypeRegistrations_Get": {
            "$ref": "./examples/ResourceTypeRegistrations_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource type.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceTypeRegistration"
        ],
        "description": "Creates or updates a resource type.",
        "operationId": "ResourceTypeRegistrations_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            },
            "description": "The required request body parameters supplied to the resource type registration CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ResourceTypeRegistrations_CreateOrUpdate": {
            "$ref": "./examples/ResourceTypeRegistrations_CreateOrUpdate.json"
          },
          "DirectResourceTypeRegistrations_CreateOrUpdate.json": {
            "$ref": "./examples/DirectResourceTypeRegistrations_CreateOrUpdate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the resource type.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          },
          "201": {
            "description": "Successfully created the resource type.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistration"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ResourceTypeRegistration"
        ],
        "description": "Deletes a resource type",
        "operationId": "ResourceTypeRegistrations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ResourceTypeRegistrations_Delete": {
            "$ref": "./examples/ResourceTypeRegistrations_Delete.json"
          }
        },
        "responses": {
          "202": {
            "description": "Delete request accepted.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations": {
      "get": {
        "tags": [
          "ResourceTypeRegistration"
        ],
        "description": "Gets the list of the resource types for the given provider.",
        "operationId": "ResourceTypeRegistrations_ListByProviderRegistration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ResourceTypeRegistrations_ListByProviderRegistration": {
            "$ref": "./examples/ResourceTypeRegistrations_ListByProviderRegistration.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource types.",
            "schema": {
              "$ref": "#/definitions/ResourceTypeRegistrationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus/{sku}": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "operationId": "Skus_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_Get": {
            "$ref": "./examples/Skus_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "operationId": "Skus_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            },
            "description": "The required body parameters supplied to the resource sku operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_CreateOrUpdate": {
            "$ref": "./examples/Skus_CreateOrUpdate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Deletes a resource type sku.",
        "operationId": "Skus_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_Delete": {
            "$ref": "./examples/Skus_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the resource type sku."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus/{sku}": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "operationId": "Skus_GetNestedResourceTypeFirst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_GetNestedResourceTypeFirst.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeFirst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            },
            "description": "The required body parameters supplied to the resource sku operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeFirst.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Deletes a resource type sku.",
        "operationId": "Skus_DeleteNestedResourceTypeFirst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeFirst.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the resource type sku."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus/{sku}": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "operationId": "Skus_GetNestedResourceTypeSecond",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_GetNestedResourceTypeSecond.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeSecond",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            },
            "description": "The required body parameters supplied to the resource sku operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeSecond.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Deletes a resource type sku.",
        "operationId": "Skus_DeleteNestedResourceTypeSecond",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeSecond.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the resource type sku."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus/{sku}": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the sku details for the given resource type and sku name.",
        "operationId": "Skus_GetNestedResourceTypeThird",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeThirdParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_GetNestedResourceTypeThird": {
            "$ref": "./examples/Skus_GetNestedResourceTypeThird.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Creates or updates the resource type skus in the given resource type.",
        "operationId": "Skus_CreateOrUpdateNestedResourceTypeThird",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeThirdParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkuResource"
            },
            "description": "The required body parameters supplied to the resource sku operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_CreateOrUpdateNestedResourceTypeThird": {
            "$ref": "./examples/Skus_CreateOrUpdateNestedResourceTypeThird.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource type sku.",
            "schema": {
              "$ref": "#/definitions/SkuResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Deletes a resource type sku.",
        "operationId": "Skus_DeleteNestedResourceTypeThird",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeThirdParameter"
          },
          {
            "$ref": "#/parameters/SkuParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_DeleteNestedResourceTypeThird": {
            "$ref": "./examples/Skus_DeleteNestedResourceTypeThird.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the resource type sku."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/skus": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "operationId": "Skus_ListByResourceTypeRegistrations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrations": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrations.json"
          }
        },
        "responses": {
          "200": {
            "description": "SUccessfully retrieved the resource type skus.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/skus": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeFirst.json"
          }
        },
        "responses": {
          "200": {
            "description": "SUccessfully retrieved the resource type skus.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/skus": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeSecond.json"
          }
        },
        "responses": {
          "200": {
            "description": "SUccessfully retrieved the resource type skus.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType}/resourcetypeRegistrations/{nestedResourceTypeFirst}/resourcetypeRegistrations/{nestedResourceTypeSecond}/resourcetypeRegistrations/{nestedResourceTypeThird}/skus": {
      "get": {
        "tags": [
          "ResourceTypeSku"
        ],
        "description": "Gets the list of skus for the given resource type.",
        "operationId": "Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/GetResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeFirstParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeSecondParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceTypeThirdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird": {
            "$ref": "./examples/Skus_ListByResourceTypeRegistrationsNestedResourceTypeThird.json"
          }
        },
        "responses": {
          "200": {
            "description": "SUccessfully retrieved the resource type skus.",
            "schema": {
              "$ref": "#/definitions/SkuResourceArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourceActions/{resourceActionName}/deleteResources": {
      "post": {
        "tags": [
          "ResourceActions"
        ],
        "description": "Deletes resources.",
        "operationId": "ResourceActions_DeleteResources",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/ResourceActionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceManagementAction"
            },
            "description": "The properties supplied to the DeleteResources operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource management action started.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceActions_DeleteResources": {
            "$ref": "./examples/ResourceActions_DeleteResources.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications/{applicationId}": {
      "get": {
        "tags": [
          "AuthorizedApplication"
        ],
        "description": "Gets the authorized application details.",
        "operationId": "AuthorizedApplications_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationIdParameter"
          }
        ],
        "x-ms-examples": {
          "AuthorizedApplications_Get": {
            "$ref": "./examples/AuthorizedApplications_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the authorized application details.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuthorizedApplication"
        ],
        "description": "Creates or updates the authorized application.",
        "operationId": "AuthorizedApplications_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "#/parameters/ApplicationIdParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            },
            "description": "The authorized application properties supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "AuthorizedApplications_CreateOrUpdate": {
            "$ref": "./examples/AuthorizedApplications_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Successfully updated the authorized application.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          },
          "201": {
            "description": "Successfully created the authorized application.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplication"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizedApplication"
        ],
        "description": "Deletes an authorized application.",
        "operationId": "AuthorizedApplications_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ApplicationIdParameter"
          }
        ],
        "x-ms-examples": {
          "AuthorizedApplications_Delete": {
            "$ref": "./examples/AuthorizedApplications_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the authorized application."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/authorizedApplications": {
      "get": {
        "tags": [
          "AuthorizedApplication"
        ],
        "description": "Gets the list of the authorized applications in the provider namespace.",
        "operationId": "AuthorizedApplications_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ProviderNamespaceParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "AuthorizedApplications_List": {
            "$ref": "./examples/AuthorizedApplications_List.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the authorized applications.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApplicationArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProviderHub/providerMonitorSettings/{providerMonitorSettingName}": {
      "get": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Gets the provider monitor setting details.",
        "operationId": "ProviderMonitorSettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderMonitorSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_Get": {
            "$ref": "./examples/ProviderMonitorSettings_Get.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the provider monitor setting.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Creates the provider monitor setting.",
        "operationId": "ProviderMonitorSettings_Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderMonitorSettingNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            },
            "description": "The provider monitor setting properties supplied to the create operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_Create": {
            "$ref": "./examples/ProviderMonitorSettings_Create.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the provider monitor setting.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "201": {
            "description": "Successfully created the provider monitor setting.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Updates the provider monitor setting properties as specified in the request body. Update fails if the specified provider monitor setting does not already exist.",
        "operationId": "ProviderMonitorSettings_Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderMonitorSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_Update": {
            "$ref": "./examples/ProviderMonitorSettings_Update.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the provider monitor setting.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSetting"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Deletes a provider monitor setting.",
        "operationId": "ProviderMonitorSettings_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderMonitorSettingNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_Delete": {
            "$ref": "./examples/ProviderMonitorSettings_Delete.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully deleted the provider monitor setting."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ProviderHub/providerMonitorSettings": {
      "get": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Gets the list of the provider monitor settings in the resource group.",
        "operationId": "ProviderMonitorSettings_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_ListByResourceGroup": {
            "$ref": "./examples/ProviderMonitorSettings_ListByResourceGroup.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the provider monitor settings.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSettingArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerMonitorSettings": {
      "get": {
        "tags": [
          "ProviderMonitorSetting"
        ],
        "description": "Gets the list of the provider monitor settings in the subscription.",
        "operationId": "ProviderMonitorSettings_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ProviderMonitorSettings_ListBySubscription": {
            "$ref": "./examples/ProviderMonitorSettings_ListBySubscription.json"
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the provider monitor settings.",
            "schema": {
              "$ref": "#/definitions/ProviderMonitorSettingArrayResponseWithContinuation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ProvisioningState": {
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "MovingResources",
        "TransientFailure",
        "RolloutInProgress"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "QuotaPolicy": {
      "enum": [
        "Default",
        "None",
        "Restricted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "QuotaPolicy",
        "modelAsString": true
      },
      "description": "Quota policy."
    },
    "TrafficRegions": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomRolloutSpecification": {
      "type": "object",
      "properties": {
        "autoProvisionConfig": {
          "type": "object",
          "properties": {
            "storage": {
              "type": "boolean"
            },
            "resourceGraph": {
              "type": "boolean"
            }
          }
        },
        "canary": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegions"
            }
          ]
        },
        "releaseScopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "refreshSubscriptionRegistration": {
          "type": "boolean"
        },
        "skipReleaseScopeValidation": {
          "type": "boolean"
        },
        "providerRegistration": {
          "allOf": [
            {
              "$ref": "#/definitions/ProviderRegistration"
            }
          ]
        },
        "resourceTypeRegistrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        },
        "manifestCheckinSpecification": {
          "allOf": [
            {
              "$ref": "#/definitions/ManifestCheckinSpecification"
            }
          ]
        }
      }
    },
    "TypedErrorInfo": {
      "required": [
        "type"
      ],
      "type": "object",
      "description": "Error information.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the error."
        },
        "info": {
          "type": "object",
          "description": "The error information.",
          "readOnly": true
        }
      }
    },
    "ExtendedErrorInfo": {
      "type": "object",
      "description": "Error information.",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "target": {
          "description": "The target of the error.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "details": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          },
          "x-ms-identifiers": [
            "code"
          ]
        },
        "additionalInfo": {
          "description": "The additional error information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypedErrorInfo"
          },
          "x-ms-identifiers": [
            "type"
          ]
        }
      }
    },
    "CheckinManifestParams": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "description": "The environment supplied to the checkin manifest operation."
        },
        "baselineArmManifestLocation": {
          "type": "string",
          "description": "The baseline ARM manifest location supplied to the checkin manifest operation."
        }
      },
      "required": [
        "baselineArmManifestLocation",
        "environment"
      ]
    },
    "RolloutStatusBase": {
      "type": "object",
      "properties": {
        "completedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedOrSkippedRegions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          }
        }
      }
    },
    "CustomRolloutProperties": {
      "type": "object",
      "required": [
        "specification"
      ],
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource."
        },
        "specification": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomRolloutSpecification"
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/CustomRolloutStatus"
            }
          ]
        }
      }
    },
    "CustomRollout": {
      "description": "Rollout details.",
      "type": "object",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomRolloutProperties",
          "description": "Properties of the rollout."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "CustomRolloutArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRollout"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "TrafficRegionRolloutConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrafficRegions"
        }
      ],
      "properties": {
        "waitDuration": {
          "format": "duration",
          "type": "string"
        }
      }
    },
    "ExpeditedRolloutDefinition": {
      "description": "Expedited rollout configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Indicates whether expedited rollout is enabled/disabled",
          "type": "boolean"
        }
      }
    },
    "ManifestCheckinSpecification": {
      "type": "object",
      "properties": {
        "manifestCheckinOption": {
          "enum": [
            "AttemptAutomaticManifestCheckin",
            "DoNotAttemptAutomaticManifestCheckin"
          ],
          "type": "string",
          "default": "DoNotAttemptAutomaticManifestCheckin",
          "x-ms-enum": {
            "name": "ManifestCheckinOption",
            "modelAsString": true
          }
        },
        "manifestCheckinParams": {
          "allOf": [
            {
              "$ref": "#/definitions/CheckinManifestParams"
            }
          ]
        }
      }
    },
    "DefaultRolloutSpecification": {
      "type": "object",
      "properties": {
        "expeditedRollout": {
          "allOf": [
            {
              "$ref": "#/definitions/ExpeditedRolloutDefinition"
            }
          ]
        },
        "canary": {
          "allOf": [
            {
              "$ref": "#/definitions/CanaryTrafficRegionRolloutConfiguration"
            }
          ]
        },
        "lowTraffic": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
            }
          ]
        },
        "mediumTraffic": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
            }
          ]
        },
        "highTraffic": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
            }
          ]
        },
        "restOfTheWorldGroupOne": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
            }
          ]
        },
        "restOfTheWorldGroupTwo": {
          "allOf": [
            {
              "$ref": "#/definitions/TrafficRegionRolloutConfiguration"
            }
          ]
        },
        "providerRegistration": {
          "allOf": [
            {
              "$ref": "#/definitions/ProviderRegistration"
            }
          ]
        },
        "resourceTypeRegistrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        },
        "autoProvisionConfig": {
          "type": "object",
          "properties": {
            "storage": {
              "type": "boolean"
            },
            "resourceGraph": {
              "type": "boolean"
            }
          }
        },
        "manifestCheckinSpecification": {
          "allOf": [
            {
              "$ref": "#/definitions/ManifestCheckinSpecification"
            }
          ]
        }
      }
    },
    "DefaultRolloutStatus": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RolloutStatusBase"
        }
      ],
      "properties": {
        "nextTrafficRegion": {
          "enum": [
            "NotSpecified",
            "Canary",
            "LowTraffic",
            "MediumTraffic",
            "HighTraffic",
            "None",
            "RestOfTheWorldGroupOne",
            "RestOfTheWorldGroupTwo"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TrafficRegionCategory",
            "modelAsString": true
          }
        },
        "nextTrafficRegionScheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "subscriptionReregistrationResult": {
          "enum": [
            "NotApplicable",
            "ConditionalUpdate",
            "ForcedUpdate",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionReregistrationResult",
            "modelAsString": true
          }
        },
        "manifestCheckinStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/CheckinManifestInfo"
            }
          ]
        }
      }
    },
    "DefaultRolloutProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource."
        },
        "specification": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultRolloutSpecification"
            }
          ]
        },
        "status": {
          "allOf": [
            {
              "$ref": "#/definitions/DefaultRolloutStatus"
            }
          ]
        }
      }
    },
    "DefaultRollout": {
      "description": "Default rollout definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DefaultRolloutProperties",
          "description": "Properties of the rollout."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "DefaultRolloutArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefaultRollout"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "ResourceProviderAuthentication": {
      "required": [
        "allowedAudiences"
      ],
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceProviderAuthorization": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "roleDefinitionId": {
          "type": "string"
        },
        "managedByRoleDefinitionId": {
          "type": "string"
        },
        "managedByAuthorization": {
          "type": "object",
          "description": "Managed by authorization.",
          "properties": {
            "additionalAuthorizations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdditionalAuthorization"
              },
              "x-ms-identifiers": [
                "applicationId",
                "roleDefinitionId"
              ]
            },
            "managedByResourceRoleDefinitionId": {
              "type": "string",
              "description": "The managed by resource role definition ID for the application."
            },
            "allowManagedByInheritance": {
              "type": "boolean",
              "description": "Indicates whether the managed by resource role definition ID should be inherited."
            }
          }
        },
        "allowedThirdPartyExtensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyExtension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "groupingTag": {
          "type": "string"
        }
      }
    },
    "ApplicationProviderAuthorization": {
      "type": "object",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The role definition ID for the application."
        },
        "managedByRoleDefinitionId": {
          "type": "string",
          "description": "The managed by role definition ID for the application."
        }
      }
    },
    "ResourceProviderService": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Active",
            "Inactive"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServiceStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationDataAuthorization": {
      "required": [
        "role"
      ],
      "type": "object",
      "properties": {
        "role": {
          "enum": [
            "ServiceOwner",
            "LimitedOwner"
          ],
          "type": "string",
          "description": "The ownership role the application has on the resource types. The service owner role gives the application owner permissions. The limited owner role gives elevated permissions but does not allow all the permissions of a service owner, such as read/write on internal metadata.",
          "x-ms-enum": {
            "name": "Role",
            "modelAsString": true
          }
        },
        "resourceTypes": {
          "type": "array",
          "description": "The resource types from the defined resource types in the provider namespace that the application can access. If no resource types are specified and the role is service owner, the default is * which is all resource types",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FeaturesRule": {
      "required": [
        "requiredFeaturesPolicy"
      ],
      "type": "object",
      "properties": {
        "requiredFeaturesPolicy": {
          "enum": [
            "Any",
            "All"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FeaturesPolicy",
            "modelAsString": true
          }
        }
      }
    },
    "RequestHeaderOptions": {
      "type": "object",
      "properties": {
        "optInHeaders": {
          "enum": [
            "NotSpecified",
            "SignedUserToken",
            "ClientGroupMembership",
            "SignedAuxiliaryTokens",
            "UnboundedClientGroupMembership",
            "PrivateLinkId",
            "PrivateLinkResourceId",
            "ManagementGroupAncestorsEncoded",
            "PrivateLinkVnetTrafficTag",
            "ResourceGroupLocation",
            "ClientPrincipalNameEncoded",
            "MSIResourceIdEncoded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OptInHeaderType",
            "modelAsString": true
          }
        },
        "optOutHeaders": {
          "enum": [
            "NotSpecified",
            "SystemDataCreatedByLastModifiedBy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OptOutHeaderType",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateResourceProviderConfiguration": {
      "type": "object",
      "properties": {
        "allowedSubscriptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AuthorizationActionMapping": {
      "type": "object",
      "properties": {
        "original": {
          "type": "string"
        },
        "desired": {
          "type": "string"
        }
      }
    },
    "LinkedAccessCheck": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "linkedProperty": {
          "type": "string"
        },
        "linkedAction": {
          "type": "string"
        },
        "linkedActionVerb": {
          "type": "string"
        },
        "linkedType": {
          "type": "string"
        }
      }
    },
    "LoggingHiddenPropertyPath": {
      "type": "object",
      "properties": {
        "hiddenPathsOnRequest": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hiddenPathsOnResponse": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LoggingRule": {
      "required": [
        "action",
        "detailLevel",
        "direction"
      ],
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "direction": {
          "enum": [
            "None",
            "Request",
            "Response"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LoggingDirections",
            "modelAsString": true
          }
        },
        "detailLevel": {
          "enum": [
            "None",
            "Body"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LoggingDetails",
            "modelAsString": true
          }
        },
        "hiddenPropertyPaths": {
          "allOf": [
            {
              "$ref": "#/definitions/LoggingHiddenPropertyPath"
            }
          ]
        }
      }
    },
    "ThrottlingMetric": {
      "required": [
        "limit",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "NotSpecified",
            "NumberOfRequests",
            "NumberOfResources"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ThrottlingMetricType",
            "modelAsString": true
          }
        },
        "limit": {
          "format": "int64",
          "type": "integer"
        },
        "interval": {
          "format": "duration",
          "type": "string"
        }
      }
    },
    "ThrottlingRule": {
      "required": [
        "action",
        "metrics"
      ],
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingMetric"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceProviderEndpoint": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endpointUri": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "timeout": {
          "format": "duration",
          "type": "string"
        },
        "endpointType": {
          "enum": [
            "NotSpecified",
            "Canary",
            "Production",
            "TestInProduction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "skuLink": {
          "type": "string"
        }
      }
    },
    "IdentityManagementProperties": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "NotSpecified",
            "SystemAssigned",
            "UserAssigned",
            "Actor",
            "DelegatedResourceIdentity"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityManagementTypes",
            "modelAsString": true
          }
        },
        "applicationId": {
          "type": "string"
        },
        "applicationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "delegationAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IdentityManagement": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "NotSpecified",
            "SystemAssigned",
            "UserAssigned",
            "Actor",
            "DelegatedResourceIdentity"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityManagementTypes",
            "modelAsString": true
          }
        }
      }
    },
    "SubscriptionStateRule": {
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "NotDefined",
            "Enabled",
            "Warned",
            "PastDue",
            "Disabled",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          }
        },
        "allowedActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomRolloutStatus": {
      "type": "object",
      "properties": {
        "completedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedOrSkippedRegions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExtendedErrorInfo"
          }
        },
        "manifestCheckinStatus": {
          "allOf": [
            {
              "$ref": "#/definitions/CheckinManifestInfo"
            }
          ]
        }
      }
    },
    "CanaryTrafficRegionRolloutConfiguration": {
      "type": "object",
      "properties": {
        "skipRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceTreeInfo": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "componentId": {
          "type": "string"
        },
        "readiness": {
          "enum": [
            "ClosingDown",
            "Deprecated",
            "GA",
            "InDevelopment",
            "InternalOnly",
            "PrivatePreview",
            "PublicPreview",
            "RemovedFromARM",
            "Retired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Readiness",
            "modelAsString": true
          }
        }
      }
    },
    "TemplateDeploymentPolicy": {
      "required": [
        "capabilities",
        "preflightOptions"
      ],
      "type": "object",
      "properties": {
        "capabilities": {
          "enum": [
            "Default",
            "Preflight"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TemplateDeploymentCapabilities",
            "modelAsString": true
          }
        },
        "preflightOptions": {
          "enum": [
            "None",
            "ValidationRequests",
            "DeploymentRequests",
            "TestOnly",
            "RegisteredOnly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TemplateDeploymentPreflightOptions",
            "modelAsString": true
          }
        },
        "preflightNotifications": {
          "type": "string",
          "enum": [
            "None",
            "UnregisteredSubscriptions"
          ],
          "x-ms-enum": {
            "name": "TemplateDeploymentPreflightNotifications",
            "modelAsString": true
          }
        }
      }
    },
    "ExtendedLocationOptions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "supportedPolicy": {
          "type": "string"
        }
      }
    },
    "LinkedOperationRule": {
      "required": [
        "linkedAction",
        "linkedOperation"
      ],
      "type": "object",
      "properties": {
        "linkedOperation": {
          "enum": [
            "None",
            "CrossResourceGroupResourceMove",
            "CrossSubscriptionResourceMove"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LinkedOperation",
            "modelAsString": true
          }
        },
        "linkedAction": {
          "enum": [
            "NotSpecified",
            "Blocked",
            "Validate",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LinkedAction",
            "modelAsString": true
          }
        },
        "dependsOnTypes": {
          "description": "Depends on types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "routingType": {
          "enum": [
            "Default",
            "ProxyOnly",
            "HostBased",
            "Extension",
            "Tenant",
            "Fanout",
            "LocationBased",
            "Failover",
            "CascadeExtension"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingType",
            "modelAsString": true
          }
        },
        "additionalOptions": {
          "enum": [
            "ProtectedAsyncOperationPolling",
            "ProtectedAsyncOperationPollingAuditOnly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AdditionalOptions",
            "modelAsString": true
          }
        },
        "crossTenantTokenValidation": {
          "enum": [
            "EnsureSecureValidation",
            "PassthroughInsecureToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CrossTenantTokenValidation",
            "modelAsString": true
          }
        },
        "resourceValidation": {
          "enum": [
            "NotSpecified",
            "ReservedWords",
            "ProfaneWords"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceValidation",
            "modelAsString": true
          }
        },
        "allowedUnauthorizedActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizationActionMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationActionMapping"
          },
          "x-ms-identifiers": [
            "original"
          ]
        },
        "linkedAccessChecks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedAccessCheck"
          },
          "x-ms-identifiers": []
        },
        "defaultApiVersion": {
          "type": "string"
        },
        "loggingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoggingRule"
          },
          "x-ms-identifiers": []
        },
        "throttlingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": []
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "marketplaceType": {
          "enum": [
            "NotSpecified",
            "AddOn",
            "Bypass",
            "Store"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MarketplaceType"
          }
        },
        "identityManagement": {
          "allOf": [
            {
              "$ref": "#/definitions/IdentityManagement"
            }
          ]
        },
        "metadata": {},
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "subscriptionStateRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionStateRule"
          },
          "x-ms-identifiers": []
        },
        "serviceTreeInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "requestHeaderOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/RequestHeaderOptions"
            }
          ]
        },
        "skuLink": {
          "type": "string"
        },
        "disallowedActionVerbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateDeploymentPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/TemplateDeploymentPolicy"
            }
          ]
        },
        "extendedLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedLocationOptions"
          },
          "x-ms-identifiers": []
        },
        "linkedOperationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedOperationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceDeletionPolicy": {
          "enum": [
            "NotSpecified",
            "Cascade",
            "Force"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManifestResourceDeletionPolicy",
            "modelAsString": true
          }
        },
        "quotaRule": {
          "$ref": "#/definitions/QuotaRule"
        },
        "linkedNotificationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules"
        }
      }
    },
    "ResourceProviderManagement": {
      "type": "object",
      "properties": {
        "schemaOwners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "manifestOwners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizationOwners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "incidentRoutingService": {
          "type": "string"
        },
        "incidentRoutingTeam": {
          "type": "string"
        },
        "incidentContactEmail": {
          "type": "string"
        },
        "serviceTreeInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "resourceAccessPolicy": {
          "enum": [
            "NotSpecified",
            "AcisReadAllowed",
            "AcisActionAllowed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceAccessPolicy"
          }
        },
        "resourceAccessRoles": {
          "type": "array",
          "items": {},
          "x-ms-identifiers": []
        },
        "expeditedRolloutSubmitters": {
          "type": "array",
          "description": "List of expedited rollout submitters.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "errorResponseMessageOptions": {
          "type": "object",
          "description": "Options for error response messages.",
          "properties": {
            "serverFailureResponseMessageType": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "OutageReporting"
              ],
              "description": "Type of server failure response message.",
              "x-ms-enum": {
                "name": "ServerFailureResponseMessageType",
                "modelAsString": true
              }
            }
          }
        },
        "expeditedRolloutMetadata": {
          "type": "object",
          "description": "Metadata for expedited rollout.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Expedited rollout enabled?"
            },
            "expeditedRolloutIntent": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Hotfix"
              ],
              "description": "Expedited rollout intent.",
              "x-ms-enum": {
                "name": "ExpeditedRolloutIntent",
                "modelAsString": true
              }
            }
          }
        },
        "canaryManifestOwners": {
          "type": "array",
          "description": "List of manifest owners for canary.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "pcCode": {
          "type": "string",
          "description": "The profit center code for the subscription."
        },
        "profitCenterProgramId": {
          "type": "string",
          "description": "The profit center program id for the subscription."
        }
      }
    },
    "ResourceProviderCapabilities": {
      "required": [
        "effect",
        "quotaId"
      ],
      "type": "object",
      "properties": {
        "quotaId": {
          "type": "string"
        },
        "effect": {
          "enum": [
            "NotSpecified",
            "Allow",
            "Disallow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProviderCapabilitiesEffect",
            "modelAsString": true
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReRegisterSubscriptionMetadata": {
      "required": [
        "enabled"
      ],
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "concurrencyLimit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ResourceProviderManifest": {
      "type": "object",
      "properties": {
        "providerAuthentication": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderAuthentication"
            }
          ]
        },
        "providerAuthorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "namespace": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderService"
          },
          "x-ms-identifiers": []
        },
        "serviceName": {
          "type": "string"
        },
        "providerVersion": {
          "type": "string"
        },
        "providerType": {
          "enum": [
            "NotSpecified",
            "Internal",
            "External",
            "Hidden",
            "RegistrationFree",
            "LegacyRegistrationRequired",
            "TenantOnly",
            "AuthorizationFree"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProviderType",
            "modelAsString": true
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "requestHeaderOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/RequestHeaderOptions"
            }
          ]
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceType"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "management": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderManagement"
            }
          ]
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderCapabilities"
          },
          "x-ms-identifiers": [
            "quotaId"
          ]
        },
        "crossTenantTokenValidation": {
          "enum": [
            "EnsureSecureValidation",
            "PassthroughInsecureToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CrossTenantTokenValidation",
            "modelAsString": true
          }
        },
        "metadata": {},
        "globalNotificationEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "reRegisterSubscriptionMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/ReRegisterSubscriptionMetadata"
            }
          ]
        },
        "enableTenantLinkedNotification": {
          "type": "boolean",
          "x-nullable": true
        },
        "linkedNotificationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FanoutLinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules"
        }
      }
    },
    "CheckinManifestInfo": {
      "required": [
        "isCheckedIn",
        "statusMessage"
      ],
      "type": "object",
      "properties": {
        "isCheckedIn": {
          "type": "boolean"
        },
        "statusMessage": {
          "type": "string"
        },
        "pullRequest": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        }
      }
    },
    "NotificationEndpoint": {
      "type": "object",
      "properties": {
        "notificationDestination": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NotificationRegistrationProperties": {
      "type": "object",
      "properties": {
        "notificationMode": {
          "enum": [
            "NotSpecified",
            "EventHub",
            "WebHook"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationMode",
            "modelAsString": true
          }
        },
        "messageScope": {
          "enum": [
            "NotSpecified",
            "RegisteredSubscriptions"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MessageScope",
            "modelAsString": true
          }
        },
        "includedEvents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationEndpoint"
          },
          "x-ms-identifiers": [
            "notificationDestination"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioned state of the resource."
        }
      }
    },
    "NotificationRegistration": {
      "description": "The notification registration definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationRegistrationProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "NotificationRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationRegistration"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "OperationsDisplayDefinition": {
      "required": [
        "description",
        "operation",
        "provider",
        "resource"
      ],
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "OperationsDefinition": {
      "required": [
        "display",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "origin": {
          "enum": [
            "NotSpecified",
            "User",
            "System"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationOrigins"
          }
        },
        "display": {
          "description": "Display information of the operation.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "actionType": {
          "enum": [
            "NotSpecified",
            "Internal"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationActionType"
          }
        },
        "properties": {}
      },
      "description": "Properties of an Operation."
    },
    "OperationsContent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Operations content.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationsDefinition"
        }
      },
      "x-ms-azure-resource": true
    },
    "LocalizedOperationDisplayDefinition": {
      "required": [
        "default"
      ],
      "type": "object",
      "properties": {
        "default": {
          "description": "Display information of the operation.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "en": {
          "description": "Display information of the operation for en locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "cs": {
          "description": "Display information of the operation for cs locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "de": {
          "description": "Display information of the operation for de locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "es": {
          "description": "Display information of the operation for es locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "fr": {
          "description": "Display information of the operation for fr locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "hu": {
          "description": "Display information of the operation for hu locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "it": {
          "description": "Display information of the operation for it locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "ja": {
          "description": "Display information of the operation for ja locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "ko": {
          "description": "Display information of the operation for ko locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "nl": {
          "description": "Display information of the operation for nl locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "pl": {
          "description": "Display information of the operation for pl locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "ptBR": {
          "description": "Display information of the operation for pt-BR locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "ptPT": {
          "description": "Display information of the operation for pt-PT locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "ru": {
          "description": "Display information of the operation for ru locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "sv": {
          "description": "Display information of the operation for sv locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "zhHans": {
          "description": "Display information of the operation for zh-Hans locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        },
        "zhHant": {
          "description": "Display information of the operation for zh-Hant locale.",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsDisplayDefinition"
            }
          ]
        }
      }
    },
    "LocalizedOperationDefinition": {
      "required": [
        "display",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "origin": {
          "enum": [
            "NotSpecified",
            "User",
            "System"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationOrigins"
          }
        },
        "display": {
          "description": "Display information of the operation.",
          "allOf": [
            {
              "$ref": "#/definitions/LocalizedOperationDisplayDefinition"
            }
          ]
        },
        "actionType": {
          "enum": [
            "NotSpecified",
            "Internal"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationActionType"
          }
        },
        "properties": {}
      }
    },
    "OperationsContentProperties": {
      "type": "object",
      "properties": {
        "contents": {
          "type": "array",
          "description": "Operations content.",
          "x-ms-client-flatten": true,
          "items": {
            "$ref": "#/definitions/LocalizedOperationDefinition"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationsPutContent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/OperationsContentProperties"
            }
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "OperationsDefinitionArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationsDefinition"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "LightHouseAuthorization": {
      "required": [
        "principalId",
        "roleDefinitionId"
      ],
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string"
        },
        "roleDefinitionId": {
          "type": "string"
        }
      }
    },
    "ThirdPartyProviderAuthorization": {
      "type": "object",
      "properties": {
        "authorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LightHouseAuthorization"
          },
          "x-ms-identifiers": []
        },
        "managedByTenantId": {
          "type": "string"
        }
      }
    },
    "ProviderHubMetadata": {
      "type": "object",
      "properties": {
        "providerAuthorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "providerAuthentication": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderAuthentication"
            }
          ]
        },
        "thirdPartyProviderAuthorization": {
          "allOf": [
            {
              "$ref": "#/definitions/ThirdPartyProviderAuthorization"
            }
          ]
        },
        "directRpRoleDefinitionId": {
          "type": "string"
        },
        "regionalAsyncOperationResourceTypeName": {
          "type": "string"
        },
        "globalAsyncOperationResourceTypeName": {
          "type": "string"
        }
      }
    },
    "SubscriptionStateOverrideAction": {
      "required": [
        "action",
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "Registered",
            "Unregistered",
            "Warned",
            "Suspended",
            "Deleted",
            "WarnedToRegistered",
            "WarnedToSuspended",
            "WarnedToDeleted",
            "WarnedToUnregistered",
            "SuspendedToRegistered",
            "SuspendedToWarned",
            "SuspendedToDeleted",
            "SuspendedToUnregistered"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionTransitioningState",
            "modelAsString": true
          }
        },
        "action": {
          "enum": [
            "NotDefined",
            "DeleteAllResources",
            "SoftDeleteAllResources",
            "NoOp",
            "BillingCancellation",
            "UndoSoftDelete"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionNotificationOperation",
            "modelAsString": true
          }
        }
      }
    },
    "SubscriptionLifecycleNotificationSpecifications": {
      "type": "object",
      "properties": {
        "subscriptionStateOverrideActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionStateOverrideAction"
          },
          "x-ms-identifiers": []
        },
        "softDeleteTTL": {
          "format": "duration",
          "type": "string"
        }
      }
    },
    "TemplateDeploymentOptions": {
      "type": "object",
      "properties": {
        "preflightSupported": {
          "type": "boolean"
        },
        "preflightOptions": {
          "type": "array",
          "items": {
            "enum": [
              "None",
              "ContinueDeploymentOnFailure",
              "DefaultValidationOnly"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "PreflightOption",
              "modelAsString": true
            }
          }
        }
      }
    },
    "ResourceProviderManifestProperties": {
      "type": "object",
      "properties": {
        "providerAuthentication": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderAuthentication"
            }
          ]
        },
        "providerAuthorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderAuthorization"
          },
          "x-ms-identifiers": []
        },
        "namespace": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderService"
          },
          "x-ms-identifiers": []
        },
        "serviceName": {
          "type": "string"
        },
        "providerVersion": {
          "type": "string"
        },
        "providerType": {
          "enum": [
            "NotSpecified",
            "Internal",
            "External",
            "Hidden",
            "RegistrationFree",
            "LegacyRegistrationRequired",
            "TenantOnly",
            "AuthorizationFree"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProviderType",
            "modelAsString": true
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "requestHeaderOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/RequestHeaderOptions"
            }
          ]
        },
        "management": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderManagement"
            }
          ]
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderCapabilities"
          },
          "x-ms-identifiers": [
            "quotaId"
          ]
        },
        "crossTenantTokenValidation": {
          "enum": [
            "EnsureSecureValidation",
            "PassthroughInsecureToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CrossTenantTokenValidation",
            "modelAsString": true
          }
        },
        "metadata": {},
        "templateDeploymentOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/TemplateDeploymentOptions"
            }
          ]
        },
        "globalNotificationEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "enableTenantLinkedNotification": {
          "type": "boolean",
          "x-nullable": true
        },
        "linkedNotificationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FanoutLinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules"
        },
        "dstsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/DstsConfiguration"
            }
          ]
        },
        "notificationOptions": {
          "description": "Notification options.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "None",
            "EmitSpendingLimit"
          ],
          "x-ms-enum": {
            "name": "NotificationOptions",
            "modelAsString": true
          }
        },
        "resourceHydrationAccounts": {
          "type": "array",
          "description": "resource hydration accounts",
          "items": {
            "$ref": "#/definitions/ResourceHydrationAccount"
          },
          "x-ms-identifiers": []
        },
        "notificationSettings": {
          "type": "object",
          "description": "Notification settings.",
          "properties": {
            "subscriberSettings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubscriberSetting"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "managementGroupGlobalNotificationEndpoints": {
          "type": "array",
          "description": "Management groups global notification endpoints.",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "optionalFeatures": {
          "description": "Optional features.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "resourceGroupLockOptionDuringMove": {
          "type": "object",
          "description": "Resource group lock option during move.",
          "properties": {
            "blockActionVerb": {
              "type": "string",
              "description": "The action verb that will be blocked when the resource group is locked during move.",
              "enum": [
                "NotSpecified",
                "Read",
                "Write",
                "Action",
                "Delete",
                "Unrecognized"
              ],
              "x-ms-enum": {
                "name": "BlockActionVerb",
                "modelAsString": true
              }
            }
          }
        },
        "responseOptions": {
          "type": "object",
          "description": "Response options.",
          "properties": {
            "serviceClientOptionsType": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "DisableAutomaticDecompression"
              ],
              "x-ms-enum": {
                "name": "ServiceClientOptionsType",
                "modelAsString": true
              }
            }
          }
        },
        "legacyNamespace": {
          "description": "Legacy namespace.",
          "type": "string"
        },
        "legacyRegistrations": {
          "type": "array",
          "description": "Legacy registrations.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "customManifestVersion": {
          "description": "Custom manifest version.",
          "type": "string"
        }
      }
    },
    "AuthorizedApplication": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizedApplicationProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "ProviderRegistrationProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProviderManifestProperties"
        }
      ],
      "properties": {
        "providerHubMetadata": {
          "allOf": [
            {
              "$ref": "#/definitions/ProviderHubMetadata"
            }
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "subscriptionLifecycleNotificationSpecifications": {
          "allOf": [
            {
              "$ref": "#/definitions/SubscriptionLifecycleNotificationSpecifications"
            }
          ]
        },
        "privateResourceProviderConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/PrivateResourceProviderConfiguration"
            }
          ]
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration"
        }
      }
    },
    "ProviderRegistration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProviderRegistrationProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        },
        "kind": {
          "enum": [
            "Managed",
            "Hybrid",
            "Direct"
          ],
          "type": "string",
          "default": "Managed",
          "x-ms-enum": {
            "name": "ProviderRegistrationKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Managed",
                "description": "Resource Provider with all the resource types 'managed' by the ProviderHub service."
              },
              {
                "value": "Hybrid",
                "description": "Resource Provider with a mix of 'managed' and 'direct' resource types."
              },
              {
                "value": "Direct",
                "description": "Resource Provider with all the resource types 'managed' on by itself."
              }
            ]
          },
          "description": "Provider registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type."
        }
      },
      "x-ms-azure-resource": true
    },
    "AuthorizedApplicationProperties": {
      "type": "object",
      "properties": {
        "providerAuthorization": {
          "$ref": "#/definitions/ApplicationProviderAuthorization"
        },
        "dataAuthorizations": {
          "type": "array",
          "description": "The authorizations that determine the level of data access permissions on the specified resource types.",
          "items": {
            "$ref": "#/definitions/ApplicationDataAuthorization"
          },
          "x-ms-identifiers": [
            "role"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "ProviderRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderRegistration"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "AuthorizedApplicationArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedApplication"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "ResourceTypeExtension": {
      "type": "object",
      "properties": {
        "endpointUri": {
          "type": "string"
        },
        "extensionCategories": {
          "type": "array",
          "items": {
            "enum": [
              "NotSpecified",
              "ResourceCreationValidate",
              "ResourceCreationBegin",
              "ResourceCreationCompleted",
              "ResourceReadValidate",
              "ResourceReadBegin",
              "ResourcePatchValidate",
              "ResourcePatchCompleted",
              "ResourceDeletionValidate",
              "ResourceDeletionBegin",
              "ResourceDeletionCompleted",
              "ResourcePostAction",
              "SubscriptionLifecycleNotification",
              "ResourcePatchBegin",
              "ResourceMoveBegin",
              "ResourceMoveCompleted",
              "BestMatchOperationBegin",
              "SubscriptionLifecycleNotificationDeletion"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ExtensionCategory",
              "modelAsString": true
            }
          }
        },
        "timeout": {
          "format": "duration",
          "type": "string"
        }
      }
    },
    "ResourceTypeEndpoint": {
      "type": "object",
      "properties": {
        "kind": {
          "enum": [
            "Managed",
            "Direct"
          ],
          "type": "string",
          "default": "Managed",
          "x-ms-enum": {
            "name": "ResourceTypeEndpointKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Managed",
                "description": "Endpoint served by ProviderHub service"
              },
              {
                "value": "Direct",
                "description": "Endpoint served by the onboarded Resource Provider Service."
              }
            ]
          },
          "description": "Resource type endpoint kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type."
        },
        "enabled": {
          "type": "boolean"
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeExtension"
          },
          "x-ms-identifiers": [
            "endpointUri"
          ]
        },
        "timeout": {
          "format": "duration",
          "type": "string"
        },
        "endpointType": {
          "enum": [
            "NotSpecified",
            "Canary",
            "Production",
            "TestInProduction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointTypeResourceType",
            "modelAsString": true
          }
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration"
        },
        "skuLink": {
          "type": "string"
        },
        "endpointUri": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "description": "Api version."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of zones."
        },
        "dstsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/DstsConfiguration"
            }
          ]
        }
      }
    },
    "TokenAuthConfiguration": {
      "type": "object",
      "properties": {
        "authenticationScheme": {
          "enum": [
            "PoP",
            "Bearer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationScheme",
            "modelAsString": true
          }
        },
        "signedRequestScope": {
          "enum": [
            "ResourceUri",
            "Endpoint"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SignedRequestScope",
            "modelAsString": true
          }
        },
        "disableCertificateAuthenticationFallback": {
          "type": "boolean"
        }
      }
    },
    "ExtensionOptions": {
      "type": "object",
      "properties": {
        "request": {
          "type": "array",
          "items": {
            "enum": [
              "NotSpecified",
              "DoNotMergeExistingReadOnlyAndSecretProperties",
              "IncludeInternalMetadata"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ExtensionOptionType",
              "modelAsString": true
            }
          }
        },
        "response": {
          "type": "array",
          "items": {
            "enum": [
              "NotSpecified",
              "DoNotMergeExistingReadOnlyAndSecretProperties",
              "IncludeInternalMetadata"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ExtensionOptionType",
              "modelAsString": true
            }
          }
        }
      }
    },
    "ResourceTypeExtensionOptions": {
      "type": "object",
      "properties": {
        "resourceCreationBegin": {
          "allOf": [
            {
              "$ref": "#/definitions/ExtensionOptions"
            }
          ]
        }
      }
    },
    "SwaggerSpecification": {
      "type": "object",
      "properties": {
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "swaggerSpecFolderUri": {
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilitySpecifications": {
      "type": "object",
      "properties": {
        "enableDefaultValidation": {
          "type": "boolean"
        },
        "resourceTypesWithCustomValidation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceMovePolicy": {
      "type": "object",
      "properties": {
        "validationRequired": {
          "type": "boolean"
        },
        "crossResourceGroupMoveEnabled": {
          "type": "boolean"
        },
        "crossSubscriptionMoveEnabled": {
          "type": "boolean"
        }
      }
    },
    "ResourceConcurrencyControlOption": {
      "type": "object",
      "properties": {
        "policy": {
          "enum": [
            "NotSpecified",
            "SynchronizeBeginExtension"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Policy",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceGraphConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "apiVersion": {
          "type": "string"
        }
      }
    },
    "ResourceTypeRegistrationProperties": {
      "type": "object",
      "properties": {
        "routingType": {
          "enum": [
            "Default",
            "ProxyOnly",
            "HostBased",
            "Extension",
            "Tenant",
            "Fanout",
            "LocationBased",
            "Failover",
            "CascadeExtension"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoutingType",
            "modelAsString": true
          }
        },
        "additionalOptions": {
          "enum": [
            "ProtectedAsyncOperationPolling",
            "ProtectedAsyncOperationPollingAuditOnly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AdditionalOptionsResourceTypeRegistration",
            "modelAsString": true
          }
        },
        "crossTenantTokenValidation": {
          "enum": [
            "EnsureSecureValidation",
            "PassthroughInsecureToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CrossTenantTokenValidation",
            "modelAsString": true
          }
        },
        "regionality": {
          "enum": [
            "NotSpecified",
            "Global",
            "Regional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Regionality",
            "modelAsString": true
          }
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeEndpoint"
          },
          "x-ms-identifiers": []
        },
        "extensionOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceTypeExtensionOptions"
            }
          ]
        },
        "marketplaceType": {
          "enum": [
            "NotSpecified",
            "AddOn",
            "Bypass",
            "Store"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MarketplaceType"
          }
        },
        "swaggerSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwaggerSpecification"
          },
          "x-ms-identifiers": [
            "swaggerSpecFolderUri"
          ]
        },
        "allowedUnauthorizedActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizationActionMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationActionMapping"
          },
          "x-ms-identifiers": [
            "original"
          ]
        },
        "linkedAccessChecks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedAccessCheck"
          },
          "x-ms-identifiers": []
        },
        "defaultApiVersion": {
          "type": "string"
        },
        "loggingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoggingRule"
          },
          "x-ms-identifiers": []
        },
        "throttlingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featuresRule": {
          "allOf": [
            {
              "$ref": "#/definitions/FeaturesRule"
            }
          ]
        },
        "enableAsyncOperation": {
          "type": "boolean"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "enableThirdPartyS2S": {
          "type": "boolean"
        },
        "subscriptionLifecycleNotificationSpecifications": {
          "allOf": [
            {
              "$ref": "#/definitions/SubscriptionLifecycleNotificationSpecifications"
            }
          ]
        },
        "isPureProxy": {
          "type": "boolean"
        },
        "identityManagement": {
          "allOf": [
            {
              "$ref": "#/definitions/IdentityManagementProperties"
            }
          ]
        },
        "checkNameAvailabilitySpecifications": {
          "allOf": [
            {
              "$ref": "#/definitions/CheckNameAvailabilitySpecifications"
            }
          ]
        },
        "disallowedActionVerbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceTreeInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTreeInfo"
          },
          "x-ms-identifiers": []
        },
        "requestHeaderOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/RequestHeaderOptions"
            }
          ]
        },
        "subscriptionStateRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionStateRule"
          },
          "x-ms-identifiers": []
        },
        "templateDeploymentOptions": {
          "allOf": [
            {
              "$ref": "#/definitions/TemplateDeploymentOptions"
            }
          ]
        },
        "extendedLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedLocationOptions"
          },
          "x-ms-identifiers": []
        },
        "resourceMovePolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceMovePolicy"
            }
          ]
        },
        "resourceDeletionPolicy": {
          "enum": [
            "NotSpecified",
            "CascadeDeleteAll",
            "CascadeDeleteProxyOnlyChildren"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceDeletionPolicy",
            "modelAsString": true
          }
        },
        "resourceConcurrencyControlOptions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceConcurrencyControlOption"
          }
        },
        "resourceGraphConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceGraphConfiguration"
            }
          ]
        },
        "management": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderManagement"
            }
          ]
        },
        "openApiConfiguration": {
          "$ref": "#/definitions/OpenApiConfiguration"
        },
        "onBehalfOfTokens": {
          "$ref": "#/definitions/ResourceTypeOnBehalfOfToken"
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ResourceTypeManagedResourceGroupConfiguration"
        },
        "category": {
          "enum": [
            "None",
            "FreeForm",
            "Internal",
            "PureProxy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceTypeCategory",
            "modelAsString": true
          }
        },
        "resourceValidation": {
          "enum": [
            "NotSpecified",
            "ReservedWords",
            "ProfaneWords"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceValidation",
            "modelAsString": true
          }
        },
        "disallowedEndUserOperations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "skuLink": {
          "type": "string"
        },
        "quotaRule": {
          "$ref": "#/definitions/QuotaRule"
        },
        "linkedNotificationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedNotificationRule"
          },
          "x-ms-identifiers": []
        },
        "resourceProviderAuthorizationRules": {
          "$ref": "#/definitions/ResourceProviderAuthorizationRules"
        },
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration"
        },
        "privateEndpointConfiguration": {
          "$ref": "#/definitions/PrivateEndpointConfiguration"
        },
        "templateDeploymentPolicy": {
          "allOf": [
            {
              "$ref": "#/definitions/TemplateDeploymentPolicy"
            }
          ]
        },
        "allowEmptyRoleAssignments": {
          "type": "boolean"
        },
        "policyExecutionType": {
          "type": "string",
          "enum": [
            "NotSpecified",
            "ExecutePolicies",
            "BypassPolicies",
            "ExpectPartialPutRequests"
          ],
          "x-ms-enum": {
            "name": "PolicyExecutionType",
            "modelAsString": true
          }
        },
        "availabilityZoneRule": {
          "type": "object",
          "properties": {
            "availabilityZonePolicy": {
              "type": "string",
              "enum": [
                "NotSpecified",
                "SingleZoned",
                "MultiZoned"
              ],
              "x-ms-enum": {
                "name": "AvailabilityZonePolicy",
                "modelAsString": true
              }
            }
          }
        },
        "dstsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/DstsConfiguration"
            }
          ]
        },
        "asyncTimeoutRules": {
          "type": "array",
          "description": "Async timeout rules",
          "items": {
            "$ref": "#/definitions/AsyncTimeoutRule"
          },
          "x-ms-identifiers": []
        },
        "commonApiVersions": {
          "type": "array",
          "description": "Common API versions for the resource type.",
          "items": {
            "type": "string"
          }
        },
        "apiProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProfile"
          },
          "x-ms-identifiers": [
            "profileVersion",
            "apiVersion"
          ]
        },
        "linkedOperationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedOperationRule"
          },
          "x-ms-identifiers": [
            "linkedOperation",
            "linkedAction"
          ]
        },
        "legacyName": {
          "type": "string"
        },
        "legacyNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedTemplateDeploymentReferenceActions": {
          "type": "array",
          "description": "Allowed template deployment reference actions.",
          "items": {
            "type": "string"
          }
        },
        "legacyPolicy": {
          "type": "object",
          "properties": {
            "disallowedLegacyOperations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegacyOperation"
              },
              "x-ms-identifiers": []
            },
            "disallowedConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegacyDisallowedCondition"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "manifestLink": {
          "description": "Manifest link.",
          "type": "string"
        },
        "capacityRule": {
          "type": "object",
          "description": "Capacity rule.",
          "properties": {
            "capacityPolicy": {
              "type": "string",
              "description": "Capacity policy.",
              "enum": [
                "Default",
                "Restricted"
              ],
              "x-ms-enum": {
                "name": "CapacityPolicy",
                "modelAsString": true
              }
            },
            "skuAlias": {
              "description": "Sku alias",
              "type": "string"
            }
          }
        },
        "marketplaceOptions": {
          "type": "object",
          "description": "Marketplace options.",
          "properties": {
            "addOnPlanConversionAllowed": {
              "type": "boolean",
              "description": "Add-on plan conversion allowed."
            }
          }
        },
        "allowedResourceNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedResourceName"
          },
          "x-ms-identifiers": [
            "name",
            "getActionVerb"
          ]
        },
        "resourceCache": {
          "type": "object",
          "description": "Resource cache options.",
          "properties": {
            "enableResourceCache": {
              "type": "boolean",
              "description": "Enable resource cache."
            },
            "resourceCacheExpirationTimespan": {
              "type": "string",
              "description": "Resource cache expiration timespan."
            }
          }
        },
        "resourceQueryManagement": {
          "type": "object",
          "description": "Resource query management options.",
          "properties": {
            "filterOption": {
              "type": "string",
              "description": "Filter option.",
              "enum": [
                "NotSpecified",
                "EnableSubscriptionFilterOnTenant"
              ],
              "x-ms-enum": {
                "name": "FilterOption",
                "modelAsString": true
              }
            }
          }
        },
        "supportsTags": {
          "type": "boolean"
        },
        "resourceManagementOptions": {
          "type": "object",
          "description": "Resource management options.",
          "properties": {
            "batchProvisioningSupport": {
              "type": "object",
              "description": "Batch provisioning support.",
              "properties": {
                "supportedOperations": {
                  "type": "string",
                  "description": "Supported operations.",
                  "enum": [
                    "NotSpecified",
                    "Get",
                    "Delete"
                  ],
                  "x-ms-enum": {
                    "name": "SupportedOperations",
                    "modelAsString": true
                  }
                }
              }
            },
            "deleteDependencies": {
              "type": "array",
              "description": "Delete dependencies.",
              "items": {
                "$ref": "#/definitions/DeleteDependency"
              },
              "x-ms-identifiers": [
                "linkedType",
                "linkedProperty",
                "requiredFeatures"
              ]
            },
            "nestedProvisioningSupport": {
              "type": "object",
              "description": "Nested provisioning support.",
              "properties": {
                "minimumApiVersion": {
                  "type": "string",
                  "description": "Minimum API version."
                }
              }
            }
          }
        },
        "groupingTag": {
          "type": "string",
          "description": "Grouping tag."
        },
        "addResourceListTargetLocations": {
          "type": "boolean",
          "description": "Add resource list target locations?"
        },
        "resourceTypeCommonAttributeManagement": {
          "type": "object",
          "description": "Resource type common attribute management.",
          "properties": {
            "commonApiVersionsMergeMode": {
              "type": "string",
              "description": "Common api versions merge mode.",
              "enum": [
                "Merge",
                "Overwrite"
              ],
              "x-ms-enum": {
                "name": "CommonApiVersionsMergeMode",
                "modelAsString": true
              }
            }
          }
        },
        "routingRule": {
          "type": "object",
          "description": "Routing rule.",
          "properties": {
            "hostResourceType": {
              "description": "Hosted resource type.",
              "type": "string"
            }
          }
        },
        "frontdoorRequestMode": {
          "enum": [
            "NotSpecified",
            "UseManifest"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrontdoorRequestMode",
            "modelAsString": true
          }
        },
        "resourceSubType": {
          "enum": [
            "NotSpecified",
            "AsyncOperation"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceSubType",
            "modelAsString": true
          }
        },
        "asyncOperationResourceTypeName": {
          "type": "string"
        }
      }
    },
    "PrivateEndpointConfiguration": {
      "type": "object",
      "properties": {
        "minApiVersion": {
          "description": "The first api version that support private endpoint.",
          "type": "string"
        },
        "groupConnectivityInformation": {
          "type": "array",
          "description": "The list of group connectivity information.",
          "items": {
            "$ref": "#/definitions/GroupConnectivityInformation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "minApiVersion",
        "groupConnectivityInformation"
      ]
    },
    "GroupConnectivityInformation": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The group id.",
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "List of required members for the group id.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "List of required zone names for the group id.",
          "items": {
            "type": "string"
          }
        },
        "redirectMapId": {
          "description": "The redirect map id.",
          "type": "string"
        }
      },
      "required": [
        "groupId",
        "requiredMembers",
        "requiredZoneNames"
      ]
    },
    "QuotaRule": {
      "type": "object",
      "properties": {
        "quotaPolicy": {
          "$ref": "#/definitions/QuotaPolicy"
        },
        "locationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationQuotaRule"
          },
          "x-ms-identifiers": []
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocationQuotaRule": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/QuotaPolicy"
        },
        "quotaId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "LinkedNotificationRule": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionsOnFailedOperation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fastPathActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fastPathActionsOnFailedOperation": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "linkedNotificationTimeout": {
          "format": "duration",
          "type": "string"
        }
      }
    },
    "FanoutLinkedNotificationRule": {
      "type": "object",
      "properties": {
        "tokenAuthConfiguration": {
          "$ref": "#/definitions/TokenAuthConfiguration"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderEndpoint"
          },
          "x-ms-identifiers": []
        },
        "dstsConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/DstsConfiguration"
            }
          ]
        }
      }
    },
    "ResourceProviderAuthorizationRules": {
      "type": "object",
      "properties": {
        "asyncOperationPollingRules": {
          "$ref": "#/definitions/AsyncOperationPollingRules"
        }
      }
    },
    "AsyncOperationPollingRules": {
      "type": "object",
      "properties": {
        "authorizationActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalOptions": {
          "enum": [
            "ProtectedAsyncOperationPolling",
            "ProtectedAsyncOperationPollingAuditOnly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AdditionalOptionsAsyncOperation",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceTypeManagedResourceGroupConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "resourceGroupLocationOverride": {
          "type": "string"
        },
        "applicationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "denyAssignmentConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupDenyAssignmentConfiguration"
        }
      }
    },
    "ManagedResourceGroupDenyAssignmentConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "notActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceTypeOnBehalfOfToken": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "lifeTime": {
          "type": "string"
        }
      }
    },
    "ResourceTypeRegistration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceTypeRegistrationProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        },
        "kind": {
          "enum": [
            "Managed",
            "Hybrid",
            "Direct"
          ],
          "type": "string",
          "default": "Managed",
          "x-ms-enum": {
            "name": "ResourceTypeRegistrationKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Managed",
                "description": "Resource type served by the ProviderHub service."
              },
              {
                "value": "Hybrid",
                "description": "Resource type served by both the ProviderHub & the onboarded Resource Provider Services (i.e. The type has a mix of managed and direct endpoints)."
              },
              {
                "value": "Direct",
                "description": "Resource type served by the onboarded Resource Provider Service."
              }
            ]
          },
          "description": "Resource type registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type."
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceTypeRegistrationArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTypeRegistration"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "SkuCapability": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SkuZoneDetail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SkuLocationInfo": {
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuZoneDetail"
          },
          "x-ms-identifiers": []
        },
        "extendedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enum": [
            "NotSpecified",
            "EdgeZone",
            "ArcZone"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExtendedLocationType"
          }
        }
      }
    },
    "SkuCapacity": {
      "required": [
        "minimum"
      ],
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "type": "integer"
        },
        "scaleType": {
          "enum": [
            "None",
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuScaleType",
            "modelAsString": true
          }
        }
      }
    },
    "SkuCost": {
      "required": [
        "meterId"
      ],
      "type": "object",
      "properties": {
        "meterId": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "extendedUnit": {
          "type": "string"
        }
      }
    },
    "SkuSetting": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "x-ms-identifiers": [
            "location"
          ]
        },
        "requiredQuotaIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capacity": {
          "allOf": [
            {
              "$ref": "#/definitions/SkuCapacity"
            }
          ]
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCost"
          },
          "x-ms-identifiers": [
            "meterId"
          ]
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResourceTypeSku": {
      "required": [
        "skuSettings"
      ],
      "type": "object",
      "properties": {
        "skuSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuSetting"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "SkuResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceTypeSku"
            }
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SkuResourceArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuResource"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    },
    "OpenApiConfiguration": {
      "type": "object",
      "properties": {
        "validation": {
          "$ref": "#/definitions/OpenApiValidation"
        }
      }
    },
    "OpenApiValidation": {
      "type": "object",
      "properties": {
        "allowNoncompliantCollectionResponse": {
          "description": "Indicates whether a non compliance response is allowed for a LIST call",
          "type": "boolean"
        }
      }
    },
    "ResourceManagementEntity": {
      "required": [
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource id."
        },
        "homeTenantId": {
          "type": "string",
          "description": "The home tenant id."
        },
        "location": {
          "type": "string",
          "description": "The location."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The operation status."
        }
      }
    },
    "ResourceManagementAction": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "description": "resource management action content.",
          "x-ms-client-flatten": true,
          "items": {
            "$ref": "#/definitions/ResourceManagementEntity"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "ResourceHydrationAccount": {
      "type": "object",
      "description": "Resource hydration account.",
      "properties": {
        "maxChildResourceConsistencyJobLimit": {
          "format": "int64",
          "type": "integer"
        },
        "encryptedKey": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "SubscriberSetting": {
      "type": "object",
      "description": "Subscriber setting.",
      "properties": {
        "filterRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FilterRule": {
      "type": "object",
      "description": "Filter rule.",
      "properties": {
        "filterQuery": {
          "type": "string"
        },
        "endpointInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointInformation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "EndpointInformation": {
      "type": "object",
      "description": "Endpoint information.",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "Webhook",
            "Eventhub"
          ],
          "x-ms-enum": {
            "name": "NotificationEndpointType",
            "modelAsString": true
          }
        },
        "schemaVersion": {
          "type": "string"
        }
      }
    },
    "DstsConfiguration": {
      "type": "object",
      "description": "Dsts configuration.",
      "required": [
        "serviceName"
      ],
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "serviceDnsName": {
          "type": "string"
        }
      }
    },
    "AllowedResourceName": {
      "type": "object",
      "description": "Allowed resource name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "getActionVerb": {
          "type": "string",
          "description": "Get action verb."
        }
      }
    },
    "DeleteDependency": {
      "type": "object",
      "description": "Delete dependency.",
      "properties": {
        "requiredFeatures": {
          "type": "array",
          "description": "Required features.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "linkedProperty": {
          "type": "string",
          "description": "Linked property."
        },
        "linkedType": {
          "type": "string",
          "description": "Linked type."
        }
      }
    },
    "LegacyOperation": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Create",
        "Delete",
        "Waiting",
        "AzureAsyncOperationWaiting",
        "ResourceCacheWaiting",
        "Action",
        "Read",
        "EvaluateDeploymentOutput",
        "DeploymentCleanup"
      ],
      "x-ms-enum": {
        "name": "LegacyOperation",
        "modelAsString": true
      }
    },
    "LegacyDisallowedCondition": {
      "type": "object",
      "description": "Legacy disallowed condition",
      "properties": {
        "disallowedLegacyOperations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegacyOperation"
          },
          "x-ms-identifiers": []
        },
        "feature": {
          "type": "string",
          "description": "Feature string."
        }
      }
    },
    "ApiProfile": {
      "type": "object",
      "description": "Api profile",
      "properties": {
        "profileVersion": {
          "type": "string",
          "description": "Profile version."
        },
        "apiVersion": {
          "type": "string",
          "description": "Api version."
        }
      }
    },
    "AsyncTimeoutRule": {
      "type": "object",
      "description": "Async timeout rule.",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      }
    },
    "AdditionalAuthorization": {
      "type": "object",
      "description": "Resource provider additional authorization.",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "roleDefinitionId": {
          "type": "string"
        }
      }
    },
    "ThirdPartyExtension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of third party extension."
        }
      }
    },
    "ProviderMonitorSettingProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "ProviderMonitorSetting": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProviderMonitorSettingProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ProviderMonitorSettingArrayResponseWithContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderMonitorSetting"
          }
        },
        "nextLink": {
          "description": "The URL to get to the next set of results, if there are any.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SelectParameter": {
      "in": "query",
      "name": "$select",
      "description": "An OData $select clause. Used to select the properties to be returned in the GET response.",
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      }
    },
    "FilterParameter": {
      "in": "query",
      "name": "$filter",
      "description": "An OData $filter clause. Used to filter results that are returned in the GET response.",
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      }
    },
    "ProviderNamespaceParameter": {
      "in": "path",
      "name": "providerNamespace",
      "description": "The name of the resource provider hosted within ProviderHub.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NestedResourceTypeFirstParameter": {
      "in": "path",
      "name": "nestedResourceTypeFirst",
      "description": "The first child resource type.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NestedResourceTypeSecondParameter": {
      "in": "path",
      "name": "nestedResourceTypeSecond",
      "description": "The second child resource type.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "NestedResourceTypeThirdParameter": {
      "in": "path",
      "name": "nestedResourceTypeThird",
      "description": "The third child resource type.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetRolloutNameParameter": {
      "in": "path",
      "name": "rolloutName",
      "description": "The rollout name.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "EnvironmentParameter": {
      "in": "path",
      "name": "environment",
      "description": "The environment.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkuParameter": {
      "in": "path",
      "name": "sku",
      "description": "The SKU.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetNotificationRegistrationNameParameter": {
      "in": "path",
      "name": "notificationRegistrationName",
      "description": "The notification registration.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetAsyncOperationStatusIdParameter": {
      "in": "path",
      "name": "asyncOperationStatusId",
      "description": "The async operation status ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetApplicationIdParameter": {
      "in": "path",
      "name": "applicationId",
      "description": "The application ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetAccountNameParameter": {
      "in": "path",
      "name": "accountName",
      "description": "The available account name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GetResourceTypeParameter": {
      "in": "path",
      "name": "resourceType",
      "description": "The resource type.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceActionParameter": {
      "in": "path",
      "name": "resourceActionName",
      "description": "The resource action name.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "ApplicationIdParameter": {
      "in": "path",
      "name": "applicationId",
      "description": "The application ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The name of the resource group.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProviderMonitorSettingNameParameter": {
      "in": "path",
      "name": "providerMonitorSettingName",
      "description": "The name of the provider monitor setting.",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "x-ms-parameter-location": "method"
    }
  }
}
