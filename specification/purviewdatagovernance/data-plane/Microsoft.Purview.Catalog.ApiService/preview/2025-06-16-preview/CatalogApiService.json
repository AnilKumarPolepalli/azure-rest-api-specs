{
  "swagger": "2.0",
  "info": {
    "title": "PurviewDataCatalog",
    "version": "2025-06-16-preview",
    "description": "Creates a data plane client for Purview Data Catalog.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/purviewdatacatalog/api",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://purview.azure.net/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://purview.azure.net/.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "CriticalDataElements"
    },
    {
      "name": "CriticalDataColumns"
    },
    {
      "name": "DataAsset"
    }
  ],
  "paths": {
    "/criticalDataColumns": {
      "get": {
        "operationId": "GetCriticalDataColumns",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Searches and retrieves critical data columns based on domain, assetId, and other filters.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "domainId",
            "in": "query",
            "description": "The unique identifier of the critical data column.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "The unique identifier of the critical data column.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "top",
            "in": "query",
            "description": "Number of items to top.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to sort by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CriticalDataColumnsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetCriticalDataColumns_MaximumSet": {
            "$ref": "./examples/GetCriticalDataColumns_MaximumSet_Gen.json"
          }
        }
      },
      "post": {
        "operationId": "CreateCriticalDataColumn",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Creates a new critical data column in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource associated with the critical data element.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataColumn"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataColumn"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateCriticalDataColumn_MaximumSet": {
            "$ref": "./examples/CreateCriticalDataColumn_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataColumns/{criticalDataColumnId}": {
      "get": {
        "operationId": "GetCriticalDataColumnCriticalDataColumnId",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Searches and retrieves critical data columns based on Id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataColumnId",
            "in": "path",
            "description": "The unique identifier of the critical data column.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CriticalDataColumnsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetCriticalDataColumnCriticalDataColumnId_MaximumSet": {
            "$ref": "./examples/GetCriticalDataColumnCriticalDataColumnId_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataColumns/{criticalDataColumnId}/relationships": {
      "get": {
        "operationId": "GetCriticalDataColumnRelationships",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Retrieves relationships for a critical data column.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataColumnId",
            "in": "path",
            "description": "The unique identifier of the critical data column.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The body associated with the critical data column",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RelationshipWrappersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetCriticalDataColumnRelationships_MaximumSet": {
            "$ref": "./examples/GetCriticalDataColumnRelationships_MaximumSet_Gen.json"
          }
        }
      },
      "post": {
        "operationId": "CriticalDataColumnCriticalDataColumnIdRelationships",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Updates an existing critical data column in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataColumnId",
            "in": "path",
            "description": "The unique identifier of the critical data column.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The body associated with the critical data column",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "InputbodyProperties",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InputbodyProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RelationshipWrappersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CriticalDataColumnCriticalDataColumnIdRelationships_MaximumSet": {
            "$ref": "./examples/CriticalDataColumnCriticalDataColumnIdRelationships_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DeleteCriticalDataColumn",
        "tags": [
          "CriticalDataColumns"
        ],
        "description": "Deletes relationships for a critical data column.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "query",
            "description": "The unique identifier of the critical data column.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The body associated with the critical data column",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "The unique identifier of the critical data column.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "criticalDataColumnId",
            "in": "path",
            "description": "The unique identifier of the critical data column.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteCriticalDataColumn_MaximumSet": {
            "$ref": "./examples/DeleteCriticalDataColumn_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataElements": {
      "get": {
        "operationId": "GetCriticalDataElements",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Searches and retrieves critical data elements based on domain, keyword, and other filters.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "domainId",
            "in": "query",
            "description": "Whether to return minimal information for referred Domains.",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword.",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "top",
            "in": "query",
            "description": "Number of items to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to sort by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CriticalDataElementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "post": {
        "operationId": "PostCriticalDataElement",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Creates a new critical data element in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The resource associated with the critical data element.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "PostCriticalDataElement_MaximumSet": {
            "$ref": "./examples/PostCriticalDataElement_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataElements/{criticalDataElementId}": {
      "get": {
        "operationId": "GetCriticalDataElementCriticalDataElementId",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Searches and retrieves critical data elements based on Id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The criticalDataElementId of data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetCriticalDataElementCriticalDataElementId_MaximumSet": {
            "$ref": "./examples/GetCriticalDataElementCriticalDataElementId_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "ReplaceCriticalDataElement",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Updates an existing critical data element in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The body associated with the critical data element output.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ReplaceCriticalDataElement_MaximumSet": {
            "$ref": "./examples/ReplaceCriticalDataElement_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DeleteCriticalDataElement",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Deletes an existing critical data element in the catalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteCriticalDataElement_MaximumSet": {
            "$ref": "./examples/DeleteCriticalDataElement_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataElements/{criticalDataElementId}/relationships": {
      "get": {
        "operationId": "GetsCriticalDataElement",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Retrieves relationships for a critical data element.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The body associated with the critical data element output.",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetsCriticalDataElement_MaximumSet": {
            "$ref": "./examples/GetsCriticalDataElement_MaximumSet_Gen.json"
          }
        }
      },
      "post": {
        "operationId": "CriticalDataElementCriticalDataElementIdRelationships",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Updates relationships for a critical data element.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The body associated with the critical data element output.",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "CatalogModelCriticalDataElementRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InputProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CriticalDataElementCriticalDataElementIdRelationships_MaximumSet": {
            "$ref": "./examples/CriticalDataElementCriticalDataElementIdRelationships_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DeletesCriticalDataElement",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Deletes relationships for a critical data element.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "criticalDataElementId",
            "in": "path",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "EntityCategory",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "The unique identifier of the critical data element.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DeletesCriticalDataElement_MaximumSet": {
            "$ref": "./examples/DeletesCriticalDataElement_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataElements/facets": {
      "post": {
        "operationId": "CriticalDataElementFacets",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Retrieves facets for critical data elements.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CriticalDataElementFacetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FacetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CriticalDataElementFacets_MaximumSet": {
            "$ref": "./examples/CriticalDataElementFacets_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/criticalDataElements/query": {
      "post": {
        "operationId": "CriticalDataElementQuery",
        "tags": [
          "CriticalDataElements"
        ],
        "description": "Queries critical data elements based on various criteria.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "duplicatecheck",
            "in": "query",
            "description": "The number of duplicate checks to perform.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CriticalDataElementQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelCriticalDataElement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CriticalDataElementQuery_MaximumSet": {
            "$ref": "./examples/CriticalDataElementQuery_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/dataAssets": {
      "get": {
        "operationId": "GetDataAssets",
        "tags": [
          "DataAsset"
        ],
        "description": "Retrieves a list of data assets.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Field to sort by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of items to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "top",
            "in": "query",
            "description": "Number of items to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DataAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "post": {
        "operationId": "PostDataAsset",
        "tags": [
          "DataAsset"
        ],
        "description": "Creates a new data asset.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogModelDataAsset"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CatalogModelDataAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "PostDataAsset_MaximumSet": {
            "$ref": "./examples/PostDataAsset_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/dataAssets/{dataAssetId}": {
      "get": {
        "operationId": "GetDataAssetDataAssetId",
        "tags": [
          "DataAsset"
        ],
        "description": "Retrieves a data asset by its unique identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelDataAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetDataAssetDataAssetId_MaximumSet": {
            "$ref": "./examples/GetDataAssetDataAssetId_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "ReplaceDataAsset",
        "tags": [
          "DataAsset"
        ],
        "description": "Updates a data asset by its unique identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "CatalogModelDataAsset.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CatalogModelDataAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CatalogModelDataAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ReplaceDataAsset_MaximumSet": {
            "$ref": "./examples/ReplaceDataAsset_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DeleteDataAsset",
        "tags": [
          "DataAsset"
        ],
        "description": "Deletes a data asset by its unique identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteDataAsset_MaximumSet": {
            "$ref": "./examples/DeleteDataAsset_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/dataAssets/{dataAssetId}/relationships": {
      "get": {
        "operationId": "GetDataAssetRelationships",
        "tags": [
          "DataAsset"
        ],
        "description": "Retrieves relationships for a data asset.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The type of entity to retrieve relationships for.",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RelationshipWrappersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetDataAssetRelationships_MaximumSet": {
            "$ref": "./examples/GetDataAssetRelationships_MaximumSet_Gen.json"
          }
        }
      },
      "post": {
        "operationId": "CreateDataAssetRelationships",
        "tags": [
          "DataAsset"
        ],
        "description": "Creates relationships for a data asset.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The type of entity to retrieve relationships for.",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The properties of the relationship to create.",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/InputbodyProperties"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RelationshipWrappersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateDataAssetRelationships_MaximumSet": {
            "$ref": "./examples/CreateDataAssetRelationships_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DeleteDataAssetRelationships",
        "tags": [
          "DataAsset"
        ],
        "description": "Deletes relationships for a data asset.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "dataAssetId",
            "in": "path",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The type of entity to retrieve relationships for.",
            "required": true,
            "type": "string",
            "enum": [
              "DOMAIN",
              "DATAPRODUCT",
              "TERM",
              "DATAASSET",
              "OBJECTIVE",
              "KEYRESULT",
              "CRITICALDATAELEMENT",
              "CRITICALDATACOLUMN",
              "CUSTOMMETADATA",
              "ATTRIBUTE",
              "ATTRIBUTEINSTANCE",
              "WORKFLOW",
              "CATALOGSNAPSHOT",
              "WORKFLOWRUN"
            ],
            "x-ms-enum": {
              "name": "EntityCategory",
              "modelAsString": true,
              "values": [
                {
                  "name": "Domain",
                  "value": "DOMAIN",
                  "description": "The DOMAIN associated with the critical data element."
                },
                {
                  "name": "DataProduct",
                  "value": "DATAPRODUCT",
                  "description": "The DATAPRODUCT associated with the critical data element."
                },
                {
                  "name": "Term",
                  "value": "TERM",
                  "description": "The TERM associated with the critical data element."
                },
                {
                  "name": "DataAsset",
                  "value": "DATAASSET",
                  "description": "The DATAASSET associated with the critical data element."
                },
                {
                  "name": "Objective",
                  "value": "OBJECTIVE",
                  "description": "The OBJECTIVE associated with the critical data element."
                },
                {
                  "name": "KeyResult",
                  "value": "KEYRESULT",
                  "description": "The KEYRESULT associated with the critical data element."
                },
                {
                  "name": "CriticalDataElement",
                  "value": "CRITICALDATAELEMENT",
                  "description": "The CRITICALDATAELEMENT associated with the critical data element."
                },
                {
                  "name": "CriticalDataColumn",
                  "value": "CRITICALDATACOLUMN",
                  "description": "The CRITICALDATACOLUMN associated with the critical data element."
                },
                {
                  "name": "CustomMetadata",
                  "value": "CUSTOMMETADATA",
                  "description": "The CUSTOMMETADATA associated with the critical data element."
                },
                {
                  "name": "Attribute",
                  "value": "ATTRIBUTE",
                  "description": "The ATTRIBUTE associated with the critical data element."
                },
                {
                  "name": "AttributeInstance",
                  "value": "ATTRIBUTEINSTANCE",
                  "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
                },
                {
                  "name": "Workflow",
                  "value": "WORKFLOW",
                  "description": "The WORKFLOW associated with the critical data element."
                },
                {
                  "name": "CatalogSnapshot",
                  "value": "CATALOGSNAPSHOT",
                  "description": "The CATALOGSNAPSHOT associated with the critical data element."
                },
                {
                  "name": "WorkflowRun",
                  "value": "WORKFLOWRUN",
                  "description": "The WORKFLOWRUN associated with the critical data element."
                }
              ]
            }
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "The unique identifier of the critical data asset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteDataAssetRelationships_MaximumSet": {
            "$ref": "./examples/DeleteDataAssetRelationships_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/dataAssets/query": {
      "post": {
        "operationId": "PostDataAssetQuery",
        "tags": [
          "DataAsset"
        ],
        "description": "Creates a new data asset with fileted query inputs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataAssetDataAssetQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DataAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "PostDataAssetQuery_MaximumSet": {
            "$ref": "./examples/PostDataAssetQuery_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "CatalogApiServiceOrderBy": {
      "type": "object",
      "description": "CatalogApiServiceOrderBy.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field to order by."
        },
        "direction": {
          "type": "string",
          "description": "The direction of the order."
        }
      }
    },
    "CatalogModelContactsValueInner": {
      "type": "object",
      "description": "CatalogModelContactsValueInner",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The unique identifier of the contact."
        },
        "description": {
          "type": "string",
          "description": "The description of the contact."
        }
      }
    },
    "CatalogModelCriticalDataColumn": {
      "type": "object",
      "description": "CatalogModelCriticalDataColumn.",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The third additional property."
        },
        "name": {
          "type": "string",
          "description": "The name of the critical data column."
        },
        "systemData": {
          "$ref": "#/definitions/CatalogModelSystemDataWithExpired",
          "description": "The name of the systemData."
        },
        "domain": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The name of the domain."
        },
        "assetId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The name of the asset."
        },
        "description": {
          "type": "string",
          "description": "The description of the critical data column."
        },
        "classifications": {
          "type": "array",
          "description": "The classifications of the critical data column.",
          "items": {
            "type": "string"
          }
        },
        "dataType": {
          "type": "string",
          "description": "The data type of the critical data column."
        },
        "assetName": {
          "type": "string",
          "description": "The name of the asset."
        }
      }
    },
    "CatalogModelCriticalDataElement": {
      "type": "object",
      "description": "CatalogModelCriticalDataElement represents a critical data element in the catalog.",
      "properties": {
        "status": {
          "$ref": "#/definitions/CatalogModelStatus",
          "description": "The unique identifier of the critical data element."
        },
        "dataType": {
          "$ref": "#/definitions/CatalogModelCriticalDataElementDataTypeEnum",
          "description": "The status of the critical data element."
        },
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The unique identifier of the critical data element."
        },
        "name": {
          "type": "string",
          "description": "The name of the critical data element."
        },
        "systemData": {
          "$ref": "#/definitions/CatalogModelSystemDataWithExpired",
          "description": "The system data of the critical data element."
        },
        "domain": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The unique identifier of the critical data element."
        },
        "description": {
          "type": "string",
          "description": "The description of the critical data element."
        },
        "contacts": {
          "type": "object",
          "description": "The contacts associated with the critical data element.",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/CatalogModelContactsValueInner"
            },
            "type": "array"
          }
        },
        "managedAttributes": {
          "type": "array",
          "description": "The tags associated with the critical data element.",
          "items": {
            "$ref": "#/definitions/CatalogModelManagedAttribute"
          }
        }
      }
    },
    "CatalogModelCriticalDataElementDataTypeEnum": {
      "type": "string",
      "description": "CatalogModelCriticalDataElementDataTypeEnum",
      "enum": [
        "TEXT",
        "NUMBER",
        "DATETIME",
        "BOOLEAN"
      ],
      "x-ms-enum": {
        "name": "CatalogModelCriticalDataElementDataTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Text",
            "value": "TEXT",
            "description": "The status is Text."
          },
          {
            "name": "Number",
            "value": "NUMBER",
            "description": "The status is Number."
          },
          {
            "name": "DateTime",
            "value": "DATETIME",
            "description": "The status is DateTime."
          },
          {
            "name": "Boolean",
            "value": "BOOLEAN",
            "description": "The status is Boolean."
          }
        ]
      }
    },
    "CatalogModelDataAsset": {
      "type": "object",
      "description": "CatalogModelDataAsset.",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the asset."
        },
        "name": {
          "type": "string",
          "description": "Name of the asset."
        },
        "systemData": {
          "$ref": "#/definitions/CatalogModelSystemDataWithExpired",
          "description": "System data associated with the asset."
        },
        "description": {
          "type": "string",
          "description": "Description of the asset."
        },
        "domain": {
          "type": "string",
          "description": "Domain of the asset."
        },
        "source": {
          "$ref": "#/definitions/CatalogModelDataAssetSource",
          "description": "Source of the asset."
        },
        "contacts": {
          "type": "object",
          "description": "Contacts associated with the asset.",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/CatalogModelContactsValueInner"
            },
            "type": "array"
          }
        },
        "classifications": {
          "type": "array",
          "description": "Classifications associated with the asset.",
          "items": {
            "type": "string"
          }
        },
        "sensitivityLabel": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the entity."
        },
        "type": {
          "type": "string",
          "description": "Type of the asset."
        },
        "schema": {
          "type": "array",
          "description": "Schema of the asset.",
          "items": {
            "$ref": "#/definitions/CatalogModelDataAssetSchema"
          }
        },
        "lineage": {
          "type": "array",
          "description": "Lineage information associated with the asset.",
          "items": {
            "type": "string"
          }
        },
        "dataQualityScore": {
          "type": "number",
          "format": "double",
          "description": "Data quality score of the asset."
        },
        "openInUrl": {
          "type": "string",
          "description": "URL to open the asset in the catalog."
        },
        "typeProperties": {
          "type": "array",
          "description": "Type properties of the asset.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CatalogModelDataAssetSchema": {
      "type": "object",
      "description": "Schema of the asset.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the asset."
        },
        "description": {
          "type": "string",
          "description": "Description of the asset."
        },
        "classifications": {
          "type": "array",
          "description": "Classifications of the asset.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the asset."
        }
      }
    },
    "CatalogModelDataAssetSource": {
      "type": "object",
      "description": "CatalogModelDataAssetSource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the asset."
        },
        "assetId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the entity."
        },
        "assetType": {
          "type": "string",
          "description": "Type of the asset."
        },
        "assetAttributes": {
          "type": "array",
          "description": ".Type properties of the asset.",
          "items": {
            "type": "string"
          }
        },
        "fqn": {
          "type": "string",
          "description": "Fully qualified name."
        },
        "accountName": {
          "type": "string",
          "description": "Name of the account."
        },
        "lastRefreshedAt": {
          "type": "string",
          "format": "date-time",
          "description": "FIXME: (utcDateTime) Please double check that this is the correct type for your scenario"
        },
        "lastRefreshedBy": {
          "type": "string",
          "description": "Name of the user who last refreshed the asset."
        }
      }
    },
    "CatalogModelManagedAttribute": {
      "type": "object",
      "description": "CatalogModelManagedAttribute",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the managed attribute."
        }
      }
    },
    "CatalogModelStatus": {
      "type": "string",
      "description": "CatalogModelStatus",
      "enum": [
        "DRAFT",
        "PUBLISHED",
        "EXPIRED"
      ],
      "x-ms-enum": {
        "name": "CatalogModelStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Draft",
            "value": "DRAFT",
            "description": "The status is Draft."
          },
          {
            "name": "Published",
            "value": "PUBLISHED",
            "description": "The status is published."
          },
          {
            "name": "Expired",
            "value": "EXPIRED",
            "description": "The status is Expired."
          }
        ]
      }
    },
    "CatalogModelSystemDataWithExpired": {
      "type": "object",
      "description": "CatalogModelSystemDataWithExpired",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The created time of the record."
        },
        "createdBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The user who created the record."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The user who Last modified the record."
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The user who last modified the record."
        },
        "expiredAt": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time of the record."
        },
        "expiredBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The user who expired the record."
        }
      }
    },
    "CriticalDataColumnsResponse": {
      "type": "object",
      "description": "Response containing a list of critical data columns.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of critical data columns.",
          "items": {
            "$ref": "#/definitions/CatalogModelCriticalDataColumn"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "CriticalDataElementFacetRequest": {
      "type": "object",
      "description": "CriticalDataElementFacetRequest.",
      "properties": {
        "ids": {
          "type": "array",
          "description": "To filter by Ids.",
          "items": {
            "type": "string"
          }
        },
        "domainIds": {
          "type": "array",
          "description": "To filter by domain Ids.",
          "items": {
            "type": "string"
          }
        },
        "nameKeyword": {
          "type": "string",
          "description": "To filter by name keyword."
        },
        "owners": {
          "type": "array",
          "description": "To filter by owners.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/SharedEntityStatus",
          "description": "To filter by status."
        },
        "multiStatus": {
          "type": "array",
          "description": "To filter by multiple status.",
          "items": {
            "$ref": "#/definitions/SharedEntityStatus"
          }
        },
        "facets": {
          "type": "array",
          "description": "To filter by multiple facets.",
          "items": {
            "$ref": "#/definitions/ModelsFacetRequestObject"
          }
        }
      }
    },
    "CriticalDataElementQueryRequest": {
      "type": "object",
      "description": "CriticalDataElementQueryRequest.",
      "properties": {
        "skip": {
          "type": "integer",
          "format": "int32",
          "description": "To Skip how many records.",
          "default": 0
        },
        "top": {
          "type": "integer",
          "format": "int32",
          "description": "To return how many records."
        },
        "orderby": {
          "type": "array",
          "description": "To order the records.",
          "items": {
            "$ref": "#/definitions/CatalogApiServiceOrderBy"
          }
        },
        "ids": {
          "type": "array",
          "description": "To filter by Ids.",
          "items": {
            "type": "string"
          }
        },
        "domainIds": {
          "type": "array",
          "description": "To filter by domain Ids.",
          "items": {
            "type": "string"
          }
        },
        "nameKeyword": {
          "type": "string",
          "description": "To filter by name keyword."
        },
        "owners": {
          "type": "array",
          "description": "To filter by owners.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/SharedEntityStatus",
          "description": "To filter by status."
        },
        "multiStatus": {
          "type": "array",
          "description": "To filter by multiple status.",
          "items": {
            "$ref": "#/definitions/SharedEntityStatus"
          }
        },
        "managedAttributes": {
          "type": "array",
          "description": "To filter by managed attributes.",
          "items": {
            "$ref": "#/definitions/SharedSearchManageAttributeSearchFilter"
          }
        }
      }
    },
    "CriticalDataElementsResponse": {
      "type": "object",
      "description": "Response containing a list of critical data elements.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of critical data elements.",
          "items": {
            "$ref": "#/definitions/CatalogModelCriticalDataElement"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "DataAssetDataAssetQueryRequest": {
      "type": "object",
      "description": "DataAssetDataAssetQueryRequest.",
      "properties": {
        "skip": {
          "type": "integer",
          "format": "int32",
          "description": "To Skip how many records.",
          "default": 0
        },
        "top": {
          "type": "integer",
          "format": "int32",
          "description": "To return how many records."
        },
        "orderby": {
          "type": "array",
          "description": "To order the records.",
          "items": {
            "$ref": "#/definitions/CatalogApiServiceOrderBy"
          }
        },
        "ids": {
          "type": "array",
          "description": "To filter by Ids.",
          "items": {
            "type": "string"
          }
        },
        "domainIds": {
          "type": "array",
          "description": "To filter by domain Ids.",
          "items": {
            "type": "string"
          }
        },
        "nameKeyword": {
          "type": "string",
          "description": "To filter by name keyword."
        },
        "owners": {
          "type": "array",
          "description": "To filter by owners.",
          "items": {
            "type": "string"
          }
        },
        "dataMapAssetIds": {
          "type": "array",
          "description": "To filter by data map asset Ids.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataAssetsResponse": {
      "type": "object",
      "description": "Response containing a list of data assets.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of data assets.",
          "items": {
            "$ref": "#/definitions/CatalogModelDataAsset"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "EntityCategory": {
      "type": "string",
      "description": "EntityCategory",
      "enum": [
        "DOMAIN",
        "DATAPRODUCT",
        "TERM",
        "DATAASSET",
        "OBJECTIVE",
        "KEYRESULT",
        "CRITICALDATAELEMENT",
        "CRITICALDATACOLUMN",
        "CUSTOMMETADATA",
        "ATTRIBUTE",
        "ATTRIBUTEINSTANCE",
        "WORKFLOW",
        "CATALOGSNAPSHOT",
        "WORKFLOWRUN"
      ],
      "x-ms-enum": {
        "name": "EntityCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Domain",
            "value": "DOMAIN",
            "description": "The DOMAIN associated with the critical data element."
          },
          {
            "name": "DataProduct",
            "value": "DATAPRODUCT",
            "description": "The DATAPRODUCT associated with the critical data element."
          },
          {
            "name": "Term",
            "value": "TERM",
            "description": "The TERM associated with the critical data element."
          },
          {
            "name": "DataAsset",
            "value": "DATAASSET",
            "description": "The DATAASSET associated with the critical data element."
          },
          {
            "name": "Objective",
            "value": "OBJECTIVE",
            "description": "The OBJECTIVE associated with the critical data element."
          },
          {
            "name": "KeyResult",
            "value": "KEYRESULT",
            "description": "The KEYRESULT associated with the critical data element."
          },
          {
            "name": "CriticalDataElement",
            "value": "CRITICALDATAELEMENT",
            "description": "The CRITICALDATAELEMENT associated with the critical data element."
          },
          {
            "name": "CriticalDataColumn",
            "value": "CRITICALDATACOLUMN",
            "description": "The CRITICALDATACOLUMN associated with the critical data element."
          },
          {
            "name": "CustomMetadata",
            "value": "CUSTOMMETADATA",
            "description": "The CUSTOMMETADATA associated with the critical data element."
          },
          {
            "name": "Attribute",
            "value": "ATTRIBUTE",
            "description": "The ATTRIBUTE associated with the critical data element."
          },
          {
            "name": "AttributeInstance",
            "value": "ATTRIBUTEINSTANCE",
            "description": "The ATTRIBUTEINSTANCE associated with the critical data element."
          },
          {
            "name": "Workflow",
            "value": "WORKFLOW",
            "description": "The WORKFLOW associated with the critical data element."
          },
          {
            "name": "CatalogSnapshot",
            "value": "CATALOGSNAPSHOT",
            "description": "The CATALOGSNAPSHOT associated with the critical data element."
          },
          {
            "name": "WorkflowRun",
            "value": "WORKFLOWRUN",
            "description": "The WORKFLOWRUN associated with the critical data element."
          }
        ]
      }
    },
    "FacetValue": {
      "type": "object",
      "description": "FacetValue.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the facet."
        },
        "count": {
          "type": "string",
          "description": "The count of items in the facet."
        }
      },
      "required": [
        "value",
        "count"
      ]
    },
    "FacetsResponse": {
      "type": "object",
      "description": "FacetsResponse.",
      "properties": {
        "facets": {
          "type": "object",
          "description": "The list of facets.",
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/FacetValue"
            },
            "type": "array"
          }
        }
      },
      "required": [
        "facets"
      ]
    },
    "InputProperties": {
      "type": "object",
      "description": "InputProperties.",
      "properties": {
        "prop1": {
          "type": "array",
          "description": "The first additional property.",
          "items": {
            "type": "string"
          }
        },
        "prop2": {
          "type": "array",
          "description": "The second additional property.",
          "items": {
            "type": "string"
          }
        },
        "prop3": {
          "type": "array",
          "description": "The third additional property.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InputbodyProperties": {
      "type": "object",
      "description": "InputbodyProperties.",
      "properties": {
        "systemData": {
          "type": "array",
          "description": "systemData.",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "description."
        },
        "relationshipType": {
          "type": "string",
          "description": "description."
        },
        "assetId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the asset."
        }
      }
    },
    "ModelsFacetRequestObject": {
      "type": "object",
      "description": "ModelsFacetRequestObject.",
      "properties": {
        "name": {
          "type": "string",
          "description": "name"
        }
      }
    },
    "RelationshipWrapper": {
      "type": "object",
      "description": "RelationshipWrapper.",
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "systemData."
        },
        "description": {
          "type": "string",
          "description": "description."
        },
        "relationshipType": {
          "type": "string",
          "description": "relationshipType."
        },
        "entityId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the entity."
        }
      }
    },
    "RelationshipWrappersResponse": {
      "type": "object",
      "description": "Response containing a list of relationship wrappers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of relationships.",
          "items": {
            "$ref": "#/definitions/RelationshipWrapper"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "SharedEntityStatus": {
      "type": "string",
      "description": "SharedEntityStatus",
      "enum": [
        "DRAFT",
        "PUBLISHED",
        "EXPIRED"
      ],
      "x-ms-enum": {
        "name": "SharedEntityStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Draft",
            "value": "DRAFT",
            "description": "The status is Draft."
          },
          {
            "name": "Published",
            "value": "PUBLISHED",
            "description": "The status is published."
          },
          {
            "name": "Expired",
            "value": "EXPIRED",
            "description": "The status is Expired."
          }
        ]
      }
    },
    "SharedSearchManageAttributeSearchFilter": {
      "type": "object",
      "description": "SharedSearchManageAttributeSearchFilter.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field to filter by."
        },
        "operator": {
          "type": "string",
          "description": "The operator to use for the filter."
        },
        "value": {
          "type": "string",
          "description": "The value to filter by."
        },
        "type": {
          "type": "string",
          "description": "The type of the value."
        }
      }
    },
    "SystemData": {
      "type": "object",
      "description": "SystemData.",
      "properties": {
        "lastModifiedAt": {
          "type": "string",
          "description": "lastModifiedAt."
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the asset."
        },
        "createdAt": {
          "type": "string",
          "description": "createdAt."
        },
        "createdBy": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Unique identifier of the asset."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
