emit:
  - "@azure-tools/typespec-autorest"

options:
  "@azure-tools/typespec-autorest":
    azure-resource-provider-folder: "data-plane"
    emitter-output-dir: "{project-root}/.."
    examples-dir: "{project-root}/examples"
    output-file: "{azure-resource-provider-folder}/{service-name}/{version-status}/{version}/CatalogApiService.json"
  "@azure-tools/typespec-ts":
    package-dir: "purview-rest"
    package-details:
      name: "@azure-rest/purview"
    flavor: azure
  "@azure-tools/typespec-go":
    generate-fakes: true
    inject-spans: true
    service-dir: "sdk/purview"
    package-dir: "az-purview"
  "@azure-tools/typespec-python":
    package-dir: "azure-purview"
    flavor: azure
  "@azure-tools/typespec-csharp":
    package-dir: "Azure.Purview"
    namespace: "Azure.Purview"
    clear-output-folder: true
    flavor: azure
  "@azure-tools/typespec-java":
    package-dir: "azure-purview"
    namespace: "Azure.Purview"
    clear-output-folder: true
    flavor: azure
linter:
  extends:
    - "@azure-tools/typespec-azure-rulesets/data-plane"
parameters:
  service-dir:
    default: sdk/purview
    # Uncomment this line and add "@azure-tools/typespec-python" to your package.json to generate Python code
  # "@azure-tools/typespec-python":
  #   "basic-setup-py": true
  #   "package-version":
  #   "package-name":
  #   "output-path":
  # Uncomment this line and add "@azure-tools/typespec-java" to your package.json to generate Java code
  # "@azure-tools/typespec-java": true
  # Uncomment this line and add "@azure-tools/typespec-csharp" to your package.json to generate C# code
  # "@azure-tools/typespec-csharp": true
  # Uncomment this line and add "@azure-tools/typespec-ts" to your package.json to generate Typescript code
  # "@azure-tools/typespec-ts": true
