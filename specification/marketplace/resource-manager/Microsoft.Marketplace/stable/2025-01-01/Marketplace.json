{
  "swagger": "2.0",
  "info": {
    "title": "Marketplace RP Service",
    "version": "2025-01-01",
    "description": "REST APIs for Private Marketplace",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PrivateStores"
    },
    {
      "name": "RequestApprovalResources"
    },
    {
      "name": "AdminRequestApprovalsResources"
    },
    {
      "name": "Collections"
    },
    {
      "name": "Offers"
    }
  ],
  "paths": {
    "/providers/Microsoft.Marketplace/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetOperations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores": {
      "get": {
        "operationId": "PrivateStore_List",
        "tags": [
          "PrivateStores"
        ],
        "description": "Gets the list of available private stores.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "use-cache",
            "in": "query",
            "description": "Determines if to use cache or DB for serving this request",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateStoreList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStores": {
            "$ref": "./examples/GetPrivateStores.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}": {
      "get": {
        "operationId": "PrivateStore_Get",
        "tags": [
          "PrivateStores"
        ],
        "description": "Get information about the private store",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateStore"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStore": {
            "$ref": "./examples/GetPrivateStore.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateStore_CreateOrUpdate",
        "tags": [
          "PrivateStores"
        ],
        "description": "Changes private store properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateStore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateStores_update": {
            "$ref": "./examples/PrivateStores_update.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateStore_Delete",
        "tags": [
          "PrivateStores"
        ],
        "description": "Deletes the private store. All that is not saved will be lost.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletePrivateStores": {
            "$ref": "./examples/DeletePrivateStore.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/{offerId}/acknowledgeNotification": {
      "post": {
        "operationId": "PrivateStore_AcknowledgeOfferNotification",
        "tags": [
          "PrivateStores"
        ],
        "description": "Acknowledge notification for offer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AcknowledgeOfferNotificationProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AcknowledgeNotification": {
            "$ref": "./examples/AcknowledgeNotification.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals": {
      "get": {
        "operationId": "PrivateStore_AdminRequestApprovalsList",
        "tags": [
          "AdminRequestApprovalsResources"
        ],
        "description": "Get list of admin request approvals",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AdminRequestApprovalsList": {
            "$ref": "./examples/AdminRequestApprovalsList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}": {
      "get": {
        "operationId": "PrivateStore_GetAdminRequestApproval",
        "tags": [
          "AdminRequestApprovalsResources"
        ],
        "description": "Get open approval requests",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminRequestApprovalId",
            "in": "path",
            "description": "The admin request approval ID to get create or update",
            "required": true,
            "type": "string"
          },
          {
            "name": "publisherId",
            "in": "query",
            "description": "The publisher id of this offer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetAdminRequestApproval": {
            "$ref": "./examples/GetAdminRequestApproval.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateStore_UpdateAdminRequestApproval",
        "tags": [
          "AdminRequestApprovalsResources"
        ],
        "description": "Update the admin action, weather the request is approved or rejected and the approved plans",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "adminRequestApprovalId",
            "in": "path",
            "description": "The admin request approval ID to get create or update",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AdminRequestApprovalsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateAdminRequestApproval": {
            "$ref": "./examples/UpdateAdminRequestApproval.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/anyExistingOffersInTheCollections": {
      "post": {
        "operationId": "PrivateStore_AnyExistingOffersInTheCollections",
        "tags": [
          "PrivateStores"
        ],
        "description": "Query whether exists any offer in the collections.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AnyExistingOffersInTheCollectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AnyExistingOffersInTheCollections": {
            "$ref": "./examples/AnyExistingOffersInTheCollections.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/billingAccounts": {
      "post": {
        "operationId": "PrivateStore_BillingAccounts",
        "tags": [
          "PrivateStores"
        ],
        "description": "Tenant billing accounts names",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BillingAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BillingAccounts": {
            "$ref": "./examples/BillingAccounts.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/bulkCollectionsAction": {
      "post": {
        "operationId": "PrivateStore_BulkCollectionsAction",
        "tags": [
          "PrivateStores"
        ],
        "description": "Perform an action on bulk collections",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkCollectionsPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BulkCollectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BulkCollectionsAction": {
            "$ref": "./examples/BulkCollectionsAction.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections": {
      "get": {
        "operationId": "PrivateStoreCollection_List",
        "tags": [
          "Collections"
        ],
        "description": "Gets private store collections list",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CollectionsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreCollectionsList": {
            "$ref": "./examples/GetPrivateStoreCollectionsList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}": {
      "get": {
        "operationId": "PrivateStoreCollection_Get",
        "tags": [
          "Collections"
        ],
        "description": "Gets private store collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreCollection": {
            "$ref": "./examples/GetPrivateStoreCollection.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateStoreCollection_CreateOrUpdate",
        "tags": [
          "Collections"
        ],
        "description": "Create or update private store collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Collection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreatePrivateStoreCollection": {
            "$ref": "./examples/CreatePrivateStoreCollection.json"
          }
        }
      },
      "post": {
        "operationId": "PrivateStoreCollection_Post",
        "description": "Delete Private store collection. This is a workaround.",
        "consumes": [
          "text/plain"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PostPrivateStoreCollection": {
            "$ref": "./examples/PostPrivateStoreCollection.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateStoreCollection_Delete",
        "tags": [
          "Collections"
        ],
        "description": "Delete a collection from the given private store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletePrivateStoreCollection": {
            "$ref": "./examples/DeletePrivateStoreCollection.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/approveAllItems": {
      "post": {
        "operationId": "PrivateStoreCollection_ApproveAllItems",
        "tags": [
          "Collections"
        ],
        "description": "Delete all existing offers from the collection and enable approve all items.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApproveAllItems": {
            "$ref": "./examples/ApproveAllItems.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/disableApproveAllItems": {
      "post": {
        "operationId": "PrivateStoreCollection_DisableApproveAllItems",
        "tags": [
          "Collections"
        ],
        "description": "Disable approve all items for the collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DisableApproveAllItems": {
            "$ref": "./examples/DisableApproveAllItems.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/mapOffersToContexts": {
      "post": {
        "operationId": "PrivateStoreCollectionOffer_ListByContexts",
        "tags": [
          "Collections"
        ],
        "description": "Get a list of all offers in the given collection according to the required contexts.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CollectionOffersByAllContextsPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CollectionOffersByContextList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreCollectionOffersWithFullContext": {
            "$ref": "./examples/GetPrivateStoreCollectionOffersWithFullContext.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers": {
      "get": {
        "operationId": "PrivateStoreCollectionOffer_List",
        "tags": [
          "Offers"
        ],
        "description": "Get a list of all private offers in the given private store and collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OfferListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreOffers": {
            "$ref": "./examples/GetPrivateStoreOffers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}": {
      "get": {
        "operationId": "PrivateStoreCollectionOffer_Get",
        "tags": [
          "Offers"
        ],
        "description": "Gets information about a specific offer.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreCollectionOffer": {
            "$ref": "./examples/GetPrivateStoreCollectionOffer.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateStoreCollectionOffer_CreateOrUpdate",
        "tags": [
          "Offers"
        ],
        "description": "Update or add an offer to a specific collection of the private store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Offer' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateStoreOffer_update": {
            "$ref": "./examples/PrivateStoreOffer_update.json"
          }
        }
      },
      "post": {
        "operationId": "PrivateStoreCollectionOffer_Post",
        "description": "Delete Private store offer. This is a workaround.",
        "consumes": [
          "text/plain"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PostPrivateStoreCollectionOffer": {
            "$ref": "./examples/PostPrivateStoreCollectionOffer.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateStoreCollectionOffer_Delete",
        "tags": [
          "Offers"
        ],
        "description": "Deletes an offer from the given collection of private store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletePrivateStoreOffer": {
            "$ref": "./examples/DeletePrivateStoreOffer.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/contextsView": {
      "post": {
        "operationId": "PrivateStoreCollectionOffer_ContextsView",
        "tags": [
          "Offers"
        ],
        "description": "Retrieve offer information with plans under required contexts restrictions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CollectionOffersByAllContextsPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreCollectionOfferContextsView": {
            "$ref": "./examples/GetPrivateStoreCollectionOfferContextsView.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/upsertOfferWithMultiContext": {
      "post": {
        "operationId": "PrivateStoreCollectionOffer_UpsertOfferWithMultiContext",
        "tags": [
          "Offers"
        ],
        "description": "Upsert an offer with multiple context details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "The offer ID to update or delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MultiContextAndPlansPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpsertOfferWithMultiContext": {
            "$ref": "./examples/UpsertOfferWithMultiContext.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/queryRules": {
      "post": {
        "operationId": "QueryRules",
        "tags": [
          "Collections"
        ],
        "description": "Get a list of all private store rules in the given private store and collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RuleListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetCollectionRules": {
            "$ref": "./examples/GetCollectionRules.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/setRules": {
      "post": {
        "operationId": "SetCollectionRules",
        "tags": [
          "Collections"
        ],
        "description": "Set rule for specific private store and collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SetRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SetCollectionRules": {
            "$ref": "./examples/SetCollectionRules.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/transferOffers": {
      "post": {
        "operationId": "PrivateStoreCollection_TransferOffers",
        "tags": [
          "Collections"
        ],
        "description": "transferring offers (copy or move) from source collection to target collection(s)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The collection ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TransferOffersProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TransferOffersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TransferOffers": {
            "$ref": "./examples/TransferOffers.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collectionsToSubscriptionsMapping": {
      "post": {
        "operationId": "PrivateStore_CollectionsToSubscriptionsMapping",
        "tags": [
          "PrivateStores"
        ],
        "description": "For a given subscriptions list, the API will return a map of collections and the related subscriptions from the supplied list.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CollectionsToSubscriptionsMappingPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CollectionsToSubscriptionsMappingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CollectionsToSubscriptionsMapping": {
            "$ref": "./examples/CollectionsToSubscriptionsMapping.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/fetchAllSubscriptionsInTenant": {
      "post": {
        "operationId": "PrivateStore_FetchAllSubscriptionsInTenant",
        "tags": [
          "PrivateStores"
        ],
        "description": "Fetch all subscriptions in tenant, only for marketplace admin",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "next-page-token",
            "in": "header",
            "description": "The skip token to get the next page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FetchAllSubscriptionsInTenant": {
            "$ref": "./examples/FetchAllSubscriptionsInTenant.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listNewPlansNotifications": {
      "post": {
        "operationId": "PrivateStore_ListNewPlansNotifications",
        "tags": [
          "PrivateStores"
        ],
        "description": "List new plans notifications",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NewPlansNotificationsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListNewPlansNotifications": {
            "$ref": "./examples/ListNewPlansNotifications.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listStopSellOffersPlansNotifications": {
      "post": {
        "operationId": "PrivateStore_ListStopSellOffersPlansNotifications",
        "tags": [
          "PrivateStores"
        ],
        "description": "List stop sell notifications for both stop sell offers and stop sell plans",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "stopSellSubscriptions",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopSellSubscriptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StopSellOffersPlansNotificationsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStopSellOffersPlansNotifications": {
            "$ref": "./examples/ListStopSellOffersPlansNotifications.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listSubscriptionsContext": {
      "post": {
        "operationId": "PrivateStore_ListSubscriptionsContext",
        "tags": [
          "PrivateStores"
        ],
        "description": "List all the subscriptions in the private store context",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionsContextList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListSubscriptionsContext": {
            "$ref": "./examples/ListSubscriptionsContext.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryApprovedPlans": {
      "post": {
        "operationId": "PrivateStore_QueryApprovedPlans",
        "tags": [
          "PrivateStores"
        ],
        "description": "Get map of plans and related approved subscriptions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryApprovedPlansPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QueryApprovedPlansResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryApprovedPlans": {
            "$ref": "./examples/QueryApprovedPlans.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState": {
      "post": {
        "operationId": "PrivateStore_QueryNotificationsState",
        "tags": [
          "PrivateStores"
        ],
        "description": "Get private store notifications state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateStoreNotificationsState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationsState": {
            "$ref": "./examples/NotificationsState.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryOffers": {
      "post": {
        "operationId": "PrivateStore_QueryOffers",
        "tags": [
          "PrivateStores"
        ],
        "description": "List of offers, regardless the collections",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QueryOffers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryOffers": {
            "$ref": "./examples/QueryOffers.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserOffers": {
      "post": {
        "operationId": "PrivateStore_QueryUserOffers",
        "tags": [
          "PrivateStores"
        ],
        "description": "List of user's approved offers for the provided offers and subscriptions",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryUserOffersProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QueryOffers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryUserOffers": {
            "$ref": "./examples/QueryUserOffers.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserRules": {
      "post": {
        "operationId": "QueryUserRules",
        "tags": [
          "PrivateStores"
        ],
        "description": "All rules approved in the private store that are relevant for user subscriptions",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryUserRulesProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RuleListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryUserRules": {
            "$ref": "./examples/QueryUserRules.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals": {
      "get": {
        "operationId": "PrivateStore_GetApprovalRequestsList",
        "tags": [
          "RequestApprovalResources"
        ],
        "description": "Get all open approval requests of current user",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestApprovalsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetApprovalRequestsList": {
            "$ref": "./examples/GetApprovalRequestsList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}": {
      "get": {
        "operationId": "PrivateStore_GetRequestApproval",
        "tags": [
          "RequestApprovalResources"
        ],
        "description": "Get open request approval details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestApprovalId",
            "in": "path",
            "description": "The request approval ID to get create or update",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetApprovalRequest": {
            "$ref": "./examples/GetRequestApproval.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateStore_CreateApprovalRequest",
        "tags": [
          "RequestApprovalResources"
        ],
        "description": "Create approval request",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestApprovalId",
            "in": "path",
            "description": "The request approval ID to get create or update",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RequestApprovalResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateApprovalRequest": {
            "$ref": "./examples/CreateApprovalRequest.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/query": {
      "post": {
        "operationId": "PrivateStore_QueryRequestApproval",
        "tags": [
          "RequestApprovalResources"
        ],
        "description": "Get request statuses foreach plan, this api is used as a complex GET action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestApprovalId",
            "in": "path",
            "description": "The request approval ID to get create or update",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryRequestApprovalProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QueryRequestApproval"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryRequestApproval": {
            "$ref": "./examples/QueryRequestApproval.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/withdrawPlan": {
      "post": {
        "operationId": "PrivateStore_WithdrawPlan",
        "tags": [
          "RequestApprovalResources"
        ],
        "description": "Withdraw a user request approval on specific plan",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "description": "The store ID - must use the tenant ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestApprovalId",
            "in": "path",
            "description": "The request approval ID to get create or update",
            "required": true,
            "type": "string"
          },
          {
            "name": "payload",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WithdrawProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WithdrawPlan": {
            "$ref": "./examples/WithdrawPlan.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Accessibility": {
      "type": "string",
      "description": "Plan accessibility",
      "enum": [
        "Unknown",
        "Public",
        "PrivateTenantOnLevel",
        "PrivateSubscriptionOnLevel"
      ],
      "x-ms-enum": {
        "name": "Accessibility",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Public",
            "value": "Public"
          },
          {
            "name": "PrivateTenantOnLevel",
            "value": "PrivateTenantOnLevel"
          },
          {
            "name": "PrivateSubscriptionOnLevel",
            "value": "PrivateSubscriptionOnLevel"
          }
        ]
      }
    },
    "AcknowledgeOfferNotificationDetails": {
      "type": "object",
      "description": "Notification update request payload details",
      "properties": {
        "acknowledge": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether acknowledge action flag is enabled"
        },
        "dismiss": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether dismiss action flag is enabled"
        },
        "removeOffer": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether remove offer action flag is enabled"
        },
        "addPlans": {
          "type": "array",
          "description": "Gets or sets added plans",
          "items": {
            "type": "string"
          }
        },
        "removePlans": {
          "type": "array",
          "description": "Gets or sets remove plans",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AcknowledgeOfferNotificationProperties": {
      "type": "object",
      "description": "Notification update request payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AcknowledgeOfferNotificationDetails",
          "description": "Notification update request payload details",
          "x-ms-client-flatten": true
        }
      }
    },
    "AdminAction": {
      "type": "string",
      "description": "Gets or sets admin action",
      "enum": [
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "AdminAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          }
        ]
      }
    },
    "AdminRequestApprovalProperties": {
      "type": "object",
      "description": "Admin approval request resource properties",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Gets or sets offer Id"
        },
        "displayName": {
          "type": "string",
          "description": "Gets display name",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Gets or sets publisher Id"
        },
        "adminAction": {
          "$ref": "#/definitions/AdminAction",
          "description": "Gets or sets admin action"
        },
        "approvedPlans": {
          "type": "array",
          "description": "Gets or sets Approved plans ids, empty in case of rejected",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "type": "string",
          "description": "Gets or sets admin comment"
        },
        "administrator": {
          "type": "string",
          "description": "Gets or sets admin details"
        },
        "plans": {
          "type": "array",
          "description": "Gets list of plans with requesters details",
          "items": {
            "$ref": "#/definitions/PlanRequesterDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "planId"
          ]
        },
        "collectionIds": {
          "type": "array",
          "description": "Gets or sets list of associated collection ids",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "type": "string",
          "description": "The offer icon url.",
          "readOnly": true
        }
      }
    },
    "AdminRequestApprovalsList": {
      "type": "object",
      "description": "List of admin request approval resources",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminRequestApprovalsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of notifications list results if there are any.",
          "readOnly": true
        }
      }
    },
    "AdminRequestApprovalsResource": {
      "type": "object",
      "description": "Admin request approval resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdminRequestApprovalProperties",
          "description": "The privateStore admin Approval request data structure.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AnyExistingOffersInTheCollectionsResponse": {
      "type": "object",
      "description": "Response object of query if are there existing offers in the collections.",
      "properties": {
        "value": {
          "type": "boolean",
          "description": "Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false."
        }
      }
    },
    "Availability": {
      "type": "string",
      "description": "Indicates private store availability",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "Availability",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled"
          },
          {
            "name": "disabled",
            "value": "disabled"
          }
        ]
      }
    },
    "BillingAccountsResponse": {
      "type": "object",
      "description": "Billing accounts response object",
      "properties": {
        "billingAccounts": {
          "type": "array",
          "description": "Billing accounts list",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BulkCollectionsDetails": {
      "type": "object",
      "description": "Bulk collection details",
      "properties": {
        "collectionIds": {
          "type": "array",
          "description": "collection ids list that the action is performed on",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "type": "string",
          "description": "Action to perform (For example: EnableCollections, DisableCollections)"
        }
      }
    },
    "BulkCollectionsPayload": {
      "type": "object",
      "description": "Bulk collections action properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BulkCollectionsDetails",
          "description": "bulk collections properties details",
          "x-ms-client-flatten": true
        }
      }
    },
    "BulkCollectionsResponse": {
      "type": "object",
      "description": "The bulk collections response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
      "properties": {
        "succeeded": {
          "type": "array",
          "description": "Succeeded collections",
          "items": {
            "$ref": "#/definitions/CollectionsDetails"
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        },
        "failed": {
          "type": "array",
          "description": "Failed collections",
          "items": {
            "$ref": "#/definitions/CollectionsDetails"
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        }
      }
    },
    "Collection": {
      "type": "object",
      "description": "The Collection data structure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CollectionProperties",
          "description": "The collection data structure.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CollectionOffersByAllContextsPayload": {
      "type": "object",
      "description": "Suggested subscription list",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CollectionOffersByAllContextsProperties",
          "description": "Subscriptions ids list",
          "x-ms-client-flatten": true
        }
      }
    },
    "CollectionOffersByAllContextsProperties": {
      "type": "object",
      "description": "Suggested subscription list",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "Subscription ids list",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionOffersByContext": {
      "type": "object",
      "description": "List of offers and plans that restricted to the context",
      "properties": {
        "context": {
          "type": "string",
          "description": "Offer's context, e.g. subscription ID, tenant ID.",
          "readOnly": true
        },
        "offers": {
          "$ref": "#/definitions/CollectionOffersByContextOffers",
          "description": "List of offers",
          "x-ms-client-flatten": true
        }
      }
    },
    "CollectionOffersByContextList": {
      "type": "object",
      "description": "List of objects which describes offers per context. An empty GUID is a public context.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CollectionOffersByContext items on this page",
          "items": {
            "$ref": "#/definitions/CollectionOffersByContext"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CollectionOffersByContextOffers": {
      "type": "object",
      "description": "List of offers",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferProperties"
          },
          "x-ms-identifiers": [
            "uniqueOfferId"
          ]
        }
      }
    },
    "CollectionProperties": {
      "type": "object",
      "description": "The collection details",
      "properties": {
        "collectionId": {
          "type": "string",
          "description": "Gets collection Id.",
          "readOnly": true
        },
        "collectionName": {
          "type": "string",
          "description": "Gets or sets collection name."
        },
        "claim": {
          "type": "string",
          "description": "Gets or sets the association with Commercial's Billing Account."
        },
        "allSubscriptions": {
          "type": "boolean",
          "description": "Indicating whether all subscriptions are selected (=true) or not (=false)."
        },
        "approveAllItems": {
          "type": "boolean",
          "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
          "readOnly": true
        },
        "approveAllItemsModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the modified date of all items approved.",
          "readOnly": true
        },
        "subscriptionsList": {
          "type": "array",
          "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicating whether the collection is enabled or disabled."
        },
        "numberOfOffers": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the number of offers associated with the collection.",
          "readOnly": true
        },
        "appliedRules": {
          "type": "array",
          "description": "Gets list of collection rules",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "type"
          ]
        }
      }
    },
    "CollectionsDetails": {
      "type": "object",
      "description": "Collection name and id.",
      "properties": {
        "collectionName": {
          "type": "string",
          "description": "Collection name."
        },
        "collectionId": {
          "type": "string",
          "description": "Collection id."
        }
      }
    },
    "CollectionsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of offer list results if there are any."
        }
      }
    },
    "CollectionsSubscriptionsMappingDetails": {
      "type": "object",
      "description": "Collection name and related subscriptions list",
      "properties": {
        "collectionName": {
          "type": "string",
          "description": "Collection name"
        },
        "subscriptions": {
          "type": "array",
          "description": "Subscriptions ids list",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingPayload": {
      "type": "object",
      "description": "The subscriptions list to get the related collections",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CollectionsToSubscriptionsMappingProperties",
          "description": "Subscriptions ids list"
        }
      }
    },
    "CollectionsToSubscriptionsMappingProperties": {
      "type": "object",
      "description": "The subscriptions list to get the related collections",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "Subscriptions ids list",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingResponse": {
      "type": "object",
      "description": "A map of collections subscriptions details",
      "properties": {
        "details": {
          "type": "object",
          "description": "The map of collections subscriptions",
          "additionalProperties": {
            "$ref": "#/definitions/CollectionsSubscriptionsMappingDetails"
          }
        }
      }
    },
    "ContextAndPlansDetails": {
      "type": "object",
      "description": "Object of plans per context.",
      "properties": {
        "context": {
          "type": "string",
          "description": "Plan's context, e.g. subscription ID, tenant ID."
        },
        "planIds": {
          "type": "array",
          "description": "List of plan IDs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MultiContextAndPlansPayload": {
      "type": "object",
      "description": "Payload object for upsert offer with multiple context and plans.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MultiContextAndPlansProperties",
          "description": "Object describes multiple context and plans.",
          "x-ms-client-flatten": true
        }
      }
    },
    "MultiContextAndPlansProperties": {
      "type": "object",
      "description": "Object describes multiple context and plans.",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "The offer ID which contains the plans."
        },
        "eTag": {
          "type": "string",
          "description": "The offer's eTag."
        },
        "plansContext": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextAndPlansDetails"
          },
          "x-ms-identifiers": [
            "context"
          ]
        }
      }
    },
    "NewNotifications": {
      "type": "object",
      "description": "New plans notification details",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Gets offer id"
        },
        "displayName": {
          "type": "string",
          "description": "Gets offer display name"
        },
        "isFuturePlansEnabled": {
          "type": "boolean",
          "description": "Gets a value indicating whether future plans is enabled."
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the notification message id"
        },
        "icon": {
          "type": "string",
          "description": "Gets or sets the icon url"
        },
        "plans": {
          "type": "array",
          "description": "Gets or sets removed plans notifications",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "NewPlansNotificationsList": {
      "type": "object",
      "description": "List of all new plans notifications for public offers",
      "properties": {
        "newPlansNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewNotifications"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NotificationsSettingsProperties": {
      "type": "object",
      "description": "Describes the json payload for notifications settings",
      "properties": {
        "recipients": {
          "type": "array",
          "description": "Gets or sets list of notified recipients for new requests",
          "items": {
            "$ref": "#/definitions/Recipient"
          },
          "x-ms-identifiers": [
            "principalId"
          ]
        },
        "sendToAllMarketplaceAdmins": {
          "type": "boolean",
          "description": "Gets or sets whether to send email to all marketplace admins for new requests"
        }
      }
    },
    "Offer": {
      "type": "object",
      "description": "The privateStore offer data structure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OfferProperties",
          "description": "The privateStore offer data structure.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OfferListResponse": {
      "type": "object",
      "description": "Paged collection of Offer items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Offer items on this page",
          "items": {
            "$ref": "#/definitions/Offer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OfferProperties": {
      "type": "object",
      "properties": {
        "uniqueOfferId": {
          "type": "string",
          "description": "Offers unique id",
          "readOnly": true
        },
        "offerDisplayName": {
          "type": "string",
          "description": "It will be displayed prominently in the marketplace",
          "readOnly": true
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "Publisher name that will be displayed prominently in the marketplace",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "Identifier for purposes of race condition"
        },
        "privateStoreId": {
          "type": "string",
          "description": "Private store unique id",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "description": "Private store offer creation date",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "description": "Private store offer modification date",
          "readOnly": true
        },
        "specificPlanIdsLimitation": {
          "type": "array",
          "description": "Plan ids limitation for this offer",
          "items": {
            "type": "string"
          }
        },
        "updateSuppressedDueIdempotence": {
          "type": "boolean",
          "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated."
        },
        "iconFileUris": {
          "type": "object",
          "description": "Icon File Uris",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isStopSell": {
          "type": "boolean",
          "description": "Indicating whether the offer is stop sell or not.",
          "readOnly": true
        },
        "plans": {
          "type": "array",
          "description": "Offer plans",
          "items": {
            "$ref": "#/definitions/Plan"
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "Operation": {
      "type": "string",
      "description": "Set the Operation for the POST method. Ping or Delete",
      "enum": [
        "DeletePrivateStoreOffer",
        "DeletePrivateStoreCollection",
        "DeletePrivateStoreCollectionOffer",
        "Ping"
      ],
      "x-ms-enum": {
        "name": "Operation",
        "modelAsString": true,
        "values": [
          {
            "name": "DeletePrivateStoreOffer",
            "value": "DeletePrivateStoreOffer"
          },
          {
            "name": "DeletePrivateStoreCollection",
            "value": "DeletePrivateStoreCollection"
          },
          {
            "name": "DeletePrivateStoreCollectionOffer",
            "value": "DeletePrivateStoreCollectionOffer"
          },
          {
            "name": "Ping",
            "value": "Ping"
          }
        ]
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "skuId": {
          "type": "string",
          "description": "Identifier for this plan",
          "readOnly": true
        },
        "planId": {
          "type": "string",
          "description": "Text identifier for this plan",
          "readOnly": true
        },
        "planDisplayName": {
          "type": "string",
          "description": "Friendly name for the plan for display in the marketplace",
          "readOnly": true
        },
        "accessibility": {
          "$ref": "#/definitions/Accessibility",
          "description": "Plan accessibility"
        },
        "altStackReference": {
          "type": "string",
          "description": "Alternative stack type",
          "readOnly": true
        },
        "stackType": {
          "type": "string",
          "description": "Stack type (classic or arm)",
          "readOnly": true
        },
        "isStopSell": {
          "type": "boolean",
          "description": "Indicating whether the plan is stop sell or not.",
          "readOnly": true
        }
      }
    },
    "PlanDetails": {
      "type": "object",
      "description": "Return plan with request details",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Gets or sets Plan Id"
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Gets the plan status",
          "readOnly": true
        },
        "requestDate": {
          "description": "Gets request date",
          "readOnly": true
        },
        "justification": {
          "type": "string",
          "description": "Gets or sets user's justification for the plan's request"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets or sets the subscription id that the user is requesting to add the plan to"
        },
        "subscriptionName": {
          "type": "string",
          "description": "Gets or sets the subscription name that the user is requesting to add the plan to"
        }
      }
    },
    "PlanNotificationDetails": {
      "type": "object",
      "description": "Plan notification details",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Gets or sets the plan id"
        },
        "planDisplayName": {
          "type": "string",
          "description": "Gets or sets the plan display name"
        }
      }
    },
    "PlanRequesterDetails": {
      "type": "object",
      "description": "Plan with requesters details",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Gets the plan id",
          "readOnly": true
        },
        "planDisplayName": {
          "type": "string",
          "description": "Gets the plan display name",
          "readOnly": true
        },
        "requesters": {
          "type": "array",
          "description": "Gets requesters details list",
          "items": {
            "$ref": "#/definitions/UserRequestDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "user"
          ]
        }
      }
    },
    "PrivateStore": {
      "type": "object",
      "description": "The PrivateStore data structure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateStoreProperties",
          "description": "The PrivateStore data structure.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateStoreList": {
      "type": "object",
      "description": "Describes the json payload for the list of available private stores (between zero and one, inclusive)",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateStore items on this page",
          "items": {
            "$ref": "#/definitions/PrivateStore"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateStoreNotificationsState": {
      "type": "object",
      "description": "Get private store notifications state",
      "properties": {
        "stopSellNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopSellNotifications"
          },
          "x-ms-identifiers": []
        },
        "newNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewNotifications"
          },
          "x-ms-identifiers": []
        },
        "approvalRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestApprovalsDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PrivateStoreProperties": {
      "type": "object",
      "description": "Describes the json payload on whether or not the private store is enabled for a given tenant",
      "properties": {
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Indicates private store availability"
        },
        "privateStoreId": {
          "type": "string",
          "description": "Private Store id",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "Identifier for purposes of race condition"
        },
        "privateStoreName": {
          "type": "string",
          "description": "Private Store Name"
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id"
        },
        "isGov": {
          "type": "boolean",
          "description": "Is government"
        },
        "collectionIds": {
          "type": "array",
          "description": "Gets list of associated collection ids",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "branding": {
          "type": "object",
          "description": "Gets or sets list of branding characteristics",
          "additionalProperties": {
            "type": "string"
          }
        },
        "notificationsSettings": {
          "$ref": "#/definitions/NotificationsSettingsProperties",
          "description": "Gets or sets notifications settings",
          "x-ms-client-flatten": true
        }
      }
    },
    "QueryApprovedPlans": {
      "type": "object",
      "description": "Query approved plans details",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Offer id"
        },
        "planIds": {
          "type": "array",
          "description": "Offer plan ids",
          "items": {
            "type": "string"
          }
        },
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription IDs",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryApprovedPlansDetails": {
      "type": "object",
      "description": "Query approved plans response",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Plan id"
        },
        "subscriptionIds": {
          "type": "array",
          "description": "Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.",
          "items": {
            "type": "string"
          }
        },
        "allSubscriptions": {
          "type": "boolean",
          "description": "Indicates whether all subscriptions are approved for this plan"
        }
      }
    },
    "QueryApprovedPlansPayload": {
      "type": "object",
      "description": "Query approved plans payload",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueryApprovedPlans",
          "description": "Query approved plans details",
          "x-ms-client-flatten": true
        }
      }
    },
    "QueryApprovedPlansResponse": {
      "type": "object",
      "description": "Query approved plans response",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list indicating for each plan which subscriptions are approved. Plan Id is unique",
          "items": {
            "$ref": "#/definitions/QueryApprovedPlansDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "QueryOffers": {
      "type": "object",
      "description": "List of offers",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferProperties"
          },
          "x-ms-identifiers": [
            "uniqueOfferId"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of PrivateStore list results if there are any."
        }
      }
    },
    "QueryRequestApproval": {
      "type": "object",
      "description": "Gets the request plans with indication on each plan whether is approved by the admin, has pending request or not requested yet",
      "properties": {
        "uniqueOfferId": {
          "type": "string",
          "description": "Gets or sets unique offer id."
        },
        "plansDetails": {
          "type": "object",
          "description": "Gets or sets the plans details",
          "additionalProperties": {
            "$ref": "#/definitions/PlanDetails"
          }
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets e-tag field"
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the notification message id"
        }
      }
    },
    "QueryRequestApprovalProperties": {
      "type": "object",
      "description": "The details to get the request plans statuses",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestDetails",
          "description": "The details to get the request plans statuses"
        }
      }
    },
    "QueryUserOffersDetails": {
      "type": "object",
      "description": "List of offers IDs and list of user's subscriptions IDs to query the user's approved offers",
      "properties": {
        "offerIds": {
          "type": "array",
          "description": "List of offer IDs",
          "items": {
            "type": "string"
          }
        },
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription IDs",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryUserOffersProperties": {
      "type": "object",
      "description": "Query user's offers properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueryUserOffersDetails",
          "description": "Query user's offers details",
          "x-ms-client-flatten": true
        }
      }
    },
    "QueryUserRulesDetails": {
      "type": "object",
      "description": "List of subscriptions IDs to query the user's rules",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription IDs",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryUserRulesProperties": {
      "type": "object",
      "description": "Query user's rules properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueryUserRulesDetails",
          "description": "Query user's rules details",
          "x-ms-client-flatten": true
        }
      }
    },
    "Recipient": {
      "type": "object",
      "description": "Describes the json payload for a notified recipient for new requests",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal ID"
        },
        "emailAddress": {
          "type": "string",
          "description": "Email Address",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name",
          "readOnly": true
        }
      }
    },
    "RequestApprovalProperties": {
      "type": "object",
      "description": "Approval request resource properties",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Gets or sets unique offer id."
        },
        "offerDisplayName": {
          "type": "string",
          "description": "Gets offer display name",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "The offer's publisher id"
        },
        "plansDetails": {
          "type": "array",
          "description": "Gets or sets the plans details",
          "items": {
            "$ref": "#/definitions/PlanDetails"
          },
          "x-ms-identifiers": [
            "planId"
          ]
        },
        "isClosed": {
          "type": "boolean",
          "description": "Gets a value indicating whether the request is closed",
          "readOnly": true
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the request approval message code"
        }
      }
    },
    "RequestApprovalResource": {
      "type": "object",
      "description": "Request approval resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestApprovalProperties",
          "description": "The privateStore approval request data structure.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RequestApprovalsDetails": {
      "type": "object",
      "description": "Request approvals details",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Gets offer id"
        },
        "displayName": {
          "type": "string",
          "description": "Gets offer display name"
        },
        "publisherId": {
          "type": "string",
          "description": "Gets or sets publisher id"
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the notification message id"
        },
        "icon": {
          "type": "string",
          "description": "Gets or sets the icon url"
        },
        "plans": {
          "type": "array",
          "description": "Gets or sets removed plans notifications",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "RequestApprovalsList": {
      "type": "object",
      "description": "List of admin request approval resources",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestApprovalResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of notifications list results if there are any.",
          "readOnly": true
        }
      }
    },
    "RequestDetails": {
      "type": "object",
      "description": "Request details needed to get the plans statuses",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "The offer's publisher id"
        },
        "planIds": {
          "type": "array",
          "description": "Current plans list",
          "items": {
            "type": "string"
          }
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets or sets the subscription id"
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RuleType",
          "description": "Rule type"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RuleListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "type"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of rules list results if there are any."
        }
      }
    },
    "RuleType": {
      "type": "string",
      "description": "Rule type",
      "enum": [
        "PrivateProducts",
        "TermsAndCondition"
      ],
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true,
        "values": [
          {
            "name": "PrivateProducts",
            "value": "PrivateProducts"
          },
          {
            "name": "TermsAndCondition",
            "value": "TermsAndCondition"
          }
        ]
      }
    },
    "SetRulesRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of rules list results if there are any."
        }
      }
    },
    "Status": {
      "type": "string",
      "description": "Gets the plan status",
      "enum": [
        "Pending",
        "Rejected",
        "Approved",
        "None"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "StopSellNotifications": {
      "type": "object",
      "description": "Stop sell notification details",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "Gets offer id"
        },
        "displayName": {
          "type": "string",
          "description": "Gets offer display name"
        },
        "isEntire": {
          "type": "boolean",
          "description": "Gets a value indicating whether entire offer is in stop sell or only few of its plans"
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the notification message id"
        },
        "icon": {
          "type": "string",
          "description": "Gets or sets the icon url"
        },
        "plans": {
          "type": "array",
          "description": "Gets or sets removed plans notifications",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "StopSellOffersPlansNotificationsList": {
      "type": "object",
      "description": "List of stop sell offers and plans notifications.",
      "properties": {
        "stopSellNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopSellOffersPlansNotificationsListProperties"
          },
          "x-ms-identifiers": [
            "offerId"
          ]
        }
      }
    },
    "StopSellOffersPlansNotificationsListProperties": {
      "type": "object",
      "description": "List of stop sell offers and plans notifications.",
      "properties": {
        "offerId": {
          "type": "string",
          "description": "The offer id",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The offer display name",
          "readOnly": true
        },
        "isEntire": {
          "type": "boolean",
          "description": "A value indicating whether entire offer is in stop sell or only few of its plans",
          "readOnly": true
        },
        "messageCode": {
          "type": "integer",
          "format": "int64",
          "description": "The notification message code",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "description": "The icon url",
          "readOnly": true
        },
        "plans": {
          "type": "array",
          "description": "The list of removed plans notifications",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "planId"
          ]
        },
        "publicContext": {
          "type": "boolean",
          "description": "True if the offer has public plans",
          "readOnly": true
        },
        "subscriptionsIds": {
          "type": "array",
          "description": "The subscriptions related to private plans",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "StopSellSubscriptions": {
      "type": "object",
      "description": "Private plans subscriptions",
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Subscription": {
      "type": "object",
      "description": "Subscription information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The subscription display name.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/SubscriptionState",
          "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
          "readOnly": true
        }
      }
    },
    "SubscriptionState": {
      "type": "string",
      "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
      "enum": [
        "Enabled",
        "Warned",
        "PastDue",
        "Disabled",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "SubscriptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Warned",
            "value": "Warned"
          },
          {
            "name": "PastDue",
            "value": "PastDue"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          }
        ]
      }
    },
    "SubscriptionsContextList": {
      "type": "object",
      "description": "List of subscription Ids in the private store",
      "properties": {
        "subscriptionsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubscriptionsResponse": {
      "type": "object",
      "description": "Subscription list operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of subscriptions.",
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "readOnly": true
        },
        "skipToken": {
          "type": "string",
          "description": "The skip token to retrieve the next page.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of subscriptions on the page",
          "readOnly": true
        }
      }
    },
    "TransferOffersDetails": {
      "type": "object",
      "description": "Transfer offers response details",
      "properties": {
        "targetCollections": {
          "type": "array",
          "description": "Target collections ids",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "type": "string",
          "description": "Operation to perform (For example: Copy or Move)"
        },
        "offerIdsList": {
          "type": "array",
          "description": "Offers ids list to transfer from source collection to target collection(s)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransferOffersProperties": {
      "type": "object",
      "description": "Transfer offers properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransferOffersDetails",
          "description": "transfer offers properties details",
          "x-ms-client-flatten": true
        }
      }
    },
    "TransferOffersResponse": {
      "type": "object",
      "description": "The transfer items response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
      "properties": {
        "succeeded": {
          "type": "array",
          "description": "Succeeded collections",
          "items": {
            "$ref": "#/definitions/CollectionsDetails"
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        },
        "failed": {
          "type": "array",
          "description": "Failed collections",
          "items": {
            "$ref": "#/definitions/CollectionsDetails"
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        }
      }
    },
    "UserRequestDetails": {
      "type": "object",
      "description": "user request details",
      "properties": {
        "user": {
          "type": "string",
          "description": "Gets user id",
          "readOnly": true
        },
        "date": {
          "type": "string",
          "description": "Gets request date",
          "readOnly": true
        },
        "justification": {
          "type": "string",
          "description": "Gets justification",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets the subscription id that the user is requesting to add the plan to"
        },
        "subscriptionName": {
          "type": "string",
          "description": "Gets the subscription name that the user is requesting to add the plan to"
        }
      }
    },
    "WithdrawDetails": {
      "type": "object",
      "description": "Withdraw properties details",
      "properties": {
        "planId": {
          "type": "string",
          "description": "Gets or sets Plan Id"
        },
        "publisherId": {
          "type": "string",
          "description": "The offer's publisher id"
        }
      }
    },
    "WithdrawProperties": {
      "type": "object",
      "description": "Withdraw properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WithdrawDetails",
          "description": "Withdraw properties details",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {}
}
