{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Industry.Manufacturing.MDS.Copilot",
    "version": "2025-03-01",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "https://mds-{mdsUniqueId}.{location}.cloudapp.azure.com/",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "mdsUniqueId",
        "in": "path",
        "required": true,
        "type": "string"
      },
      {
        "name": "location",
        "in": "path",
        "required": true,
        "type": "string",
        "default": "mds.azure.com"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "https://azure-mds-service.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://azure-mds-service.com/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [],
  "paths": {
    "/copilot/aliases": {
      "get": {
        "operationId": "AliasesServiceClient_List",
        "description": "List all aliases",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedAlias"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "AliasesServiceClient_List_MaximumSet": {
            "$ref": "./examples/AliasesServiceClient_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/copilot/aliases/{id}": {
      "get": {
        "operationId": "AliasesServiceClient_Get",
        "description": "Get an alias by Id",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the alias",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Alias"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "AliasesServiceClient_Get_MaximumSet": {
            "$ref": "./examples/AliasesServiceClient_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AliasesServiceClient_CreateOrReplace",
        "description": "Update an alias",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the alias",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Models.Alias"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Alias"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Models.Alias"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "AliasesServiceClient_CreateOrReplace_MaximumSet": {
            "$ref": "./examples/AliasesServiceClient_CreateOrReplace_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AliasesServiceClient_Delete",
        "description": "Delete an alias",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the alias",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "AliasesServiceClient_Delete_MaximumSet": {
            "$ref": "./examples/AliasesServiceClient_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/copilot/health": {
      "get": {
        "operationId": "HeathServiceClient_GetServiceHealth",
        "description": "Get the health status of the service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.CopilotHealth"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "HeathServiceClient_GetServiceHealth_MaximumSet": {
            "$ref": "./examples/HeathServiceClient_GetServiceHealth_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/copilot/instructions": {
      "get": {
        "operationId": "InstructionServiceClient_List",
        "description": "List Instruction resources",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Get all active instructions by state.",
            "required": true,
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ],
            "x-ms-enum": {
              "name": "ResourceState",
              "modelAsString": true,
              "values": [
                {
                  "name": "Active",
                  "value": "Active",
                  "description": "Resource is active"
                },
                {
                  "name": "Inactive",
                  "value": "Inactive",
                  "description": "Resource is inactive"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedInstruction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "InstructionServiceClient_List_MaximumSet": {
            "$ref": "./examples/InstructionServiceClient_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "InstructionServiceClient_Create",
        "description": "Create an instruction.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Models.Instruction"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Location": {
                "type": "string",
                "format": "uri",
                "description": "The location of an instance of Instruction"
              },
              "operation-location": {
                "type": "string",
                "description": "The background job location."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "InstructionServiceClient_Create_MaximumSet": {
            "$ref": "./examples/InstructionServiceClient_Create_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/copilot/instructions/{id}": {
      "get": {
        "operationId": "InstructionServiceClient_Get",
        "description": "Gets single instruction.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the instruction",
            "required": true,
            "type": "string",
            "maxLength": 60,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Instruction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "InstructionServiceClient_Get_MaximumSet": {
            "$ref": "./examples/InstructionServiceClient_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "InstructionServiceClient_CreateOrReplace",
        "description": "create Or Replace instructions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the instruction",
            "required": true,
            "type": "string",
            "maxLength": 60,
            "pattern": "^[a-zA-Z0-9_]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Models.Instruction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.Instruction"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Models.Instruction"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "InstructionServiceClient_CreateOrReplace_MaximumSet": {
            "$ref": "./examples/InstructionServiceClient_CreateOrReplace_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InstructionServiceClient_Delete",
        "description": "Delete instructions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id for the instruction",
            "required": true,
            "type": "string",
            "maxLength": 60,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "type": "object",
              "description": "Provides status details for long running operations.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                }
              },
              "required": [
                "id",
                "status"
              ]
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "InstructionServiceClient_Delete_MaximumSet": {
            "$ref": "./examples/InstructionServiceClient_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/copilot/operation/{id}": {
      "get": {
        "operationId": "OperationServiceClient_GetOperationResult",
        "description": "Get operation progress",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The operation id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.OperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "OperationServiceClient_GetOperationResult_MaximumSet": {
            "$ref": "./examples/OperationServiceClient_GetOperationResult_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/copilot/query": {
      "post": {
        "operationId": "QueryServiceClient_QueryExecute",
        "description": "execute the query",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "api-version to use",
            "required": true,
            "type": "string",
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation-id",
            "in": "header",
            "description": "conversation id",
            "required": false,
            "type": "string",
            "x-ms-client-name": "conversationId"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "acceptLanguage"
          },
          {
            "name": "maxRetry",
            "in": "query",
            "description": "maximum number of retries",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 2
          },
          {
            "name": "includeSummary",
            "in": "query",
            "description": "Include summary in the response.",
            "required": false,
            "type": "string",
            "enum": [
              "Yes",
              "No"
            ],
            "x-ms-enum": {
              "name": "Choice",
              "modelAsString": true,
              "values": [
                {
                  "name": "yes",
                  "value": "Yes",
                  "description": "Yes"
                },
                {
                  "name": "no",
                  "value": "No",
                  "description": "No"
                }
              ]
            }
          },
          {
            "name": "request",
            "in": "body",
            "description": "request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Models.UserQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.QueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryServiceClient_QueryExecute_MaximumSet": {
            "$ref": "./examples/QueryServiceClient_QueryExecute_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/copilot/query/{operationId}:submitFeedback": {
      "post": {
        "operationId": "QueryServiceClient_SubmitFeedback",
        "description": "Share feedback for the copilot's query response",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.FeedbackRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryServiceClient_SubmitFeedback_MaximumSet": {
            "$ref": "./examples/QueryServiceClient_SubmitFeedback_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/copilot/queryExamples": {
      "get": {
        "operationId": "QueryExampleServiceClient_ListAllExamples",
        "description": "get all example queries",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "instructionId",
            "in": "query",
            "description": "Instruction id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedExampleQueryRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryExampleServiceClient_ListAllExamples_MaximumSet": {
            "$ref": "./examples/QueryExampleServiceClient_ListAllExamples_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/copilot/queryExamples/{exampleId}": {
      "get": {
        "operationId": "QueryExampleServiceClient_GetExample",
        "description": "get the example query",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The ID of the example query.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.ExampleQueryRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryExampleServiceClient_GetExample_MaximumSet": {
            "$ref": "./examples/QueryExampleServiceClient_GetExample_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "QueryExampleServiceClient_CreateOrReplace",
        "description": "update the example query",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The ID of the example query.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Models.ExampleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Models.ExampleQueryRequest"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Models.ExampleQueryRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryExampleServiceClient_CreateOrReplace_MaximumSet": {
            "$ref": "./examples/QueryExampleServiceClient_CreateOrReplace_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "QueryExampleServiceClient_DeleteExample",
        "description": "delete the example query",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The ID of the example query.",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "QueryExampleServiceClient_DeleteExample_MaximumSet": {
            "$ref": "./examples/QueryExampleServiceClient_DeleteExample_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "Models.AdministrativeDetails": {
      "type": "object",
      "description": "The administrative details of the instruction.",
      "properties": {
        "source": {
          "type": "string",
          "description": "The source of the instruction."
        },
        "createdBy": {
          "type": "string",
          "description": "The comment for the instruction."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The comment for the instruction."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date of the instruction."
        },
        "comment": {
          "type": "string",
          "description": "any closing comments"
        }
      },
      "required": [
        "source",
        "createdBy",
        "lastModifiedBy",
        "createdAt",
        "comment"
      ]
    },
    "Models.Alias": {
      "type": "object",
      "description": "This is the request model for Alias",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id for the alias",
          "maxLength": 50,
          "pattern": "^[a-zA-Z0-9_]*$",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Key for the alias"
        },
        "aliases": {
          "type": "array",
          "description": "List of aliases",
          "items": {
            "type": "string"
          }
        },
        "isCustom": {
          "$ref": "#/definitions/Models.Choice",
          "description": "Indicates if the alias is enabled",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/Models.ResourceState",
          "description": "Indicates if the alias is enabled",
          "x-ms-mutability": [
            "update"
          ]
        }
      },
      "required": [
        "id",
        "name",
        "aliases",
        "isCustom",
        "state"
      ]
    },
    "Models.Choice": {
      "type": "string",
      "description": "choice of yes or no. Use this for boolean properties.",
      "enum": [
        "Yes",
        "No"
      ],
      "x-ms-enum": {
        "name": "Choice",
        "modelAsString": true,
        "values": [
          {
            "name": "yes",
            "value": "Yes",
            "description": "Yes"
          },
          {
            "name": "no",
            "value": "No",
            "description": "No"
          }
        ]
      }
    },
    "Models.ContentProperties": {
      "type": "object",
      "description": "The content properties of the instruction.",
      "properties": {
        "semanticContent": {
          "$ref": "#/definitions/Models.SemanticContent",
          "description": "The semantic content of the instruction."
        }
      },
      "required": [
        "semanticContent"
      ]
    },
    "Models.CopilotHealth": {
      "type": "object",
      "description": "Copilot Health Response",
      "properties": {
        "message": {
          "type": "string",
          "description": "The message."
        },
        "operationStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "The operation status."
        },
        "copilotSetupInfo": {
          "$ref": "#/definitions/Models.CopilotSetupInfo",
          "description": "copilot setup info"
        },
        "errorMessage": {
          "type": "array",
          "description": "The error message.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "message",
        "operationStatus",
        "copilotSetupInfo",
        "errorMessage"
      ]
    },
    "Models.CopilotSetupInfo": {
      "type": "object",
      "description": "Copilot Setup Info",
      "properties": {
        "createAzureDataExplorerFunctionJobStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "create ADX function job status"
        },
        "registerInBuiltInstructionJobStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "register in built instruction job status"
        },
        "registerInbuiltExampleQueryJobStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "register in built example query job status"
        },
        "registerInBuiltAliasJobStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "register in built example query job status"
        },
        "registerAssistantViewJobStatus": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "register in built example query job status"
        }
      },
      "required": [
        "createAzureDataExplorerFunctionJobStatus",
        "registerInBuiltInstructionJobStatus",
        "registerInbuiltExampleQueryJobStatus",
        "registerInBuiltAliasJobStatus",
        "registerAssistantViewJobStatus"
      ]
    },
    "Models.ExampleQueryRequest": {
      "type": "object",
      "description": "The example query resource.",
      "properties": {
        "exampleId": {
          "type": "string",
          "description": "The ID of the example query.",
          "maxLength": 50,
          "pattern": "^[a-zA-Z0-9_]*$",
          "readOnly": true
        },
        "userQuestion": {
          "type": "string",
          "description": "The user question associated with the example."
        },
        "linkedInstructions": {
          "type": "array",
          "description": "The linked instructions for the example query.",
          "items": {
            "type": "string"
          }
        },
        "sampleQuery": {
          "$ref": "#/definitions/Models.SampleQuery",
          "description": "The sample query for the example."
        }
      },
      "required": [
        "exampleId",
        "userQuestion",
        "linkedInstructions",
        "sampleQuery"
      ]
    },
    "Models.FeedbackCategory": {
      "type": "string",
      "description": "Feedback category",
      "enum": [
        "Neutral",
        "ThumbUp",
        "ThumbDown"
      ],
      "x-ms-enum": {
        "name": "FeedbackCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Neutral",
            "value": "Neutral",
            "description": "Neutral feedback."
          },
          {
            "name": "ThumbUp",
            "value": "ThumbUp",
            "description": "Positive feedback."
          },
          {
            "name": "ThumbDown",
            "value": "ThumbDown",
            "description": "Negative feedback."
          }
        ]
      }
    },
    "Models.FeedbackRequest": {
      "type": "object",
      "description": "feedbackRequest",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "operation Id",
          "x-ms-mutability": [
            "update"
          ]
        },
        "conversationId": {
          "type": "string",
          "description": "conversation id"
        },
        "feedback": {
          "$ref": "#/definitions/Models.FeedbackCategory",
          "description": "The feedback"
        },
        "queryEndpoint": {
          "$ref": "#/definitions/Models.QueryEndpoint",
          "description": "QueryEndpoint"
        }
      },
      "required": [
        "operationId",
        "feedback",
        "queryEndpoint"
      ]
    },
    "Models.Instruction": {
      "type": "object",
      "description": "This is the request model for Instruction",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id for the instruction",
          "maxLength": 60,
          "pattern": "^[a-zA-Z0-9_]*$",
          "readOnly": true
        },
        "instructionId": {
          "type": "string",
          "description": "intruction Id for the instruction"
        },
        "instructionVersion": {
          "type": "string",
          "description": "Version for the instruction"
        },
        "domain": {
          "$ref": "#/definitions/Models.InstrustionDomainEnum",
          "description": "Domain for the instruction"
        },
        "subDomain": {
          "$ref": "#/definitions/Models.InstructionSubDomainEnum",
          "description": "Sub-domain for the instruction"
        },
        "category": {
          "$ref": "#/definitions/Models.InstructionCategoryEnum",
          "description": "Category for the instruction"
        },
        "language": {
          "$ref": "#/definitions/Models.InstructionLanguageEnum",
          "description": "The language of the instruction."
        },
        "retrieval": {
          "$ref": "#/definitions/Models.RetrievalProperties",
          "description": "The retrieval properties of the instruction."
        },
        "content": {
          "$ref": "#/definitions/Models.ContentProperties",
          "description": "The content properties of the instruction."
        },
        "relationships": {
          "$ref": "#/definitions/Models.Relationships",
          "description": "The relationships of the instruction."
        },
        "administrativeDetails": {
          "$ref": "#/definitions/Models.AdministrativeDetails",
          "description": "audit record for the instruction"
        },
        "state": {
          "$ref": "#/definitions/Models.ResourceState",
          "description": "state for the instruction"
        }
      },
      "required": [
        "id",
        "instructionId",
        "instructionVersion",
        "domain",
        "subDomain",
        "category",
        "language",
        "retrieval",
        "content",
        "relationships",
        "administrativeDetails",
        "state"
      ]
    },
    "Models.InstructionCategoryEnum": {
      "type": "string",
      "description": "Instruction Category Enums",
      "enum": [
        "Transactional",
        "Analytical",
        "Trend",
        "KPI"
      ],
      "x-ms-enum": {
        "name": "InstructionCategoryEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Transactional",
            "value": "Transactional",
            "description": "Transactional instruction category"
          },
          {
            "name": "Analytical",
            "value": "Analytical",
            "description": "Analytical instruction category"
          },
          {
            "name": "Trend",
            "value": "Trend",
            "description": "Trend instruction category"
          },
          {
            "name": "KPI",
            "value": "KPI",
            "description": "KPI instruction category"
          }
        ]
      }
    },
    "Models.InstructionLanguageEnum": {
      "type": "string",
      "description": "Instruction Language Enums",
      "enum": [
        "EN"
      ],
      "x-ms-enum": {
        "name": "InstructionLanguageEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "EN",
            "value": "EN",
            "description": "English"
          }
        ]
      }
    },
    "Models.InstructionSubDomainEnum": {
      "type": "string",
      "description": "Instruction Sub Domain Enums",
      "enum": [
        "Production",
        "Quality",
        "Maintenance",
        "Inventory",
        "Downtime",
        "Scrap",
        "Mixed"
      ],
      "x-ms-enum": {
        "name": "InstructionSubDomainEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Production",
            "value": "Production",
            "description": "Production sub-domain"
          },
          {
            "name": "Quality",
            "value": "Quality",
            "description": "Quality sub-domain"
          },
          {
            "name": "Maintenance",
            "value": "Maintenance",
            "description": "Maintenance sub-domain"
          },
          {
            "name": "Inventory",
            "value": "Inventory",
            "description": "Inventory sub-domain"
          },
          {
            "name": "Downtime",
            "value": "Downtime",
            "description": "Downtime sub-domain"
          },
          {
            "name": "Scrap",
            "value": "Scrap",
            "description": "Scrap sub-domain"
          },
          {
            "name": "Mixed",
            "value": "Mixed",
            "description": "Mixed sub-domain"
          }
        ]
      }
    },
    "Models.InstrustionDomainEnum": {
      "type": "string",
      "description": "Instruction Sub Domain Enums",
      "enum": [
        "MOM",
        "SCM",
        "DE"
      ],
      "x-ms-enum": {
        "name": "InstrustionDomainEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "MOM",
            "value": "MOM",
            "description": "Manufacturing Operations Management"
          },
          {
            "name": "SCM",
            "value": "SCM",
            "description": "Supply Chain Management"
          },
          {
            "name": "DE",
            "value": "DE",
            "description": "Digital Engineering"
          }
        ]
      }
    },
    "Models.OperationResponse": {
      "type": "object",
      "description": "Operation Response Model",
      "properties": {
        "status": {
          "$ref": "#/definitions/Models.OperationStatusValue",
          "description": "The operation status."
        },
        "id": {
          "type": "string",
          "description": "The operation id.",
          "x-ms-mutability": [
            "update"
          ]
        },
        "errorMessage": {
          "type": "array",
          "description": "The error message.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "status",
        "id",
        "errorMessage"
      ]
    },
    "Models.OperationStatusValue": {
      "type": "string",
      "description": "Operation Status",
      "enum": [
        "Accepted",
        "InProgress",
        "TransientFailure",
        "Succeeded",
        "Failed",
        "Deleting",
        "Canceled",
        "Unknown",
        "Skipped"
      ],
      "x-ms-enum": {
        "name": "OperationStatusValue",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The operation is Accepted."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The operation is InProgress."
          },
          {
            "name": "TransientFailure",
            "value": "TransientFailure",
            "description": "The operation is in a transient failure state."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation is Succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation is Failed."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The operation is Canceling."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation is Canceled."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The operation is in a permanent failure state."
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "The operation is Skipped."
          }
        ]
      }
    },
    "Models.QueryEndpoint": {
      "type": "string",
      "description": "Query endpoint",
      "enum": [
        "V3",
        "Assistant"
      ],
      "x-ms-enum": {
        "name": "QueryEndpoint",
        "modelAsString": true,
        "values": [
          {
            "name": "V3",
            "value": "V3",
            "description": "V3 endpoint"
          },
          {
            "name": "Assistant",
            "value": "Assistant",
            "description": "Assistant endpoint"
          }
        ]
      }
    },
    "Models.QueryResponse": {
      "type": "object",
      "description": "Query Response Result",
      "properties": {
        "result": {
          "type": "string",
          "description": "Resultant Query Query or Query query execution response (JArray string)"
        },
        "summary": {
          "type": "string",
          "description": "Summary of the Resultant Query Query or Query query execution response (JArray string)"
        }
      }
    },
    "Models.Relationships": {
      "type": "object",
      "description": "Relationships",
      "properties": {
        "dependencies": {
          "type": "array",
          "description": "List of dependent instructions",
          "items": {
            "type": "string"
          }
        },
        "exclusions": {
          "type": "array",
          "description": "List of InstructionIds to be excluded",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "dependencies",
        "exclusions"
      ]
    },
    "Models.ResourceState": {
      "type": "string",
      "description": "Resource Status Enums",
      "enum": [
        "Active",
        "Inactive"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "Resource is active"
          },
          {
            "name": "Inactive",
            "value": "Inactive",
            "description": "Resource is inactive"
          }
        ]
      }
    },
    "Models.RetrievalProperties": {
      "type": "object",
      "description": "The retrieval properties of the instruction.",
      "properties": {
        "subTopics": {
          "type": "array",
          "description": "The sub-topics related to the instruction.",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "description": "The keywords associated with the instruction.",
          "items": {
            "type": "string"
          }
        },
        "sampleQuestions": {
          "type": "array",
          "description": "The sample questions for the instruction.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "subTopics",
        "keywords",
        "sampleQuestions"
      ]
    },
    "Models.SampleQuery": {
      "type": "object",
      "description": "The sample query resource.",
      "properties": {
        "language": {
          "type": "string",
          "description": "The query language."
        },
        "query": {
          "type": "string",
          "description": "The query string."
        }
      },
      "required": [
        "language",
        "query"
      ]
    },
    "Models.SemanticContent": {
      "type": "object",
      "description": "The semantic content of the instruction.",
      "properties": {
        "context": {
          "type": "string",
          "description": "The content of the instruction."
        },
        "steps": {
          "type": "string",
          "description": "The source of the instruction."
        }
      },
      "required": [
        "context",
        "steps"
      ]
    },
    "Models.UserQueryRequest": {
      "type": "object",
      "description": "Query Response",
      "properties": {
        "ask": {
          "type": "string",
          "description": "User query in natural language"
        }
      },
      "required": [
        "ask"
      ]
    },
    "PagedAlias": {
      "type": "object",
      "description": "Paged collection of Alias items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Alias items on this page",
          "items": {
            "$ref": "#/definitions/Models.Alias"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedExampleQueryRequest": {
      "type": "object",
      "description": "Paged collection of ExampleQueryRequest items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExampleQueryRequest items on this page",
          "items": {
            "$ref": "#/definitions/Models.ExampleQueryRequest"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedInstruction": {
      "type": "object",
      "description": "Paged collection of Instruction items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instruction items on this page",
          "items": {
            "$ref": "#/definitions/Models.Instruction"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
