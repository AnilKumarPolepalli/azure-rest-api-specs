{
  "swagger": "2.0",
  "info": {
    "title": "Resource Mover Service API",
    "version": "2023-08-01",
    "description": "A first party Azure service orchestrating the move of Azure resources from one Azure region to another or between zones within a region.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "MoveCollections"
    },
    {
      "name": "MoveResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.Migrate/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/moveCollections": {
      "get": {
        "operationId": "MoveCollections_ListMoveCollectionsBySubscription",
        "tags": [
          "MoveCollections"
        ],
        "description": "Get all the Move Collections in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveCollectionResultList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_ListMoveCollectionsBySubscription": {
            "$ref": "./examples/MoveCollections_ListMoveCollectionsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections": {
      "get": {
        "operationId": "MoveCollections_ListMoveCollectionsByResourceGroup",
        "tags": [
          "MoveCollections"
        ],
        "description": "Get all the Move Collections in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveCollectionResultList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_ListMoveCollectionsByResourceGroup": {
            "$ref": "./examples/MoveCollections_ListMoveCollectionsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}": {
      "get": {
        "operationId": "MoveCollections_Get",
        "tags": [
          "MoveCollections"
        ],
        "description": "Gets the move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Get": {
            "$ref": "./examples/MoveCollections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MoveCollections_Create",
        "tags": [
          "MoveCollections"
        ],
        "description": "Creates or updates a move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MoveCollection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MoveCollection"
            }
          },
          "201": {
            "description": "Resource 'MoveCollection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MoveCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Create": {
            "$ref": "./examples/MoveCollections_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "MoveCollections_Update",
        "tags": [
          "MoveCollections"
        ],
        "description": "Updates a move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMoveCollectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Update": {
            "$ref": "./examples/MoveCollections_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "MoveCollections_Delete",
        "tags": [
          "MoveCollections"
        ],
        "description": "Deletes a move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Delete": {
            "$ref": "./examples/MoveCollections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/bulkRemove": {
      "post": {
        "operationId": "MoveCollections_BulkRemove",
        "tags": [
          "MoveCollections"
        ],
        "description": "Removes the set of move resources included in the request body from move collection. The orchestration is done by service. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkRemoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_BulkRemove": {
            "$ref": "./examples/MoveCollections_BulkRemove.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/commit": {
      "post": {
        "operationId": "MoveCollections_Commit",
        "tags": [
          "MoveCollections"
        ],
        "description": "Commits the set of resources included in the request body. The commit operation is triggered on the moveResources in the moveState 'CommitPending' or 'CommitFailed', on a successful completion the moveResource moveState do a transition to Committed. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Commit": {
            "$ref": "./examples/MoveCollections_Commit.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/discard": {
      "post": {
        "operationId": "MoveCollections_Discard",
        "tags": [
          "MoveCollections"
        ],
        "description": "Discards the set of resources included in the request body. The discard operation is triggered on the moveResources in the moveState 'CommitPending' or 'DiscardFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DiscardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Discard": {
            "$ref": "./examples/MoveCollections_Discard.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/initiateMove": {
      "post": {
        "operationId": "MoveCollections_InitiateMove",
        "tags": [
          "MoveCollections"
        ],
        "description": "Moves the set of resources included in the request body. The move operation is triggered after the moveResources are in the moveState 'MovePending' or 'MoveFailed', on a successful completion the moveResource moveState do a transition to CommitPending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResourceMoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_InitiateMove": {
            "$ref": "./examples/MoveCollections_InitiateMove.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/moveResources": {
      "get": {
        "operationId": "MoveResources_List",
        "tags": [
          "MoveResources"
        ],
        "description": "Lists the Move Resources in the move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. For example, you can use $filter=Properties/ProvisioningState eq 'Succeeded'.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveResources_List": {
            "$ref": "./examples/MoveResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/moveResources/{moveResourceName}": {
      "get": {
        "operationId": "MoveResources_Get",
        "tags": [
          "MoveResources"
        ],
        "description": "Gets the Move Resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "moveResourceName",
            "in": "path",
            "description": "The Move Resource Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MoveResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveResources_Get": {
            "$ref": "./examples/MoveResources_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MoveResources_Create",
        "tags": [
          "MoveResources"
        ],
        "description": "Creates or updates a Move Resource in the move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "moveResourceName",
            "in": "path",
            "description": "The Move Resource Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MoveResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MoveResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveResources_Create": {
            "$ref": "./examples/MoveResources_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MoveResources_Delete",
        "tags": [
          "MoveResources"
        ],
        "description": "Deletes a Move Resource from the move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "moveResourceName",
            "in": "path",
            "description": "The Move Resource Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveResources_Delete": {
            "$ref": "./examples/MoveResources_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/prepare": {
      "post": {
        "operationId": "MoveCollections_Prepare",
        "tags": [
          "MoveCollections"
        ],
        "description": "Initiates prepare for the set of resources included in the request body. The prepare operation is on the moveResources that are in the moveState 'PreparePending' or 'PrepareFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PrepareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_Prepare": {
            "$ref": "./examples/MoveCollections_Prepare.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/requiredFor": {
      "get": {
        "operationId": "MoveCollections_ListRequiredFor",
        "tags": [
          "MoveCollections"
        ],
        "description": "List of the move resources for which an arm resource is required for.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "The sourceId for which the api is invoked.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequiredForResourcesCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RequiredFor_Get": {
            "$ref": "./examples/RequiredFor_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/resolveDependencies": {
      "post": {
        "operationId": "MoveCollections_ResolveDependencies",
        "tags": [
          "MoveCollections"
        ],
        "description": "Computes, resolves and validate the dependencies of the moveResources in the move collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MoveCollections_ResolveDependencies": {
            "$ref": "./examples/MoveCollections_ResolveDependencies.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/unresolvedDependencies": {
      "get": {
        "operationId": "UnresolvedDependencies_Get",
        "tags": [
          "MoveCollections"
        ],
        "description": "Gets a list of unresolved dependencies.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "moveCollectionName",
            "in": "path",
            "description": "The Move Collection Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dependencyLevel",
            "in": "query",
            "description": "Defines the dependency level.",
            "required": false,
            "type": "string",
            "enum": [
              "Direct",
              "Descendant"
            ],
            "x-ms-enum": {
              "name": "DependencyLevel",
              "modelAsString": true,
              "values": [
                {
                  "name": "Direct",
                  "value": "Direct"
                },
                {
                  "name": "Descendant",
                  "value": "Descendant"
                }
              ]
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option. For example, you can use $orderby=Count desc.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. For example, $apply=filter(count eq 2).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UnresolvedDependencyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UnresolvedDependencies_Get": {
            "$ref": "./examples/UnresolvedDependencies_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AffectedMoveResource": {
      "type": "object",
      "description": "The RP custom operation error info.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The affected move resource id.",
          "readOnly": true
        },
        "sourceId": {
          "type": "string",
          "description": "The affected move resource source id.",
          "readOnly": true
        },
        "moveResources": {
          "type": "array",
          "description": "The affected move resources.",
          "items": {
            "$ref": "#/definitions/AffectedMoveResource"
          },
          "readOnly": true
        }
      }
    },
    "AutomaticResolutionProperties": {
      "type": "object",
      "description": "Defines the properties for automatic resolution.",
      "properties": {
        "moveResourceId": {
          "type": "string",
          "description": "Gets the MoveResource ARM ID of\nthe dependent resource if the resolution type is Automatic."
        }
      }
    },
    "AvailabilitySetResourceSettings": {
      "type": "object",
      "description": "Gets or sets the availability set resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "faultDomain": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target fault domain.",
          "minimum": 1
        },
        "updateDomain": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the target update domain.",
          "minimum": 1,
          "maximum": 20
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/availabilitySets"
    },
    "AzureResourceReference": {
      "type": "object",
      "description": "Defines reference to an Azure resource.",
      "properties": {
        "sourceArmResourceId": {
          "type": "string",
          "description": "Gets the ARM resource ID of the tracked resource being referenced."
        }
      },
      "required": [
        "sourceArmResourceId"
      ]
    },
    "BulkRemoveRequest": {
      "type": "object",
      "description": "Defines the request body for bulk remove of move resources operation.",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the operation needs to only run pre-requisite."
        },
        "moveResources": {
          "type": "array",
          "description": "Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.",
          "items": {
            "type": "string"
          }
        },
        "moveResourceInputType": {
          "$ref": "#/definitions/MoveResourceInputType",
          "description": "Defines the move resource input type."
        }
      }
    },
    "CommitRequest": {
      "type": "object",
      "description": "Defines the request body for commit operation.",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the operation needs to only run pre-requisite."
        },
        "moveResources": {
          "type": "array",
          "description": "Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.",
          "items": {
            "type": "string"
          }
        },
        "moveResourceInputType": {
          "$ref": "#/definitions/MoveResourceInputType",
          "description": "Defines the move resource input type."
        }
      },
      "required": [
        "moveResources"
      ]
    },
    "DependencyType": {
      "type": "string",
      "description": "Defines the dependency type.",
      "enum": [
        "RequiredForPrepare",
        "RequiredForMove"
      ],
      "x-ms-enum": {
        "name": "DependencyType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequiredForPrepare",
            "value": "RequiredForPrepare"
          },
          {
            "name": "RequiredForMove",
            "value": "RequiredForMove"
          }
        ]
      }
    },
    "DiscardRequest": {
      "type": "object",
      "description": "Defines the request body for discard operation.",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the operation needs to only run pre-requisite."
        },
        "moveResources": {
          "type": "array",
          "description": "Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.",
          "items": {
            "type": "string"
          }
        },
        "moveResourceInputType": {
          "$ref": "#/definitions/MoveResourceInputType",
          "description": "Defines the move resource input type."
        }
      },
      "required": [
        "moveResources"
      ]
    },
    "DiskEncryptionSetResourceSettings": {
      "type": "object",
      "description": "Defines the disk encryption set resource settings.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/diskEncryptionSets"
    },
    "Identity": {
      "type": "object",
      "description": "Defines the MSI properties of the Move Collection.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The type of identity used for the resource mover service."
        },
        "principalId": {
          "type": "string",
          "description": "Gets or sets the principal id."
        },
        "tenantId": {
          "type": "string",
          "description": "Gets or sets the tenant id."
        }
      }
    },
    "JobName": {
      "type": "string",
      "description": "Defines the job name.",
      "enum": [
        "InitialSync"
      ],
      "x-ms-enum": {
        "name": "JobName",
        "modelAsString": true,
        "values": [
          {
            "name": "InitialSync",
            "value": "InitialSync"
          }
        ]
      }
    },
    "JobStatus": {
      "type": "object",
      "description": "Defines the job status.",
      "properties": {
        "jobName": {
          "$ref": "#/definitions/JobName",
          "description": "Defines the job name.",
          "readOnly": true
        },
        "jobProgress": {
          "type": "string",
          "description": "Gets or sets the monitoring job percentage.",
          "readOnly": true
        }
      }
    },
    "KeyVaultResourceSettings": {
      "type": "object",
      "description": "Defines the key vault resource settings.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.KeyVault/vaults"
    },
    "LBBackendAddressPoolResourceSettings": {
      "type": "object",
      "description": "Defines load balancer backend address pool properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the backend address pool name."
        }
      }
    },
    "LBFrontendIPConfigurationResourceSettings": {
      "type": "object",
      "description": "Defines load balancer frontend IP configuration properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the frontend IP configuration name."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "Gets or sets the IP address of the Load Balancer.This is only specified if a specific\nprivate IP address shall be allocated from the subnet specified in subnetRef."
        },
        "privateIpAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PrivateIP allocation method (Static/Dynamic)."
        },
        "subnet": {
          "$ref": "#/definitions/SubnetReference",
          "description": "Defines reference to subnet."
        },
        "zones": {
          "type": "string",
          "description": "Gets or sets the csv list of zones."
        }
      }
    },
    "LoadBalancerBackendAddressPoolReference": {
      "type": "object",
      "description": "Defines reference to load balancer backend address pools.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResourceReference"
        }
      ]
    },
    "LoadBalancerNatRuleReference": {
      "type": "object",
      "description": "Defines reference to load balancer NAT rules.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResourceReference"
        }
      ]
    },
    "LoadBalancerResourceSettings": {
      "type": "object",
      "description": "Defines the load balancer resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "type": "string",
          "description": "Gets or sets load balancer sku (Basic/Standard)."
        },
        "frontendIPConfigurations": {
          "type": "array",
          "description": "Gets or sets the frontend IP configurations of the load balancer.",
          "items": {
            "$ref": "#/definitions/LBFrontendIPConfigurationResourceSettings"
          },
          "x-ms-identifiers": []
        },
        "backendAddressPools": {
          "type": "array",
          "description": "Gets or sets the backend address pools of the load balancer.",
          "items": {
            "$ref": "#/definitions/LBBackendAddressPoolResourceSettings"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "zones": {
          "type": "string",
          "description": "Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given\nprecedence only if frontend IP configurations settings are not present."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Network/loadBalancers"
    },
    "ManualResolutionProperties": {
      "type": "object",
      "description": "Defines the properties for manual resolution.",
      "properties": {
        "targetId": {
          "type": "string",
          "description": "Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual."
        }
      }
    },
    "MoveCollection": {
      "type": "object",
      "description": "Define the move collection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MoveCollectionProperties",
          "description": "Defines the move collection properties.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true,
          "x-ms-client-name": "eTag"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Defines the MSI properties of the Move Collection."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MoveCollectionProperties": {
      "type": "object",
      "description": "Defines the move collection properties.",
      "properties": {
        "sourceRegion": {
          "type": "string",
          "description": "Gets or sets the source region."
        },
        "targetRegion": {
          "type": "string",
          "description": "Gets or sets the target region."
        },
        "moveRegion": {
          "type": "string",
          "description": "Gets or sets the move region which indicates the region where the VM Regional to Zonal move will be conducted."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Defines the provisioning states.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of move collection."
        },
        "moveType": {
          "$ref": "#/definitions/MoveType",
          "description": "Defines the MoveType."
        },
        "errors": {
          "$ref": "#/definitions/MoveCollectionPropertiesErrors",
          "description": "Defines the move collection errors.",
          "readOnly": true
        }
      }
    },
    "MoveCollectionPropertiesErrors": {
      "type": "object",
      "description": "Defines the move collection errors.",
      "allOf": [
        {
          "$ref": "#/definitions/MoveResourceError"
        }
      ]
    },
    "MoveCollectionResultList": {
      "type": "object",
      "description": "Defines the collection of move collections.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MoveCollection items on this page",
          "items": {
            "$ref": "#/definitions/MoveCollection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MoveErrorInfo": {
      "type": "object",
      "description": "The move custom error info.",
      "properties": {
        "moveResources": {
          "type": "array",
          "description": "The affected move resources.",
          "items": {
            "$ref": "#/definitions/AffectedMoveResource"
          },
          "readOnly": true
        }
      }
    },
    "MoveResource": {
      "type": "object",
      "description": "Defines the move resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MoveResourceProperties",
          "description": "Defines the move resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MoveResourceCollection": {
      "type": "object",
      "description": "Defines the collection of move resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MoveResource items on this page",
          "items": {
            "$ref": "#/definitions/MoveResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        },
        "summaryCollection": {
          "$ref": "#/definitions/SummaryCollection",
          "description": "Gets or sets the list of summary items and the field on which summary is done."
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the total count.",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "MoveResourceDependency": {
      "type": "object",
      "description": "Defines the dependency of the move resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets the source ARM ID of the dependent resource."
        },
        "resolutionStatus": {
          "type": "string",
          "description": "Gets the dependency resolution status."
        },
        "resolutionType": {
          "$ref": "#/definitions/ResolutionType",
          "description": "Defines the resolution type."
        },
        "dependencyType": {
          "$ref": "#/definitions/DependencyType",
          "description": "Defines the dependency type."
        },
        "manualResolution": {
          "$ref": "#/definitions/ManualResolutionProperties",
          "description": "Defines the properties for manual resolution."
        },
        "automaticResolution": {
          "$ref": "#/definitions/AutomaticResolutionProperties",
          "description": "Defines the properties for automatic resolution."
        },
        "isOptional": {
          "type": "string",
          "description": "Gets or sets a value indicating whether the dependency is optional."
        }
      }
    },
    "MoveResourceDependencyOverride": {
      "type": "object",
      "description": "Defines the dependency override of the move resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the ARM ID of the dependent resource."
        },
        "targetId": {
          "type": "string",
          "description": "Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of\nthe dependent resource."
        }
      }
    },
    "MoveResourceError": {
      "type": "object",
      "description": "An error response from the azure resource mover service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MoveResourceErrorBody",
          "description": "The move resource error body."
        }
      }
    },
    "MoveResourceErrorBody": {
      "type": "object",
      "description": "An error response from the Azure Migrate service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/MoveResourceErrorBody"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "MoveResourceInputType": {
      "type": "string",
      "description": "Defines the move resource input type.",
      "enum": [
        "MoveResourceId",
        "MoveResourceSourceId"
      ],
      "x-ms-enum": {
        "name": "MoveResourceInputType",
        "modelAsString": true,
        "values": [
          {
            "name": "MoveResourceId",
            "value": "MoveResourceId"
          },
          {
            "name": "MoveResourceSourceId",
            "value": "MoveResourceSourceId"
          }
        ]
      }
    },
    "MoveResourceProperties": {
      "type": "object",
      "description": "Defines the move resource properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Defines the provisioning states.",
          "readOnly": true
        },
        "sourceId": {
          "type": "string",
          "description": "Gets or sets the Source ARM Id of the resource."
        },
        "targetId": {
          "type": "string",
          "description": "Gets or sets the Target ARM Id of the resource.",
          "readOnly": true
        },
        "existingTargetId": {
          "type": "string",
          "description": "Gets or sets the existing target ARM Id of the resource."
        },
        "resourceSettings": {
          "$ref": "#/definitions/ResourceSettings",
          "description": "Gets or sets the resource settings."
        },
        "sourceResourceSettings": {
          "$ref": "#/definitions/ResourceSettings",
          "description": "Gets or sets the source resource settings.",
          "readOnly": true
        },
        "moveStatus": {
          "$ref": "#/definitions/MoveResourcePropertiesMoveStatus",
          "description": "Defines the move resource status.",
          "readOnly": true
        },
        "dependsOn": {
          "type": "array",
          "description": "Gets or sets the move resource dependencies.",
          "items": {
            "$ref": "#/definitions/MoveResourceDependency"
          },
          "readOnly": true
        },
        "dependsOnOverrides": {
          "type": "array",
          "description": "Gets or sets the move resource dependencies overrides.",
          "items": {
            "$ref": "#/definitions/MoveResourceDependencyOverride"
          }
        },
        "isResolveRequired": {
          "type": "boolean",
          "description": "Gets a value indicating whether the resolve action is required over the move collection.",
          "readOnly": true
        },
        "errors": {
          "$ref": "#/definitions/MoveResourcePropertiesErrors",
          "description": "Defines the move resource errors.",
          "readOnly": true
        }
      },
      "required": [
        "sourceId"
      ]
    },
    "MoveResourcePropertiesErrors": {
      "type": "object",
      "description": "Defines the move resource errors.",
      "allOf": [
        {
          "$ref": "#/definitions/MoveResourceError"
        }
      ]
    },
    "MoveResourcePropertiesMoveStatus": {
      "type": "object",
      "description": "Defines the move resource status.",
      "allOf": [
        {
          "$ref": "#/definitions/MoveResourceStatus"
        }
      ]
    },
    "MoveResourceStatus": {
      "type": "object",
      "description": "Defines the move resource status.",
      "properties": {
        "moveState": {
          "$ref": "#/definitions/MoveState",
          "description": "Defines the MoveResource states.",
          "readOnly": true
        },
        "jobStatus": {
          "$ref": "#/definitions/JobStatus",
          "description": "Defines the job status."
        },
        "errors": {
          "$ref": "#/definitions/MoveResourceError",
          "description": "An error response from the azure resource mover service."
        }
      }
    },
    "MoveState": {
      "type": "string",
      "description": "Defines the MoveResource states.",
      "enum": [
        "AssignmentPending",
        "PreparePending",
        "PrepareInProgress",
        "PrepareFailed",
        "MovePending",
        "MoveInProgress",
        "MoveFailed",
        "DiscardInProgress",
        "DiscardFailed",
        "CommitPending",
        "CommitInProgress",
        "CommitFailed",
        "Committed",
        "DeleteSourcePending",
        "ResourceMoveCompleted"
      ],
      "x-ms-enum": {
        "name": "MoveState",
        "modelAsString": true,
        "values": [
          {
            "name": "AssignmentPending",
            "value": "AssignmentPending"
          },
          {
            "name": "PreparePending",
            "value": "PreparePending"
          },
          {
            "name": "PrepareInProgress",
            "value": "PrepareInProgress"
          },
          {
            "name": "PrepareFailed",
            "value": "PrepareFailed"
          },
          {
            "name": "MovePending",
            "value": "MovePending"
          },
          {
            "name": "MoveInProgress",
            "value": "MoveInProgress"
          },
          {
            "name": "MoveFailed",
            "value": "MoveFailed"
          },
          {
            "name": "DiscardInProgress",
            "value": "DiscardInProgress"
          },
          {
            "name": "DiscardFailed",
            "value": "DiscardFailed"
          },
          {
            "name": "CommitPending",
            "value": "CommitPending"
          },
          {
            "name": "CommitInProgress",
            "value": "CommitInProgress"
          },
          {
            "name": "CommitFailed",
            "value": "CommitFailed"
          },
          {
            "name": "Committed",
            "value": "Committed"
          },
          {
            "name": "DeleteSourcePending",
            "value": "DeleteSourcePending"
          },
          {
            "name": "ResourceMoveCompleted",
            "value": "ResourceMoveCompleted"
          }
        ]
      }
    },
    "MoveType": {
      "type": "string",
      "description": "Defines the MoveType.",
      "enum": [
        "RegionToRegion",
        "RegionToZone"
      ],
      "x-ms-enum": {
        "name": "MoveType",
        "modelAsString": true,
        "values": [
          {
            "name": "RegionToRegion",
            "value": "RegionToRegion"
          },
          {
            "name": "RegionToZone",
            "value": "RegionToZone"
          }
        ]
      }
    },
    "NetworkInterfaceResourceSettings": {
      "type": "object",
      "description": "Defines the network interface resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ipConfigurations": {
          "type": "array",
          "description": "Gets or sets the IP configurations of the NIC.",
          "items": {
            "$ref": "#/definitions/NicIpConfigurationResourceSettings"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether accelerated networking is enabled."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Network/networkInterfaces"
    },
    "NetworkSecurityGroupResourceSettings": {
      "type": "object",
      "description": "Defines the NSG resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityRules": {
          "type": "array",
          "description": "Gets or sets Security rules of network security group.",
          "items": {
            "$ref": "#/definitions/NsgSecurityRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Network/networkSecurityGroups"
    },
    "NicIpConfigurationResourceSettings": {
      "type": "object",
      "description": "Defines NIC IP configuration properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the IP configuration name."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "Gets or sets the private IP address of the network interface IP Configuration."
        },
        "privateIpAllocationMethod": {
          "type": "string",
          "description": "Gets or sets the private IP address allocation method."
        },
        "subnet": {
          "$ref": "#/definitions/SubnetReference",
          "description": "Defines reference to subnet."
        },
        "primary": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this IP configuration is the primary."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "description": "Gets or sets the references of the load balancer backend address pools.",
          "items": {
            "$ref": "#/definitions/LoadBalancerBackendAddressPoolReference"
          },
          "x-ms-identifiers": [
            "sourceArmResourceId"
          ]
        },
        "loadBalancerNatRules": {
          "type": "array",
          "description": "Gets or sets the references of the load balancer NAT rules.",
          "items": {
            "$ref": "#/definitions/LoadBalancerNatRuleReference"
          },
          "x-ms-identifiers": [
            "sourceArmResourceId"
          ]
        },
        "publicIp": {
          "$ref": "#/definitions/PublicIpReference",
          "description": "Defines reference to a public IP."
        }
      }
    },
    "NsgReference": {
      "type": "object",
      "description": "Defines reference to NSG.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceReference"
        }
      ]
    },
    "NsgSecurityRule": {
      "type": "object",
      "description": "Security Rule data model for Network Security Groups.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the Security rule name."
        },
        "access": {
          "type": "string",
          "description": "Gets or sets whether network traffic is allowed or denied.\nPossible values are “Allow” and “Deny”."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets a description for this rule. Restricted to 140 chars."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "Gets or sets destination address prefix. CIDR or source IP range.\nA “*” can also be used to match all source IPs. Default tags such\nas ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "Gets or sets Destination Port or Range. Integer or range between\n0 and 65535. A “*” can also be used to match all ports."
        },
        "direction": {
          "type": "string",
          "description": "Gets or sets the direction of the rule.InBound or Outbound. The\ndirection specifies if rule will be evaluated on incoming or outgoing traffic."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the priority of the rule. The value can be between\n100 and 4096. The priority number must be unique for each rule in the collection.\nThe lower the priority number, the higher the priority of the rule."
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*)."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "Gets or sets source address prefix. CIDR or source IP range. A\n“*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,\n‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress\nrule, specifies where network traffic originates from."
        },
        "sourcePortRange": {
          "type": "string",
          "description": "Gets or sets Source Port or Range. Integer or range between 0 and\n65535. A “*” can also be used to match all ports."
        }
      }
    },
    "OperationErrorAdditionalInfo": {
      "type": "object",
      "description": "The operation error info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The error type.",
          "readOnly": true
        },
        "info": {
          "$ref": "#/definitions/MoveErrorInfo",
          "description": "The operation error info.",
          "readOnly": true
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "Operation status REST resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Operation name.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "End time.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Error stating all error details for the operation.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Custom data.",
          "additionalProperties": {},
          "readOnly": true
        }
      }
    },
    "OperationStatusError": {
      "type": "object",
      "description": "Class for operation status errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/OperationStatusError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "additionalInfo": {
          "type": "array",
          "description": "The additional info.",
          "items": {
            "$ref": "#/definitions/OperationErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "PrepareRequest": {
      "type": "object",
      "description": "Defines the request body for initiate prepare operation.",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the operation needs to only run pre-requisite."
        },
        "moveResources": {
          "type": "array",
          "description": "Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.",
          "items": {
            "type": "string"
          }
        },
        "moveResourceInputType": {
          "$ref": "#/definitions/MoveResourceInputType",
          "description": "Defines the move resource input type."
        }
      },
      "required": [
        "moveResources"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Defines the provisioning states.",
      "enum": [
        "Succeeded",
        "Updating",
        "Creating",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "ProxyResourceReference": {
      "type": "object",
      "description": "Defines reference to a proxy resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets the name of the proxy resource on the target side."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceReference"
        }
      ]
    },
    "PublicIPAddressResourceSettings": {
      "type": "object",
      "description": "Defines the public IP address resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domainNameLabel": {
          "type": "string",
          "description": "Gets or sets the domain name label."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the fully qualified domain name."
        },
        "publicIpAllocationMethod": {
          "type": "string",
          "description": "Gets or sets public IP allocation method."
        },
        "sku": {
          "type": "string",
          "description": "Gets or sets public IP sku."
        },
        "zones": {
          "type": "string",
          "description": "Gets or sets public IP zones."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Network/publicIPAddresses"
    },
    "PublicIpReference": {
      "type": "object",
      "description": "Defines reference to a public IP.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceReference"
        }
      ]
    },
    "RequiredForResourcesCollection": {
      "type": "object",
      "description": "Required for resources collection.",
      "properties": {
        "sourceIds": {
          "type": "array",
          "description": "Gets or sets the list of source Ids for which the input resource is required.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResolutionType": {
      "type": "string",
      "description": "Defines the resolution type.",
      "enum": [
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "ResolutionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Manual",
            "value": "Manual"
          },
          {
            "name": "Automatic",
            "value": "Automatic"
          }
        ]
      }
    },
    "ResourceGroupResourceSettings": {
      "type": "object",
      "description": "Defines the resource group resource settings.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "resourceGroups"
    },
    "ResourceIdentityType": {
      "type": "string",
      "description": "The type of identity used for the resource mover service.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "ResourceMoveRequest": {
      "type": "object",
      "description": "Defines the request body for resource move operation.",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the operation needs to only run pre-requisite."
        },
        "moveResources": {
          "type": "array",
          "description": "Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.",
          "items": {
            "type": "string"
          }
        },
        "moveResourceInputType": {
          "$ref": "#/definitions/MoveResourceInputType",
          "description": "Defines the move resource input type."
        }
      },
      "required": [
        "moveResources"
      ]
    },
    "ResourceSettings": {
      "type": "object",
      "description": "Gets or sets the resource settings.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type. For example, the value can be Microsoft.Compute/virtualMachines.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "targetResourceName": {
          "type": "string",
          "description": "Gets or sets the target Resource name."
        },
        "targetResourceGroupName": {
          "type": "string",
          "description": "Gets or sets the target resource group name."
        }
      },
      "discriminator": "resourceType",
      "required": [
        "resourceType"
      ]
    },
    "SqlDatabaseResourceSettings": {
      "type": "object",
      "description": "Defines the Sql Database resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zoneRedundant": {
          "$ref": "#/definitions/ZoneRedundant",
          "description": "Defines the zone redundant resource setting."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
    },
    "SqlElasticPoolResourceSettings": {
      "type": "object",
      "description": "Defines the Sql ElasticPool resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zoneRedundant": {
          "$ref": "#/definitions/ZoneRedundant",
          "description": "Defines the zone redundant resource setting."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Sql/servers/elasticPools"
    },
    "SqlServerResourceSettings": {
      "type": "object",
      "description": "Defines the SQL Server resource settings.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Sql/servers"
    },
    "SubnetReference": {
      "type": "object",
      "description": "Defines reference to subnet.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResourceReference"
        }
      ]
    },
    "SubnetResourceSettings": {
      "type": "object",
      "description": "Defines the virtual network subnets resource settings.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the Subnet name."
        },
        "addressPrefix": {
          "type": "string",
          "description": "Gets or sets address prefix for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NsgReference",
          "description": "Defines reference to NSG."
        }
      }
    },
    "Summary": {
      "type": "object",
      "description": "Summary item.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the count."
        },
        "item": {
          "type": "string",
          "description": "Gets the item."
        }
      }
    },
    "SummaryCollection": {
      "type": "object",
      "description": "Summary Collection.",
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "Gets or sets the field name on which summary is done."
        },
        "summary": {
          "type": "array",
          "description": "Gets or sets the list of summary items.",
          "items": {
            "$ref": "#/definitions/Summary"
          },
          "x-ms-identifiers": [
            "item"
          ]
        }
      }
    },
    "TargetAvailabilityZone": {
      "type": "string",
      "description": "Gets or sets the target availability zone.",
      "enum": [
        "1",
        "2",
        "3",
        "NA"
      ],
      "x-ms-enum": {
        "name": "TargetAvailabilityZone",
        "modelAsString": true,
        "values": [
          {
            "name": "1",
            "value": "1"
          },
          {
            "name": "2",
            "value": "2"
          },
          {
            "name": "3",
            "value": "3"
          },
          {
            "name": "NA",
            "value": "NA"
          }
        ]
      }
    },
    "UnresolvedDependency": {
      "type": "object",
      "description": "Unresolved dependency.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the count."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the arm id of the dependency."
        }
      }
    },
    "UnresolvedDependencyCollection": {
      "type": "object",
      "description": "Unresolved dependency collection.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UnresolvedDependency items on this page",
          "items": {
            "$ref": "#/definitions/UnresolvedDependency"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        },
        "summaryCollection": {
          "$ref": "#/definitions/SummaryCollection",
          "description": "Gets or sets the list of summary items and the field on which summary is done.",
          "readOnly": true
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the total count.",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateMoveCollectionRequest": {
      "type": "object",
      "description": "Defines the request body for updating move collection.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Defines the MSI properties of the Move Collection."
        }
      }
    },
    "VirtualMachineResourceSettings": {
      "type": "object",
      "description": "Gets or sets the virtual machine resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userManagedIdentities": {
          "type": "array",
          "description": "Gets or sets user-managed identities",
          "items": {
            "type": "string"
          }
        },
        "targetAvailabilityZone": {
          "$ref": "#/definitions/TargetAvailabilityZone",
          "description": "Gets or sets the target availability zone."
        },
        "targetVmSize": {
          "type": "string",
          "description": "Gets or sets the target virtual machine size."
        },
        "targetAvailabilitySetId": {
          "type": "string",
          "description": "Gets or sets the target availability set id for virtual machines not in an availability set at source."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "VirtualNetworkResourceSettings": {
      "type": "object",
      "description": "Defines the virtual network resource settings.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Gets or sets the Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableDdosProtection": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether gets or sets whether the\nDDOS protection should be switched on."
        },
        "addressSpace": {
          "type": "array",
          "description": "Gets or sets the address prefixes for the virtual network.",
          "items": {
            "type": "string"
          }
        },
        "dnsServers": {
          "type": "array",
          "description": "Gets or sets DHCPOptions that contains an array of DNS servers available to VMs\ndeployed in the virtual network.",
          "items": {
            "type": "string"
          }
        },
        "subnets": {
          "type": "array",
          "description": "Gets or sets List of subnets in a VirtualNetwork.",
          "items": {
            "$ref": "#/definitions/SubnetResourceSettings"
          },
          "x-ms-identifiers": [
            "/networkSecurityGroup/sourceArmResourceId"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceSettings"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Network/virtualNetworks"
    },
    "ZoneRedundant": {
      "type": "string",
      "description": "Defines the zone redundant resource setting.",
      "enum": [
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "ZoneRedundant",
        "modelAsString": true,
        "values": [
          {
            "name": "Enable",
            "value": "Enable"
          },
          {
            "name": "Disable",
            "value": "Disable"
          }
        ]
      }
    }
  },
  "parameters": {}
}
