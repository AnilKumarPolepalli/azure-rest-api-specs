{
  "swagger": "2.0",
  "info": {
    "title": "Azure Migrate Migration Service",
    "version": "2025-03-30-preview",
    "description": "Azure Migrate Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Waves"
    },
    {
      "name": "MigrationEntities"
    },
    {
      "name": "MigrationEntityGroups"
    },
    {
      "name": "MigrationSteps"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/migrationEntities": {
      "get": {
        "operationId": "MigrationEntities_ListByParent",
        "tags": [
          "MigrationEntities"
        ],
        "description": "List MigrationEntity resources by MigrateProject",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "skip-token",
            "in": "header",
            "description": "Skip Token Header.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Page Size Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter Query Parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total Record Count Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationEntityListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/migrationEntities/{migrationEntityName}": {
      "get": {
        "operationId": "MigrationEntities_Get",
        "tags": [
          "MigrationEntities"
        ],
        "description": "Get a MigrationEntity",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityName",
            "in": "path",
            "description": "Migration Entity ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "MigrationEntities_Create",
        "tags": [
          "MigrationEntities"
        ],
        "description": "Create a MigrationEntity",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityName",
            "in": "path",
            "description": "Migration Entity ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MigrationEntity' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationEntity"
            }
          },
          "201": {
            "description": "Resource 'MigrationEntity' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationEntity"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MigrationEntities_Delete",
        "tags": [
          "MigrationEntities"
        ],
        "description": "Delete a MigrationEntity",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityName",
            "in": "path",
            "description": "Migration Entity ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/migrationEntityGroups": {
      "get": {
        "operationId": "MigrationEntityGroups_ListByParent",
        "tags": [
          "MigrationEntityGroups"
        ],
        "description": "List MigrationEntityGroup resources by MigrateProject",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "skip-token",
            "in": "header",
            "description": "Skip Token Header.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Page Size Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter Query Parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total Record Count Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationEntityGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/migrationEntityGroups/{migrationEntityGroupName}": {
      "get": {
        "operationId": "MigrationEntityGroups_Get",
        "tags": [
          "MigrationEntityGroups"
        ],
        "description": "Get a MigrationEntityGroup",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityGroupName",
            "in": "path",
            "description": "Migration Entity Group ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationEntityGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "MigrationEntityGroups_Create",
        "tags": [
          "MigrationEntityGroups"
        ],
        "description": "Create a MigrationEntityGroup",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityGroupName",
            "in": "path",
            "description": "Migration Entity Group ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationEntityGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MigrationEntityGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationEntityGroup"
            }
          },
          "201": {
            "description": "Resource 'MigrationEntityGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationEntityGroup"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MigrationEntityGroups_Delete",
        "tags": [
          "MigrationEntityGroups"
        ],
        "description": "Delete a MigrationEntityGroup",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "migrationEntityGroupName",
            "in": "path",
            "description": "Migration Entity Group ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/steps": {
      "get": {
        "operationId": "MigrationSteps_ListByParent",
        "tags": [
          "MigrationSteps"
        ],
        "description": "List MigrationStep resources by MigrateProject",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "skip-token",
            "in": "header",
            "description": "Skip Token Header.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Page Size Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter Query Parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total Record Count Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationStepListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/steps/{stepName}": {
      "get": {
        "operationId": "MigrationSteps_Get",
        "tags": [
          "MigrationSteps"
        ],
        "description": "Get a MigrationStep",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "stepName",
            "in": "path",
            "description": "Migration Step ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationStep"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "MigrationSteps_Create",
        "tags": [
          "MigrationSteps"
        ],
        "description": "Create a MigrationStep",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "stepName",
            "in": "path",
            "description": "Migration Step ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationStep"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MigrationStep' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationStep"
            }
          },
          "201": {
            "description": "Resource 'MigrationStep' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MigrationStep"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MigrationSteps_Delete",
        "tags": [
          "MigrationSteps"
        ],
        "description": "Delete a MigrationStep",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "stepName",
            "in": "path",
            "description": "Migration Step ARM name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/waves": {
      "get": {
        "operationId": "Waves_ListByParent",
        "tags": [
          "Waves"
        ],
        "description": "List Wave resources by MigrateProject",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "skip-token",
            "in": "header",
            "description": "Skip Token Header.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Page Size Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter Query Parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total Record Count Query Parameter.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WaveListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{projectName}/waves/{waveName}": {
      "get": {
        "operationId": "Waves_Get",
        "tags": [
          "Waves"
        ],
        "description": "Get a Wave",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "waveName",
            "in": "path",
            "description": "Migration Wave Resource",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Wave"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Waves_Create",
        "tags": [
          "Waves"
        ],
        "description": "Create a Wave",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "waveName",
            "in": "path",
            "description": "Migration Wave Resource",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wave"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Wave' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Wave"
            }
          },
          "201": {
            "description": "Resource 'Wave' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Wave"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Waves_Delete",
        "tags": [
          "Waves"
        ],
        "description": "Delete a Wave",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "Migrate Project Name",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          },
          {
            "name": "waveName",
            "in": "path",
            "description": "Migration Wave Resource",
            "required": true,
            "type": "string",
            "pattern": "^[^<>&:\\?/#]{1,260}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzureResourceProperties": {
      "type": "object",
      "description": "Common properties for all azure tracked and proxy resources.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "Category": {
      "type": "string",
      "description": "Category defines the type of task",
      "enum": [
        "TOOLINGSETUP",
        "ENVIRONMENTPREP",
        "SECURITY",
        "NETWORKING",
        "WORKLOADAGENTINSTALL"
      ],
      "x-ms-enum": {
        "name": "Category",
        "modelAsString": true,
        "values": [
          {
            "name": "ToolingSetup",
            "value": "TOOLINGSETUP",
            "description": "Tooling setup task"
          },
          {
            "name": "EnvironmentPrep",
            "value": "ENVIRONMENTPREP",
            "description": "Environment preparation task"
          },
          {
            "name": "Security",
            "value": "SECURITY",
            "description": "Security task"
          },
          {
            "name": "Networking",
            "value": "NETWORKING",
            "description": "Networking task"
          },
          {
            "name": "WorkloadAgentInstall",
            "value": "WORKLOADAGENTINSTALL",
            "description": "Workload agent installation task"
          }
        ]
      }
    },
    "Items": {
      "type": "string",
      "description": "Items Enum",
      "enum": [
        "ServerDiscovery",
        "ServerAssessment",
        "ServerMigration",
        "Cloudamize",
        "Turbonomic",
        "Zerto",
        "CorentTech",
        "ServerAssessmentV1",
        "ServerMigration_Replication",
        "Carbonite",
        "DataMigrationAssistant",
        "DatabaseMigrationService",
        "Device42",
        "JetStream",
        "RackWare",
        "UnifyCloud",
        "Flexera",
        "ServerDiscovery_Import",
        "Lakeside",
        "AppServiceMigrationAssistant",
        "Movere",
        "CloudSphere",
        "Modernization",
        "ServerMigration_DataReplication",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "Items",
        "modelAsString": true,
        "values": [
          {
            "name": "ServerDiscovery",
            "value": "ServerDiscovery",
            "description": "ServerDiscovery"
          },
          {
            "name": "ServerAssessment",
            "value": "ServerAssessment",
            "description": "ServerAssessment"
          },
          {
            "name": "ServerMigration",
            "value": "ServerMigration",
            "description": "ServerMigration"
          },
          {
            "name": "Cloudamize",
            "value": "Cloudamize",
            "description": "Cloudamize"
          },
          {
            "name": "Turbonomic",
            "value": "Turbonomic",
            "description": "Turbonomic"
          },
          {
            "name": "Zerto",
            "value": "Zerto",
            "description": "Zerto"
          },
          {
            "name": "CorentTech",
            "value": "CorentTech",
            "description": "CorentTech"
          },
          {
            "name": "ServerAssessmentV1",
            "value": "ServerAssessmentV1",
            "description": "ServerAssessmentV1"
          },
          {
            "name": "ServerMigration_Replication",
            "value": "ServerMigration_Replication",
            "description": "ServerMigration_Replication"
          },
          {
            "name": "Carbonite",
            "value": "Carbonite",
            "description": "Carbonite"
          },
          {
            "name": "DataMigrationAssistant",
            "value": "DataMigrationAssistant",
            "description": "DataMigrationAssistant"
          },
          {
            "name": "DatabaseMigrationService",
            "value": "DatabaseMigrationService",
            "description": "DatabaseMigrationService"
          },
          {
            "name": "Device42",
            "value": "Device42",
            "description": "Device42"
          },
          {
            "name": "JetStream",
            "value": "JetStream",
            "description": "JetStream"
          },
          {
            "name": "RackWare",
            "value": "RackWare",
            "description": "RackWare"
          },
          {
            "name": "UnifyCloud",
            "value": "UnifyCloud",
            "description": "UnifyCloud"
          },
          {
            "name": "Flexera",
            "value": "Flexera",
            "description": "Flexera"
          },
          {
            "name": "ServerDiscovery_Import",
            "value": "ServerDiscovery_Import",
            "description": "ServerDiscovery_Import"
          },
          {
            "name": "Lakeside",
            "value": "Lakeside",
            "description": "Lakeside"
          },
          {
            "name": "AppServiceMigrationAssistant",
            "value": "AppServiceMigrationAssistant",
            "description": "AppServiceMigrationAssistant"
          },
          {
            "name": "Movere",
            "value": "Movere",
            "description": "Movere"
          },
          {
            "name": "CloudSphere",
            "value": "CloudSphere",
            "description": "CloudSphere"
          },
          {
            "name": "Modernization",
            "value": "Modernization",
            "description": "Modernization"
          },
          {
            "name": "ServerMigration_DataReplication",
            "value": "ServerMigration_DataReplication",
            "description": "ServerMigration_DataReplication"
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown"
          }
        ]
      }
    },
    "MigrateProject": {
      "type": "object",
      "description": "A Migrate project Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrateProjectProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MigrateProjectProperties": {
      "type": "object",
      "description": "Properties of a migrate project.",
      "properties": {
        "registeredTools": {
          "type": "array",
          "description": "Register tools inside project.",
          "items": {
            "$ref": "#/definitions/Items"
          },
          "readOnly": true
        },
        "serviceEndpoint": {
          "type": "string",
          "description": "Service endpoint."
        },
        "summary": {
          "type": "object",
          "description": "Project summary.",
          "additionalProperties": {
            "$ref": "#/definitions/ProjectSummary"
          },
          "readOnly": true
        },
        "lastSummaryRefreshedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last summary refresh time.",
          "readOnly": true
        },
        "refreshSummaryState": {
          "$ref": "#/definitions/RefreshSummaryState",
          "description": "Refresh summary state.",
          "readOnly": true
        },
        "utilityStorageAccountId": {
          "type": "string",
          "description": "Utility storage account id."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Gets or sets the state of public network access."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Gets the private endpoint connections.",
          "items": {
            "$ref": "../../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    },
    "MigrationEntity": {
      "type": "object",
      "description": "Migration Entity resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationEntityProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MigrationEntityGroup": {
      "type": "object",
      "description": "Migration Entity Group resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationEntityGroupProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MigrationEntityGroupListResult": {
      "type": "object",
      "description": "The response of a MigrationEntityGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MigrationEntityGroup items on this page",
          "items": {
            "$ref": "#/definitions/MigrationEntityGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MigrationEntityGroupMigrationStatus": {
      "type": "string",
      "description": "Migration Entity Group Migration Status.",
      "enum": [
        "New",
        "InProgress",
        "AtRisk",
        "Failed",
        "Cancelled",
        "Completed",
        "None"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityGroupMigrationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "In progress"
          },
          {
            "name": "AtRisk",
            "value": "AtRisk",
            "description": "At Risk"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Cancelled"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed"
          },
          {
            "name": "None",
            "value": "None",
            "description": "None"
          }
        ]
      }
    },
    "MigrationEntityGroupProperties": {
      "type": "object",
      "description": "Migration Entity Group Properties class.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "applicationId": {
          "type": "string",
          "format": "arm-id",
          "description": "Application id ",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApplicationMigration/discoveryHubs/applications"
              }
            ]
          }
        },
        "applicationDisplayName": {
          "type": "string",
          "description": "Display Name of the Workload."
        },
        "associatedAssessmentIds": {
          "type": "array",
          "description": "Associated Assessment Id",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Migrate/assessmentProjects"
                }
              ]
            }
          }
        },
        "waveId": {
          "type": "array",
          "description": "associated Wave Id",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Migrate/migrateProjects/waves"
                }
              ]
            }
          }
        },
        "migrationStatus": {
          "$ref": "#/definitions/MigrationEntityGroupMigrationStatus",
          "description": "Migration Entity Group Status"
        }
      },
      "required": [
        "applicationId",
        "applicationDisplayName",
        "migrationStatus"
      ]
    },
    "MigrationEntityListResult": {
      "type": "object",
      "description": "The response of a MigrationEntity list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MigrationEntity items on this page",
          "items": {
            "$ref": "#/definitions/MigrationEntity"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MigrationEntityMigrationStage": {
      "type": "string",
      "description": "Migration Entity Migration Stage.",
      "enum": [
        "New",
        "Preparation",
        "TestMigration",
        "Migration"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityMigrationStage",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New."
          },
          {
            "name": "Preparation",
            "value": "Preparation",
            "description": "Preparation."
          },
          {
            "name": "TestMigration",
            "value": "TestMigration",
            "description": "Test Migration."
          },
          {
            "name": "Migration",
            "value": "Migration",
            "description": "Migration."
          }
        ]
      }
    },
    "MigrationEntityMigrationStatus": {
      "type": "string",
      "description": "Migration Entity Migration Status.",
      "enum": [
        "New",
        "InProgress",
        "AtRisk",
        "Failed",
        "Cancelled",
        "Completed",
        "None"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityMigrationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "In progress"
          },
          {
            "name": "AtRisk",
            "value": "AtRisk",
            "description": "At Risk"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Cancelled"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed"
          },
          {
            "name": "None",
            "value": "None",
            "description": "None"
          }
        ]
      }
    },
    "MigrationEntityPlanningStatus": {
      "type": "string",
      "description": "Migration Entity Planning Status.",
      "enum": [
        "New",
        "InProgress",
        "AtRisk",
        "Failed",
        "Cancelled",
        "Completed",
        "None"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityPlanningStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "In progress"
          },
          {
            "name": "AtRisk",
            "value": "AtRisk",
            "description": "At Risk"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Cancelled"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed"
          },
          {
            "name": "None",
            "value": "None",
            "description": "None"
          }
        ]
      }
    },
    "MigrationEntityProperties": {
      "type": "object",
      "description": "Migration Entity Properties class.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "partnerResourceArmId": {
          "type": "string",
          "description": "ARM Resource Identifier for the partner resource."
        },
        "targetAzureResourceArmId": {
          "type": "string",
          "description": "target Azure Resource ARM Id."
        },
        "associatedInventoryResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "inventory resource id ",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.OffAzure/VMwareSites"
              },
              {
                "type": "Microsoft.OffAzure/HyperVSites"
              },
              {
                "type": "Microsoft.OffAzure/serversites"
              },
              {
                "type": "Microsoft.OffAzure/MasterSites"
              }
            ]
          }
        },
        "inventoryDisplayName": {
          "type": "string",
          "description": "Display Name of the Workload."
        },
        "associatedAssessmentIds": {
          "type": "array",
          "description": "Associated Assessment Id",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Migrate/assessmentProjects"
                }
              ]
            }
          }
        },
        "waveIds": {
          "type": "string",
          "format": "arm-id",
          "description": "associated Wave Id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Migrate/migrateProjects/waves"
              }
            ]
          }
        },
        "migrationEntityGroupIds": {
          "type": "array",
          "description": "associated Migration Entity Group Id",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Migrate/migrateProjects/migrationEntityGroups"
                }
              ]
            }
          }
        },
        "planningCompletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Planning completion time for Migration Entity."
        },
        "resourceType": {
          "type": "string",
          "description": "Migration Entity Type."
        },
        "readiness": {
          "$ref": "#/definitions/MigrationEntityReadiness",
          "description": "Readiness of the Migration Entity."
        },
        "target": {
          "$ref": "#/definitions/MigrationEntityTarget",
          "description": "Target of the Migration Entity."
        },
        "migrationStrategy": {
          "$ref": "#/definitions/Strategy",
          "description": "Strategy of Migration Entity."
        },
        "migrationStage": {
          "$ref": "#/definitions/MigrationEntityMigrationStage",
          "description": "Stage of Migration Entity."
        },
        "migrationStatus": {
          "$ref": "#/definitions/MigrationEntityMigrationStatus",
          "description": "Status of Migration Entity."
        },
        "planningStatus": {
          "$ref": "#/definitions/MigrationEntityPlanningStatus",
          "description": "Planning Status of Migration Entity."
        }
      },
      "required": [
        "associatedInventoryResourceId",
        "inventoryDisplayName",
        "resourceType",
        "readiness",
        "target",
        "migrationStrategy",
        "migrationStage",
        "migrationStatus",
        "planningStatus"
      ]
    },
    "MigrationEntityReadiness": {
      "type": "string",
      "description": "Readiness of the Migration Entity.",
      "enum": [
        "Ready",
        "NotReady",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityReadiness",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Ready. Indicates the Migration Entity is ready."
          },
          {
            "name": "NotReady",
            "value": "NotReady",
            "description": "Not Ready. Indicates the Migration Entity is not ready."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown. Indicates the Migration Entity readiness is unknown."
          }
        ]
      }
    },
    "MigrationEntityTarget": {
      "type": "string",
      "description": "The target of the Migration Entity.",
      "enum": [
        "AzureVM",
        "AzureSQLMI",
        "AzureSQLDB",
        "Others"
      ],
      "x-ms-enum": {
        "name": "MigrationEntityTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureVm",
            "value": "AzureVM",
            "description": "AzureVM. Indicates the Migration Entity target is Azure VM."
          },
          {
            "name": "AzureSqlMi",
            "value": "AzureSQLMI",
            "description": "AzureVMSS. Indicates the Migration Entity target is Azure SQL Managed Instance."
          },
          {
            "name": "AzureSqlDb",
            "value": "AzureSQLDB",
            "description": "AzureSQLMI. Indicates the Migration Entity target is Azure SQL Database."
          },
          {
            "name": "Others",
            "value": "Others",
            "description": "AzureSQLDB. Indicates the Migration Entity target is Others"
          }
        ]
      }
    },
    "MigrationStep": {
      "type": "object",
      "description": "Steps resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationStepProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MigrationStepListResult": {
      "type": "object",
      "description": "The response of a MigrationStep list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MigrationStep items on this page",
          "items": {
            "$ref": "#/definitions/MigrationStep"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MigrationStepProperties": {
      "type": "object",
      "description": "Migration Step Properties class.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "associatedWaveId": {
          "type": "string",
          "format": "arm-id",
          "description": "associated Wave Id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Migrate/migrateProjects/waves"
              }
            ]
          }
        },
        "associatedMigrationEntityId": {
          "type": "string",
          "format": "arm-id",
          "description": "Migration Entity Id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Migrate/migrateProjects/migrationEntities"
              }
            ]
          }
        },
        "associatedMigrationEntityGroupId": {
          "type": "string",
          "format": "arm-id",
          "description": "MIgration Entity Group Id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Migrate/migrateProjects/migrationEntityGroups"
              }
            ]
          }
        },
        "stage": {
          "$ref": "#/definitions/StepStage",
          "description": "Step Stage"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType",
          "description": "Task Type"
        },
        "category": {
          "$ref": "#/definitions/Category",
          "description": "Category"
        },
        "status": {
          "$ref": "#/definitions/TaskStatus",
          "description": "Task Status"
        }
      },
      "required": [
        "stage",
        "taskType",
        "category",
        "status"
      ]
    },
    "ProjectSummary": {
      "type": "object",
      "description": "Project summary.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type.",
          "readOnly": true
        },
        "refreshSummaryState": {
          "$ref": "#/definitions/RefreshSummaryState",
          "description": "Refresh summary state."
        },
        "lastSummaryRefreshedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last summary refresh time."
        },
        "extendedSummary": {
          "type": "object",
          "description": "Extended summary.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource provisioning Successful."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource provisioning Failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource provisioning Canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource is being Provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Resource is being Updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being Deleted."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource is being Accepted."
          }
        ]
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Gets or sets the state of public network access.",
      "enum": [
        "NotSpecified",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "NotSpecified"
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Disabled"
          }
        ]
      }
    },
    "RefreshSummaryState": {
      "type": "string",
      "description": "Refresh summary state.",
      "enum": [
        "Started",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "RefreshSummaryState",
        "modelAsString": true,
        "values": [
          {
            "name": "Started",
            "value": "Started",
            "description": "Started"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          }
        ]
      }
    },
    "StepStage": {
      "type": "string",
      "description": "Pre Migration, Post Migration, Planning.",
      "enum": [
        "Pre Migration",
        "Post  Migration",
        "Planning"
      ],
      "x-ms-enum": {
        "name": "StepStage",
        "modelAsString": true,
        "values": [
          {
            "name": "PreMigration",
            "value": "Pre Migration",
            "description": "Pre Migration."
          },
          {
            "name": "PostMigration",
            "value": "Post  Migration",
            "description": "Post Migration."
          },
          {
            "name": "Planning",
            "value": "Planning",
            "description": "Planning"
          }
        ]
      }
    },
    "Strategy": {
      "type": "string",
      "description": "Strategy for migration to Azure",
      "enum": [
        "Rehost",
        "Refactor",
        "Rearchitect",
        "Rebuild",
        "Replace",
        "Retire",
        "Retain"
      ],
      "x-ms-enum": {
        "name": "Strategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Rehost",
            "value": "Rehost",
            "description": "Rehost: Also known as 'lift and shift', this strategy involves moving existing applications to Azure without modification."
          },
          {
            "name": "Refactor",
            "value": "Refactor",
            "description": "Refactor: Often referred to as 'lift, tinker, and shift', this involves making minor modifications to the application to take advantage of Azure's cloud capabilities."
          },
          {
            "name": "Rearchitect",
            "value": "Rearchitect",
            "description": "Rearchitect: This approach involves significant changes to the application's architecture to fully utilize cloud-native features and scalability of Azure."
          },
          {
            "name": "Rebuild",
            "value": "Rebuild",
            "description": "Rebuild: Involves completely redesigning and rewriting the application from scratch to be cloud-native, leveraging Azure's advanced services."
          },
          {
            "name": "Replace",
            "value": "Replace",
            "description": "Replace: This strategy involves discarding the existing application and replacing it with a new Azure solution or a SaaS platform."
          },
          {
            "name": "Retire",
            "value": "Retire",
            "description": "Retire: This strategy involves discarding the existing application and replacing it with a new Azure solution or a SaaS platform."
          },
          {
            "name": "Retain",
            "value": "Retain",
            "description": "Retain: Keeping certain applications in the current environment when they are not suitable for cloud migration or when the timing is not right."
          }
        ]
      }
    },
    "TaskStatus": {
      "type": "string",
      "description": "Status represents the current state of the task",
      "enum": [
        "PENDING",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "BLOCKED",
        "SKIPPED"
      ],
      "x-ms-enum": {
        "name": "TaskStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "PENDING",
            "description": "Task is pending"
          },
          {
            "name": "InProgress",
            "value": "IN_PROGRESS",
            "description": "Task is in progress"
          },
          {
            "name": "Completed",
            "value": "COMPLETED",
            "description": "Task is completed"
          },
          {
            "name": "Failed",
            "value": "FAILED",
            "description": "Task has failed"
          },
          {
            "name": "Blocked",
            "value": "BLOCKED",
            "description": "Task is blocked"
          },
          {
            "name": "Skipped",
            "value": "SKIPPED",
            "description": "Task is skipped"
          }
        ]
      }
    },
    "TaskType": {
      "type": "string",
      "description": "TaskType can be either 'User' or 'System'",
      "enum": [
        "User",
        "System"
      ],
      "x-ms-enum": {
        "name": "TaskType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "User task"
          },
          {
            "name": "System",
            "value": "System",
            "description": "System task"
          }
        ]
      }
    },
    "Wave": {
      "type": "object",
      "description": "Migration Wave resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WaveProperties",
          "description": "The resource-specific properties for this resource."
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WaveListResult": {
      "type": "object",
      "description": "The response of a Wave list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Wave items on this page",
          "items": {
            "$ref": "#/definitions/Wave"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WaveProperties": {
      "type": "object",
      "description": "Migration Wave Properties class.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the wave."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the wave."
        },
        "argquery": {
          "type": "string",
          "description": "ARG query and other details to create workloads within a wave"
        },
        "status": {
          "$ref": "#/definitions/WaveStatus",
          "description": "The status of the wave."
        },
        "plannedStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Planned start time of the wave."
        },
        "plannedCompletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Planned completion time of the wave."
        },
        "migrationStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Actual start time of the wave.",
          "readOnly": true
        },
        "migrationCompletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Actual completion time of the wave.",
          "readOnly": true
        },
        "planningStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Actual start time of the wave.",
          "readOnly": true
        },
        "planningCompletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Actual completion time of the wave.",
          "readOnly": true
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modified time of a wave.",
          "readOnly": true
        },
        "currentStage": {
          "$ref": "#/definitions/WaveStage",
          "description": "The current stage of the wave."
        },
        "compositeMigrationStrategy": {
          "type": "array",
          "description": "The target strategy of the wave.",
          "items": {
            "$ref": "#/definitions/Strategy"
          }
        }
      },
      "required": [
        "displayName",
        "argquery",
        "plannedStartTime",
        "compositeMigrationStrategy"
      ]
    },
    "WaveStage": {
      "type": "string",
      "description": "Preset stage of the wave.",
      "enum": [
        "PlanningInProgress",
        "ReadyForMigration",
        "MigrationInProgress",
        "MigrationCompleted"
      ],
      "x-ms-enum": {
        "name": "WaveStage",
        "modelAsString": true,
        "values": [
          {
            "name": "PlanningInProgress",
            "value": "PlanningInProgress",
            "description": "Planning in progress"
          },
          {
            "name": "ReadyForMigration",
            "value": "ReadyForMigration",
            "description": "Ready for migration"
          },
          {
            "name": "MigrationInProgress",
            "value": "MigrationInProgress",
            "description": "Migration in progress"
          },
          {
            "name": "MigrationCompleted",
            "value": "MigrationCompleted",
            "description": "Migration completed"
          }
        ]
      }
    },
    "WaveStatus": {
      "type": "string",
      "description": "The status of the wave.",
      "enum": [
        "New",
        "OnTrack",
        "AtRisk",
        "OnHold",
        "Completed",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "WaveStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New. Indicates the wave is new and has not been started. This is the default value."
          },
          {
            "name": "OnTrack",
            "value": "OnTrack",
            "description": "On Track. Indicates the wave is on Track."
          },
          {
            "name": "AtRisk",
            "value": "AtRisk",
            "description": "At Risk. Indicates the wave is at risk."
          },
          {
            "name": "OnHold",
            "value": "OnHold",
            "description": "On Hold. Indicates the wave is on hold."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Completed. Indicates the wave is completed."
          },
          {
            "name": "Blocked",
            "value": "Blocked",
            "description": "Blocked. Indicates the wave is blocked."
          }
        ]
      }
    }
  },
  "parameters": {}
}
