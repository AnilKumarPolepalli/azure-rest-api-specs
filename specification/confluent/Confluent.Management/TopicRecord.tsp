import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/openapi";
import "@typespec/rest";
import "./models.tsp";
import "./SCClusterRecord.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using TypeSpec.Http;
using TypeSpec.OpenAPI;

namespace Microsoft.Confluent;
/**
 * Details of topic record
 */
@parentResource(SCClusterRecord)
model TopicRecord is Azure.ResourceManager.ProxyResource<TopicProperties> {
  ...ResourceNameParameter<
    Resource = TopicRecord,
    KeyName = "topicName",
    SegmentName = "topics",
    NamePattern = ""
  >;
}

@armResourceOperations
interface TopicRecords {
  /**
   * Get confluent topic by Name
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("Topics_Get")
  get is ArmResourceRead<TopicRecord>;

  /**
   * Create confluent topics by Name
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("Topics_Create")
  create is ArmResourceCreateOrReplaceSync<TopicRecord>;

  /**
   * Delete confluent topic by name
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("Topics_Delete")
  delete is ArmResourceDeleteWithoutOkAsync<TopicRecord>;

  /**
   * Lists of all the topics in a clusters
   */
  #suppress "@azure-tools/typespec-azure-core/no-openapi" "non-standard operations"
  @operationId("Topics_List")
  list is ArmResourceListByParent<
    TopicRecord,
    Parameters = {
      /**
       * Pagination size
       */
      @query("pageSize")
      pageSize?: int32;

      /**
       * An opaque pagination token to fetch the next set of records
       */
      @query("pageToken")
      pageToken?: string;
    },
    Response = ArmResponse<ListTopicsSuccessResponse>
  >;
}

@@doc(TopicRecord.name, "Confluent kafka or schema registry topic name");
@@doc(TopicRecord.properties, "Topic Properties");
@@doc(TopicRecords.create::parameters.resource,
  "Confluent Topics resource model"
);
